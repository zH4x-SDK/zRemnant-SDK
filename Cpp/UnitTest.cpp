#include "pch.h"
#include "CppUnitTest.h"
#include "SDK.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

#define CHEAT_GEAR_CHECK_OFFSET(targetClass, varName, expectedOffset) \
	Assert::AreEqual(uint32_t(expectedOffset), uint32_t(offsetof(targetClass, varName)), L#targetClass" -> "#varName".")

#define CHEAT_GEAR_CHECK_SIZE(targetClass, expectedSize) \
	Assert::AreEqual(uint32_t(expectedSize), uint32_t(sizeof(targetClass)), L#targetClass" Has a wrong size.")

namespace CheatGearCppUnitTests
{
	TEST_CLASS(CheatGear)
	{
	public:

		// class UBP_FunctionLibrary_C : public UBlueprintFunctionLibrary
		TEST_METHOD(BlueprintGeneratedClass__BP_FunctionLibrary__BP_FunctionLibrary_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_FunctionLibrary_C, 0x0000);
		}

		// class UBlueprintFunctionLibrary : public UObject
		TEST_METHOD(Class__Engine__BlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintFunctionLibrary, 0x0000);
		}

		// class UOnlineBlueprintCallProxyBase : public UObject
		TEST_METHOD(Class__Engine__OnlineBlueprintCallProxyBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineBlueprintCallProxyBase, 0x0000);
		}

		// class UPlayer : public UObject
		TEST_METHOD(Class__Engine__Player)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayer, 0x0000);
		}

		// class UNetConnection : public UPlayer
		TEST_METHOD(Class__Engine__NetConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetConnection, 0x0000);
		}

		// class UNetDriver : public UObject
		TEST_METHOD(Class__Engine__NetDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetDriver, 0x0000);
		}

		// class UBlueprintAsyncActionBase : public UObject
		TEST_METHOD(Class__Engine__BlueprintAsyncActionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintAsyncActionBase, 0x0000);
		}

		// class AActor : public UObject
		TEST_METHOD(Class__Engine__Actor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AActor, 0x0000);
		}

		// class UOnlineEngineInterface : public UObject
		TEST_METHOD(Class__Engine__OnlineEngineInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineEngineInterface, 0x0000);
		}

		// class UDeveloperSettings : public UObject
		TEST_METHOD(Class__Engine__DeveloperSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeveloperSettings, 0x0000);
		}

		// class UOnlineSession : public UObject
		TEST_METHOD(Class__Engine__OnlineSession)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineSession, 0x0000);
		}

		// class UActorComponent : public UObject
		TEST_METHOD(Class__Engine__ActorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorComponent, 0x0000);
		}

		// class USceneComponent : public UActorComponent
		TEST_METHOD(Class__Engine__SceneComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneComponent, 0x0000);
		}

		// class UPrimitiveComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PrimitiveComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrimitiveComponent, 0x0000);
		}

		// class UCurveBase : public UObject
		TEST_METHOD(Class__Engine__CurveBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveBase, 0x0000);
		}

		// class UCurveFloat : public UCurveBase
		TEST_METHOD(Class__Engine__CurveFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveFloat, 0x0000);
		}

		// class UCurveLinearColor : public UCurveBase
		TEST_METHOD(Class__Engine__CurveLinearColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveLinearColor, 0x0000);
		}

		// class UCommandlet : public UObject
		TEST_METHOD(Class__Engine__Commandlet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCommandlet, 0x0000);
		}

		// class UGameInstance : public UObject
		TEST_METHOD(Class__Engine__GameInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameInstance, 0x0000);
		}

		// class USubsystem : public UObject
		TEST_METHOD(Class__Engine__Subsystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubsystem, 0x0000);
		}

		// class UGameInstanceSubsystem : public USubsystem
		TEST_METHOD(Class__Engine__GameInstanceSubsystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameInstanceSubsystem, 0x0000);
		}

		// class UAssetUserData : public UObject
		TEST_METHOD(Class__Engine__AssetUserData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetUserData, 0x0000);
		}

		// class UMeshComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__MeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshComponent, 0x0000);
		}

		// class USkinnedMeshComponent : public UMeshComponent
		TEST_METHOD(Class__Engine__SkinnedMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkinnedMeshComponent, 0x0000);
		}

		// class USkeletalMeshComponent : public USkinnedMeshComponent
		TEST_METHOD(Class__Engine__SkeletalMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshComponent, 0x0000);
		}

		// class UAnimCompress : public UObject
		TEST_METHOD(Class__Engine__AnimCompress)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress, 0x0000);
		}

		// class ALevelScriptActor : public AActor
		TEST_METHOD(Class__Engine__LevelScriptActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelScriptActor, 0x0000);
		}

		// class USaveGame : public UObject
		TEST_METHOD(Class__Engine__SaveGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USaveGame, 0x0000);
		}

		// class UMaterialExpression : public UObject
		TEST_METHOD(Class__Engine__MaterialExpression)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpression, 0x0000);
		}

		// class UMaterialExpressionTextureBase : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTextureBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureBase, 0x0000);
		}

		// class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSample)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSample, 0x0000);
		}

		// class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameter, 0x0000);
		}

		// class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameter2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameter2D, 0x0000);
		}

		// class APawn : public AActor
		TEST_METHOD(Class__Engine__Pawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APawn, 0x0000);
		}

		// class ACharacter : public APawn
		TEST_METHOD(Class__Engine__Character)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter, 0x0000);
		}

		// class UDataAsset : public UObject
		TEST_METHOD(Class__Engine__DataAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDataAsset, 0x0000);
		}

		// class USplineComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__SplineComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USplineComponent, 0x0000);
		}

		// class UAnimInstance : public UObject
		TEST_METHOD(Class__Engine__AnimInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimInstance, 0x0000);
		}

		// class UAudioComponent : public USceneComponent
		TEST_METHOD(Class__Engine__AudioComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioComponent, 0x0000);
		}

		// class UAssetImportData : public UObject
		TEST_METHOD(Class__Engine__AssetImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetImportData, 0x0000);
		}

		// class UMovementComponent : public UActorComponent
		TEST_METHOD(Class__Engine__MovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovementComponent, 0x0000);
		}

		// class UNavMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__NavMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavMovementComponent, 0x0000);
		}

		// class UPawnMovementComponent : public UNavMovementComponent
		TEST_METHOD(Class__Engine__PawnMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnMovementComponent, 0x0000);
		}

		// class UCharacterMovementComponent : public UPawnMovementComponent
		TEST_METHOD(Class__Engine__CharacterMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMovementComponent, 0x0000);
		}

		// class UAnimNotify : public UObject
		TEST_METHOD(Class__Engine__AnimNotify)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify, 0x0000);
		}

		// class AInfo : public AActor
		TEST_METHOD(Class__Engine__Info)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInfo, 0x0000);
		}

		// class APlayerState : public AInfo
		TEST_METHOD(Class__Engine__PlayerState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerState, 0x0000);
		}

		// class AController : public AActor
		TEST_METHOD(Class__Engine__Controller)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AController, 0x0000);
		}

		// class APlayerController : public AController
		TEST_METHOD(Class__Engine__PlayerController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerController, 0x0000);
		}

		// class UCheatManager : public UObject
		TEST_METHOD(Class__Engine__CheatManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheatManager, 0x0000);
		}

		// class UStaticMeshComponent : public UMeshComponent
		TEST_METHOD(Class__Engine__StaticMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMeshComponent, 0x0000);
		}

		// class AGameModeBase : public AInfo
		TEST_METHOD(Class__Engine__GameModeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameModeBase, 0x0000);
		}

		// class AGameMode : public AGameModeBase
		TEST_METHOD(Class__Engine__GameMode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameMode, 0x0000);
		}

		// class AGameSession : public AInfo
		TEST_METHOD(Class__Engine__GameSession)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameSession, 0x0000);
		}

		// class AGameStateBase : public AInfo
		TEST_METHOD(Class__Engine__GameStateBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameStateBase, 0x0000);
		}

		// class AGameState : public AGameStateBase
		TEST_METHOD(Class__Engine__GameState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameState, 0x0000);
		}

		// class AHUD : public AActor
		TEST_METHOD(Class__Engine__HUD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AHUD, 0x0000);
		}

		// class ADefaultPawn : public APawn
		TEST_METHOD(Class__Engine__DefaultPawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADefaultPawn, 0x0000);
		}

		// class ASpectatorPawn : public ADefaultPawn
		TEST_METHOD(Class__Engine__SpectatorPawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpectatorPawn, 0x0000);
		}

		// class UCameraComponent : public USceneComponent
		TEST_METHOD(Class__Engine__CameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraComponent, 0x0000);
		}

		// class UDecalComponent : public USceneComponent
		TEST_METHOD(Class__Engine__DecalComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDecalComponent, 0x0000);
		}

		// class UNavAreaBase : public UObject
		TEST_METHOD(Class__Engine__NavAreaBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAreaBase, 0x0000);
		}

		// class UAnimNotifyState : public UObject
		TEST_METHOD(Class__Engine__AnimNotifyState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState, 0x0000);
		}

		// class UAnimNotify_PlayParticleEffect : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_PlayParticleEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayParticleEffect, 0x0000);
		}

		// class UAnimNotifyState_Trail : public UAnimNotifyState
		TEST_METHOD(Class__Engine__AnimNotifyState_Trail)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Trail, 0x0000);
		}

		// class ABrush : public AActor
		TEST_METHOD(Class__Engine__Brush)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABrush, 0x0000);
		}

		// class AVolume : public ABrush
		TEST_METHOD(Class__Engine__Volume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVolume, 0x0000);
		}

		// class AAudioVolume : public AVolume
		TEST_METHOD(Class__Engine__AudioVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAudioVolume, 0x0000);
		}

		// class UCameraModifier : public UObject
		TEST_METHOD(Class__Engine__CameraModifier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraModifier, 0x0000);
		}

		// class UDamageType : public UObject
		TEST_METHOD(Class__Engine__DamageType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType, 0x0000);
		}

		// class UGameUserSettings : public UObject
		TEST_METHOD(Class__Engine__GameUserSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameUserSettings, 0x0000);
		}

		// class UEngine : public UObject
		TEST_METHOD(Class__Engine__Engine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngine, 0x0000);
		}

		// class UScriptViewportClient : public UObject
		TEST_METHOD(Class__Engine__ScriptViewportClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScriptViewportClient, 0x0000);
		}

		// class UGameViewportClient : public UScriptViewportClient
		TEST_METHOD(Class__Engine__GameViewportClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameViewportClient, 0x0000);
		}

		// class USoundMix : public UObject
		TEST_METHOD(Class__Engine__SoundMix)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundMix, 0x0000);
		}

		// class UWorld : public UObject
		TEST_METHOD(Class__Engine__World)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorld, 0x0000);
		}

		// class UNavigationSystemBase : public UObject
		TEST_METHOD(Class__Engine__NavigationSystemBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemBase, 0x0000);
		}

		// class APlayerCameraManager : public AActor
		TEST_METHOD(Class__Engine__PlayerCameraManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerCameraManager, 0x0000);
		}

		// class UPostProcessComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PostProcessComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPostProcessComponent, 0x0000);
		}

		// class UProjectileMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__ProjectileMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProjectileMovementComponent, 0x0000);
		}

		// class UShapeComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ShapeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShapeComponent, 0x0000);
		}

		// class UCapsuleComponent : public UShapeComponent
		TEST_METHOD(Class__Engine__CapsuleComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCapsuleComponent, 0x0000);
		}

		// class UTextRenderComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__TextRenderComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextRenderComponent, 0x0000);
		}

		// class ALODActor : public AActor
		TEST_METHOD(Class__Engine__LODActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALODActor, 0x0000);
		}

		// class ASkyLight : public AInfo
		TEST_METHOD(Class__Engine__SkyLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASkyLight, 0x0000);
		}

		// class UTexture : public UObject
		TEST_METHOD(Class__Engine__Texture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTexture, 0x0000);
		}

		// class UTextureCube : public UTexture
		TEST_METHOD(Class__Engine__TextureCube)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureCube, 0x0000);
		}

		// class UInstancedStaticMeshComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Engine__InstancedStaticMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInstancedStaticMeshComponent, 0x0000);
		}

		// class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
		TEST_METHOD(Class__Engine__HierarchicalInstancedStaticMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHierarchicalInstancedStaticMeshComponent, 0x0000);
		}

		// class AStaticMeshActor : public AActor
		TEST_METHOD(Class__Engine__StaticMeshActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AStaticMeshActor, 0x0000);
		}

		// class UMaterialInterface : public UObject
		TEST_METHOD(Class__Engine__MaterialInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInterface, 0x0000);
		}

		// class UMaterialInstance : public UMaterialInterface
		TEST_METHOD(Class__Engine__MaterialInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInstance, 0x0000);
		}

		// class UMaterialInstanceConstant : public UMaterialInstance
		TEST_METHOD(Class__Engine__MaterialInstanceConstant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInstanceConstant, 0x0000);
		}

		// class UMaterialExpressionCustomOutput : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCustomOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCustomOutput, 0x0000);
		}

		// class UEngineCustomTimeStep : public UObject
		TEST_METHOD(Class__Engine__EngineCustomTimeStep)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineCustomTimeStep, 0x0000);
		}

		// class UDynamicBlueprintBinding : public UObject
		TEST_METHOD(Class__Engine__DynamicBlueprintBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDynamicBlueprintBinding, 0x0000);
		}

		// class UBlueprintGeneratedClass : public UClass
		TEST_METHOD(Class__Engine__BlueprintGeneratedClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintGeneratedClass, 0x0000);
		}

		// class ACameraActor : public AActor
		TEST_METHOD(Class__Engine__CameraActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraActor, 0x0000);
		}

		// class USoundEffectPreset : public UObject
		TEST_METHOD(Class__Engine__SoundEffectPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectPreset, 0x0000);
		}

		// class USoundEffectSubmixPreset : public USoundEffectPreset
		TEST_METHOD(Class__Engine__SoundEffectSubmixPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectSubmixPreset, 0x0000);
		}

		// class USoundBase : public UObject
		TEST_METHOD(Class__Engine__SoundBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundBase, 0x0000);
		}

		// class USoundWave : public USoundBase
		TEST_METHOD(Class__Engine__SoundWave)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundWave, 0x0000);
		}

		// class USoundWaveProcedural : public USoundWave
		TEST_METHOD(Class__Engine__SoundWaveProcedural)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundWaveProcedural, 0x0000);
		}

		// class UBlueprintCore : public UObject
		TEST_METHOD(Class__Engine__BlueprintCore)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintCore, 0x0000);
		}

		// class UBlueprint : public UBlueprintCore
		TEST_METHOD(Class__Engine__Blueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprint, 0x0000);
		}

		// class UModel : public UObject
		TEST_METHOD(Class__Engine__Model)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UModel, 0x0000);
		}

		// class UChannel : public UObject
		TEST_METHOD(Class__Engine__Channel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChannel, 0x0000);
		}

		// class UActorChannel : public UChannel
		TEST_METHOD(Class__Engine__ActorChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorChannel, 0x0000);
		}

		// class UAnimationAsset : public UObject
		TEST_METHOD(Class__Engine__AnimationAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationAsset, 0x0000);
		}

		// class UBlendSpaceBase : public UAnimationAsset
		TEST_METHOD(Class__Engine__BlendSpaceBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendSpaceBase, 0x0000);
		}

		// class UBlendSpace : public UBlendSpaceBase
		TEST_METHOD(Class__Engine__BlendSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendSpace, 0x0000);
		}

		// class UAimOffsetBlendSpace : public UBlendSpace
		TEST_METHOD(Class__Engine__AimOffsetBlendSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAimOffsetBlendSpace, 0x0000);
		}

		// class UBlendSpace1D : public UBlendSpaceBase
		TEST_METHOD(Class__Engine__BlendSpace1D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendSpace1D, 0x0000);
		}

		// class UAimOffsetBlendSpace1D : public UBlendSpace1D
		TEST_METHOD(Class__Engine__AimOffsetBlendSpace1D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAimOffsetBlendSpace1D, 0x0000);
		}

		// class UAISystemBase : public UObject
		TEST_METHOD(Class__Engine__AISystemBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISystemBase, 0x0000);
		}

		// class AAmbientSound : public AActor
		TEST_METHOD(Class__Engine__AmbientSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmbientSound, 0x0000);
		}

		// class UAnimationSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__AnimationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationSettings, 0x0000);
		}

		// class UAnimBlueprint : public UBlueprint
		TEST_METHOD(Class__Engine__AnimBlueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimBlueprint, 0x0000);
		}

		// class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
		TEST_METHOD(Class__Engine__AnimBlueprintGeneratedClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimBlueprintGeneratedClass, 0x0000);
		}

		// class UAnimClassData : public UObject
		TEST_METHOD(Class__Engine__AnimClassData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimClassData, 0x0000);
		}

		// class UAnimClassInterface : public UInterface
		TEST_METHOD(Class__Engine__AnimClassInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimClassInterface, 0x0000);
		}

		// class UAnimSequenceBase : public UAnimationAsset
		TEST_METHOD(Class__Engine__AnimSequenceBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSequenceBase, 0x0000);
		}

		// class UAnimCompositeBase : public UAnimSequenceBase
		TEST_METHOD(Class__Engine__AnimCompositeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompositeBase, 0x0000);
		}

		// class UAnimComposite : public UAnimCompositeBase
		TEST_METHOD(Class__Engine__AnimComposite)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimComposite, 0x0000);
		}

		// class UAnimCompress_Automatic : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_Automatic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_Automatic, 0x0000);
		}

		// class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_BitwiseCompressOnly)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_BitwiseCompressOnly, 0x0000);
		}

		// class UAnimCompress_LeastDestructive : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_LeastDestructive)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_LeastDestructive, 0x0000);
		}

		// class UAnimCompress_RemoveLinearKeys : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_RemoveLinearKeys)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_RemoveLinearKeys, 0x0000);
		}

		// class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
		TEST_METHOD(Class__Engine__AnimCompress_PerTrackCompression)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_PerTrackCompression, 0x0000);
		}

		// class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_RemoveEverySecondKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_RemoveEverySecondKey, 0x0000);
		}

		// class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_RemoveTrivialKeys)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_RemoveTrivialKeys, 0x0000);
		}

		// class UAnimCurveCompressionCodec : public UObject
		TEST_METHOD(Class__Engine__AnimCurveCompressionCodec)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCurveCompressionCodec, 0x0000);
		}

		// class UAnimCurveCompressionCodec_CompressedRichCurve : public UAnimCurveCompressionCodec
		TEST_METHOD(Class__Engine__AnimCurveCompressionCodec_CompressedRichCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCurveCompressionCodec_CompressedRichCurve, 0x0000);
		}

		// class UAnimCurveCompressionCodec_UniformlySampled : public UAnimCurveCompressionCodec
		TEST_METHOD(Class__Engine__AnimCurveCompressionCodec_UniformlySampled)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCurveCompressionCodec_UniformlySampled, 0x0000);
		}

		// class UAnimCurveCompressionSettings : public UObject
		TEST_METHOD(Class__Engine__AnimCurveCompressionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCurveCompressionSettings, 0x0000);
		}

		// class UAnimMetaData : public UObject
		TEST_METHOD(Class__Engine__AnimMetaData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimMetaData, 0x0000);
		}

		// class UAnimMontage : public UAnimCompositeBase
		TEST_METHOD(Class__Engine__AnimMontage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimMontage, 0x0000);
		}

		// class UAnimNotify_PauseClothingSimulation : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_PauseClothingSimulation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PauseClothingSimulation, 0x0000);
		}

		// class UAnimNotify_PlaySound : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_PlaySound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlaySound, 0x0000);
		}

		// class UAnimNotify_ResetClothingSimulation : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_ResetClothingSimulation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ResetClothingSimulation, 0x0000);
		}

		// class UAnimNotify_ResetDynamics : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_ResetDynamics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ResetDynamics, 0x0000);
		}

		// class UAnimNotify_ResumeClothingSimulation : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_ResumeClothingSimulation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ResumeClothingSimulation, 0x0000);
		}

		// class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
		TEST_METHOD(Class__Engine__AnimNotifyState_DisableRootMotion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_DisableRootMotion, 0x0000);
		}

		// class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
		TEST_METHOD(Class__Engine__AnimNotifyState_TimedParticleEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_TimedParticleEffect, 0x0000);
		}

		// class UAnimSequence : public UAnimSequenceBase
		TEST_METHOD(Class__Engine__AnimSequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSequence, 0x0000);
		}

		// class UAnimSet : public UObject
		TEST_METHOD(Class__Engine__AnimSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSet, 0x0000);
		}

		// class UAnimSingleNodeInstance : public UAnimInstance
		TEST_METHOD(Class__Engine__AnimSingleNodeInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSingleNodeInstance, 0x0000);
		}

		// class UAnimStateMachineTypes : public UObject
		TEST_METHOD(Class__Engine__AnimStateMachineTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimStateMachineTypes, 0x0000);
		}

		// class UApplicationLifecycleComponent : public UActorComponent
		TEST_METHOD(Class__Engine__ApplicationLifecycleComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UApplicationLifecycleComponent, 0x0000);
		}

		// class UArrowComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ArrowComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArrowComponent, 0x0000);
		}

		// class UAssetExportTask : public UObject
		TEST_METHOD(Class__Engine__AssetExportTask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetExportTask, 0x0000);
		}

		// class UAssetManager : public UObject
		TEST_METHOD(Class__Engine__AssetManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetManager, 0x0000);
		}

		// class UAssetManagerSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__AssetManagerSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetManagerSettings, 0x0000);
		}

		// class UAssetMappingTable : public UObject
		TEST_METHOD(Class__Engine__AssetMappingTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetMappingTable, 0x0000);
		}

		// class UAsyncActionLoadPrimaryAssetBase : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetBase, 0x0000);
		}

		// class UAsyncActionLoadPrimaryAsset : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAsset, 0x0000);
		}

		// class UAsyncActionLoadPrimaryAssetClass : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetClass, 0x0000);
		}

		// class UAsyncActionLoadPrimaryAssetList : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetList, 0x0000);
		}

		// class UAsyncActionLoadPrimaryAssetClassList : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetClassList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetClassList, 0x0000);
		}

		// class UAsyncActionChangePrimaryAssetBundles : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionChangePrimaryAssetBundles)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionChangePrimaryAssetBundles, 0x0000);
		}

		// class AAtmosphericFog : public AInfo
		TEST_METHOD(Class__Engine__AtmosphericFog)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtmosphericFog, 0x0000);
		}

		// class UAtmosphericFogComponent : public USceneComponent
		TEST_METHOD(Class__Engine__AtmosphericFogComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtmosphericFogComponent, 0x0000);
		}

		// class UAudioSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__AudioSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioSettings, 0x0000);
		}

		// class UAutomationTestSettings : public UObject
		TEST_METHOD(Class__Engine__AutomationTestSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAutomationTestSettings, 0x0000);
		}

		// class UAvoidanceManager : public UObject
		TEST_METHOD(Class__Engine__AvoidanceManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAvoidanceManager, 0x0000);
		}

		// class UBillboardComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__BillboardComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBillboardComponent, 0x0000);
		}

		// class UBlendableInterface : public UInterface
		TEST_METHOD(Class__Engine__BlendableInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendableInterface, 0x0000);
		}

		// class USkeleton : public UObject
		TEST_METHOD(Class__Engine__Skeleton)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeleton, 0x0000);
		}

		// class UBlendProfile : public UObject
		TEST_METHOD(Class__Engine__BlendProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendProfile, 0x0000);
		}

		// class ABlockingVolume : public AVolume
		TEST_METHOD(Class__Engine__BlockingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABlockingVolume, 0x0000);
		}

		// class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__BlueprintMapLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintMapLibrary, 0x0000);
		}

		// class UBlueprintPathsLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__BlueprintPathsLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintPathsLibrary, 0x0000);
		}

		// class UPlatformGameInstance : public UGameInstance
		TEST_METHOD(Class__Engine__PlatformGameInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformGameInstance, 0x0000);
		}

		// class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__BlueprintPlatformLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintPlatformLibrary, 0x0000);
		}

		// class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__BlueprintSetLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintSetLibrary, 0x0000);
		}

		// class UBodySetup : public UObject
		TEST_METHOD(Class__Engine__BodySetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBodySetup, 0x0000);
		}

		// class UBoneMaskFilter : public UObject
		TEST_METHOD(Class__Engine__BoneMaskFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoneMaskFilter, 0x0000);
		}

		// class UBookmarkBase : public UObject
		TEST_METHOD(Class__Engine__BookmarkBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBookmarkBase, 0x0000);
		}

		// class UBookMark : public UBookmarkBase
		TEST_METHOD(Class__Engine__BookMark)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBookMark, 0x0000);
		}

		// class UBookMark2D : public UBookmarkBase
		TEST_METHOD(Class__Engine__BookMark2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBookMark2D, 0x0000);
		}

		// class UBoxComponent : public UShapeComponent
		TEST_METHOD(Class__Engine__BoxComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoxComponent, 0x0000);
		}

		// class AReflectionCapture : public AActor
		TEST_METHOD(Class__Engine__ReflectionCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AReflectionCapture, 0x0000);
		}

		// class ABoxReflectionCapture : public AReflectionCapture
		TEST_METHOD(Class__Engine__BoxReflectionCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABoxReflectionCapture, 0x0000);
		}

		// class UReflectionCaptureComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ReflectionCaptureComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReflectionCaptureComponent, 0x0000);
		}

		// class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
		TEST_METHOD(Class__Engine__BoxReflectionCaptureComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoxReflectionCaptureComponent, 0x0000);
		}

		// class UBreakpoint : public UObject
		TEST_METHOD(Class__Engine__Breakpoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBreakpoint, 0x0000);
		}

		// class UBrushBuilder : public UObject
		TEST_METHOD(Class__Engine__BrushBuilder)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrushBuilder, 0x0000);
		}

		// class UBrushComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__BrushComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrushComponent, 0x0000);
		}

		// class ABrushShape : public ABrush
		TEST_METHOD(Class__Engine__BrushShape)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABrushShape, 0x0000);
		}

		// class UButtonStyleAsset : public UObject
		TEST_METHOD(Class__Engine__ButtonStyleAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButtonStyleAsset, 0x0000);
		}

		// class UCameraAnim : public UObject
		TEST_METHOD(Class__Engine__CameraAnim)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraAnim, 0x0000);
		}

		// class UCameraAnimInst : public UObject
		TEST_METHOD(Class__Engine__CameraAnimInst)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraAnimInst, 0x0000);
		}

		// class ACameraBlockingVolume : public AVolume
		TEST_METHOD(Class__Engine__CameraBlockingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraBlockingVolume, 0x0000);
		}

		// class UCameraModifier_CameraShake : public UCameraModifier
		TEST_METHOD(Class__Engine__CameraModifier_CameraShake)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraModifier_CameraShake, 0x0000);
		}

		// class UCameraShake : public UObject
		TEST_METHOD(Class__Engine__CameraShake)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake, 0x0000);
		}

		// class UCanvas : public UObject
		TEST_METHOD(Class__Engine__Canvas)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvas, 0x0000);
		}

		// class UTextureRenderTarget : public UTexture
		TEST_METHOD(Class__Engine__TextureRenderTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureRenderTarget, 0x0000);
		}

		// class UTextureRenderTarget2D : public UTextureRenderTarget
		TEST_METHOD(Class__Engine__TextureRenderTarget2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureRenderTarget2D, 0x0000);
		}

		// class UCanvasRenderTarget2D : public UTextureRenderTarget2D
		TEST_METHOD(Class__Engine__CanvasRenderTarget2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvasRenderTarget2D, 0x0000);
		}

		// class UCheckBoxStyleAsset : public UObject
		TEST_METHOD(Class__Engine__CheckBoxStyleAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckBoxStyleAsset, 0x0000);
		}

		// class UChildActorComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ChildActorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChildActorComponent, 0x0000);
		}

		// class UChildConnection : public UNetConnection
		TEST_METHOD(Class__Engine__ChildConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChildConnection, 0x0000);
		}

		// class UPlatformInterfaceBase : public UObject
		TEST_METHOD(Class__Engine__PlatformInterfaceBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformInterfaceBase, 0x0000);
		}

		// class UCloudStorageBase : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__CloudStorageBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCloudStorageBase, 0x0000);
		}

		// class UCollisionProfile : public UDeveloperSettings
		TEST_METHOD(Class__Engine__CollisionProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCollisionProfile, 0x0000);
		}

		// class UComponentDelegateBinding : public UDynamicBlueprintBinding
		TEST_METHOD(Class__Engine__ComponentDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComponentDelegateBinding, 0x0000);
		}

		// class UCurveTable : public UObject
		TEST_METHOD(Class__Engine__CurveTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveTable, 0x0000);
		}

		// class UCompositeCurveTable : public UCurveTable
		TEST_METHOD(Class__Engine__CompositeCurveTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompositeCurveTable, 0x0000);
		}

		// class UDataTable : public UObject
		TEST_METHOD(Class__Engine__DataTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDataTable, 0x0000);
		}

		// class UCompositeDataTable : public UDataTable
		TEST_METHOD(Class__Engine__CompositeDataTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompositeDataTable, 0x0000);
		}

		// class UConsole : public UObject
		TEST_METHOD(Class__Engine__Console)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConsole, 0x0000);
		}

		// class UControlChannel : public UChannel
		TEST_METHOD(Class__Engine__ControlChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UControlChannel, 0x0000);
		}

		// class UControlRigInterface : public UInterface
		TEST_METHOD(Class__Engine__ControlRigInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UControlRigInterface, 0x0000);
		}

		// class UStreamingSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__StreamingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStreamingSettings, 0x0000);
		}

		// class UGarbageCollectionSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__GarbageCollectionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGarbageCollectionSettings, 0x0000);
		}

		// class ACullDistanceVolume : public AVolume
		TEST_METHOD(Class__Engine__CullDistanceVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACullDistanceVolume, 0x0000);
		}

		// class UCurveEdPresetCurve : public UObject
		TEST_METHOD(Class__Engine__CurveEdPresetCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveEdPresetCurve, 0x0000);
		}

		// class UTexture2D : public UTexture
		TEST_METHOD(Class__Engine__Texture2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTexture2D, 0x0000);
		}

		// class UCurveLinearColorAtlas : public UTexture2D
		TEST_METHOD(Class__Engine__CurveLinearColorAtlas)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveLinearColorAtlas, 0x0000);
		}

		// class UCurveSourceInterface : public UInterface
		TEST_METHOD(Class__Engine__CurveSourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveSourceInterface, 0x0000);
		}

		// class UCurveVector : public UCurveBase
		TEST_METHOD(Class__Engine__CurveVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveVector, 0x0000);
		}

		// class UPrimaryDataAsset : public UDataAsset
		TEST_METHOD(Class__Engine__PrimaryDataAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrimaryDataAsset, 0x0000);
		}

		// class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__DataTableFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDataTableFunctionLibrary, 0x0000);
		}

		// class ADebugCameraController : public APlayerController
		TEST_METHOD(Class__Engine__DebugCameraController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADebugCameraController, 0x0000);
		}

		// class ADebugCameraHUD : public AHUD
		TEST_METHOD(Class__Engine__DebugCameraHUD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADebugCameraHUD, 0x0000);
		}

		// class UDebugDrawService : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__DebugDrawService)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDebugDrawService, 0x0000);
		}

		// class ADecalActor : public AActor
		TEST_METHOD(Class__Engine__DecalActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADecalActor, 0x0000);
		}

		// class APhysicsVolume : public AVolume
		TEST_METHOD(Class__Engine__PhysicsVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsVolume, 0x0000);
		}

		// class ADefaultPhysicsVolume : public APhysicsVolume
		TEST_METHOD(Class__Engine__DefaultPhysicsVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADefaultPhysicsVolume, 0x0000);
		}

		// class UDemoNetConnection : public UNetConnection
		TEST_METHOD(Class__Engine__DemoNetConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDemoNetConnection, 0x0000);
		}

		// class UDemoNetDriver : public UNetDriver
		TEST_METHOD(Class__Engine__DemoNetDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDemoNetDriver, 0x0000);
		}

		// class UPendingNetGame : public UObject
		TEST_METHOD(Class__Engine__PendingNetGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPendingNetGame, 0x0000);
		}

		// class UDemoPendingNetGame : public UPendingNetGame
		TEST_METHOD(Class__Engine__DemoPendingNetGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDemoPendingNetGame, 0x0000);
		}

		// class UDestructibleInterface : public UInterface
		TEST_METHOD(Class__Engine__DestructibleInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDestructibleInterface, 0x0000);
		}

		// class UTextureLODSettings : public UObject
		TEST_METHOD(Class__Engine__TextureLODSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureLODSettings, 0x0000);
		}

		// class UDeviceProfile : public UTextureLODSettings
		TEST_METHOD(Class__Engine__DeviceProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeviceProfile, 0x0000);
		}

		// class UDeviceProfileManager : public UObject
		TEST_METHOD(Class__Engine__DeviceProfileManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeviceProfileManager, 0x0000);
		}

		// class UDialogueSoundWaveProxy : public USoundBase
		TEST_METHOD(Class__Engine__DialogueSoundWaveProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogueSoundWaveProxy, 0x0000);
		}

		// class UDialogueVoice : public UObject
		TEST_METHOD(Class__Engine__DialogueVoice)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogueVoice, 0x0000);
		}

		// class UDialogueWave : public UObject
		TEST_METHOD(Class__Engine__DialogueWave)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogueWave, 0x0000);
		}

		// class ALight : public AActor
		TEST_METHOD(Class__Engine__Light)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALight, 0x0000);
		}

		// class ADirectionalLight : public ALight
		TEST_METHOD(Class__Engine__DirectionalLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADirectionalLight, 0x0000);
		}

		// class ULightComponentBase : public USceneComponent
		TEST_METHOD(Class__Engine__LightComponentBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightComponentBase, 0x0000);
		}

		// class ULightComponent : public ULightComponentBase
		TEST_METHOD(Class__Engine__LightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightComponent, 0x0000);
		}

		// class UDirectionalLightComponent : public ULightComponent
		TEST_METHOD(Class__Engine__DirectionalLightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDirectionalLightComponent, 0x0000);
		}

		// class UDistribution : public UObject
		TEST_METHOD(Class__Engine__Distribution)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistribution, 0x0000);
		}

		// class UDistributionFloat : public UDistribution
		TEST_METHOD(Class__Engine__DistributionFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloat, 0x0000);
		}

		// class UDistributionFloatConstant : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatConstant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatConstant, 0x0000);
		}

		// class UDistributionFloatConstantCurve : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatConstantCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatConstantCurve, 0x0000);
		}

		// class UDistributionFloatParameterBase : public UDistributionFloatConstant
		TEST_METHOD(Class__Engine__DistributionFloatParameterBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatParameterBase, 0x0000);
		}

		// class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
		TEST_METHOD(Class__Engine__DistributionFloatParticleParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatParticleParameter, 0x0000);
		}

		// class UDistributionFloatUniform : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatUniform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatUniform, 0x0000);
		}

		// class UDistributionFloatUniformCurve : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatUniformCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatUniformCurve, 0x0000);
		}

		// class UDistributionVector : public UDistribution
		TEST_METHOD(Class__Engine__DistributionVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVector, 0x0000);
		}

		// class UDistributionVectorConstant : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorConstant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorConstant, 0x0000);
		}

		// class UDistributionVectorConstantCurve : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorConstantCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorConstantCurve, 0x0000);
		}

		// class UDistributionVectorParameterBase : public UDistributionVectorConstant
		TEST_METHOD(Class__Engine__DistributionVectorParameterBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorParameterBase, 0x0000);
		}

		// class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
		TEST_METHOD(Class__Engine__DistributionVectorParticleParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorParticleParameter, 0x0000);
		}

		// class UDistributionVectorUniform : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorUniform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorUniform, 0x0000);
		}

		// class UDistributionVectorUniformCurve : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorUniformCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorUniformCurve, 0x0000);
		}

		// class ADocumentationActor : public AActor
		TEST_METHOD(Class__Engine__DocumentationActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADocumentationActor, 0x0000);
		}

		// class UDPICustomScalingRule : public UObject
		TEST_METHOD(Class__Engine__DPICustomScalingRule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDPICustomScalingRule, 0x0000);
		}

		// class UDrawFrustumComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__DrawFrustumComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDrawFrustumComponent, 0x0000);
		}

		// class USphereComponent : public UShapeComponent
		TEST_METHOD(Class__Engine__SphereComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USphereComponent, 0x0000);
		}

		// class UDrawSphereComponent : public USphereComponent
		TEST_METHOD(Class__Engine__DrawSphereComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDrawSphereComponent, 0x0000);
		}

		// class UEdGraph : public UObject
		TEST_METHOD(Class__Engine__EdGraph)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraph, 0x0000);
		}

		// class UEdGraphNode : public UObject
		TEST_METHOD(Class__Engine__EdGraphNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphNode, 0x0000);
		}

		// class UEdGraphNode_Documentation : public UEdGraphNode
		TEST_METHOD(Class__Engine__EdGraphNode_Documentation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphNode_Documentation, 0x0000);
		}

		// class UEdGraphPin_Deprecated : public UObject
		TEST_METHOD(Class__Engine__EdGraphPin_Deprecated)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphPin_Deprecated, 0x0000);
		}

		// class UEdGraphSchema : public UObject
		TEST_METHOD(Class__Engine__EdGraphSchema)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphSchema, 0x0000);
		}

		// class AEmitter : public AActor
		TEST_METHOD(Class__Engine__Emitter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEmitter, 0x0000);
		}

		// class AEmitterCameraLensEffectBase : public AEmitter
		TEST_METHOD(Class__Engine__EmitterCameraLensEffectBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEmitterCameraLensEffectBase, 0x0000);
		}

		// class UEngineBaseTypes : public UObject
		TEST_METHOD(Class__Engine__EngineBaseTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineBaseTypes, 0x0000);
		}

		// class UEngineHandlerComponentFactory : public UHandlerComponentFactory
		TEST_METHOD(Class__Engine__EngineHandlerComponentFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineHandlerComponentFactory, 0x0000);
		}

		// class ULocalMessage : public UObject
		TEST_METHOD(Class__Engine__LocalMessage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalMessage, 0x0000);
		}

		// class UEngineMessage : public ULocalMessage
		TEST_METHOD(Class__Engine__EngineMessage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineMessage, 0x0000);
		}

		// class UDynamicSubsystem : public USubsystem
		TEST_METHOD(Class__Engine__DynamicSubsystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDynamicSubsystem, 0x0000);
		}

		// class UEngineSubsystem : public UDynamicSubsystem
		TEST_METHOD(Class__Engine__EngineSubsystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineSubsystem, 0x0000);
		}

		// class UEngineTypes : public UObject
		TEST_METHOD(Class__Engine__EngineTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineTypes, 0x0000);
		}

		// class AExponentialHeightFog : public AInfo
		TEST_METHOD(Class__Engine__ExponentialHeightFog)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AExponentialHeightFog, 0x0000);
		}

		// class UExponentialHeightFogComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ExponentialHeightFogComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UExponentialHeightFogComponent, 0x0000);
		}

		// class UExporter : public UObject
		TEST_METHOD(Class__Engine__Exporter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UExporter, 0x0000);
		}

		// class UFloatingPawnMovement : public UPawnMovementComponent
		TEST_METHOD(Class__Engine__FloatingPawnMovement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFloatingPawnMovement, 0x0000);
		}

		// class UFont : public UObject
		TEST_METHOD(Class__Engine__Font)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFont, 0x0000);
		}

		// class UFontFace : public UObject
		TEST_METHOD(Class__Engine__FontFace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontFace, 0x0000);
		}

		// class UFontImportOptions : public UObject
		TEST_METHOD(Class__Engine__FontImportOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontImportOptions, 0x0000);
		}

		// class UForceFeedbackAttenuation : public UObject
		TEST_METHOD(Class__Engine__ForceFeedbackAttenuation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UForceFeedbackAttenuation, 0x0000);
		}

		// class UForceFeedbackComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ForceFeedbackComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UForceFeedbackComponent, 0x0000);
		}

		// class UForceFeedbackEffect : public UObject
		TEST_METHOD(Class__Engine__ForceFeedbackEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UForceFeedbackEffect, 0x0000);
		}

		// class UGameEngine : public UEngine
		TEST_METHOD(Class__Engine__GameEngine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameEngine, 0x0000);
		}

		// class AGameNetworkManager : public AInfo
		TEST_METHOD(Class__Engine__GameNetworkManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameNetworkManager, 0x0000);
		}

		// class UGameplayStatics : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__GameplayStatics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayStatics, 0x0000);
		}

		// class ASpotLight : public ALight
		TEST_METHOD(Class__Engine__SpotLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpotLight, 0x0000);
		}

		// class AGeneratedMeshAreaLight : public ASpotLight
		TEST_METHOD(Class__Engine__GeneratedMeshAreaLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneratedMeshAreaLight, 0x0000);
		}

		// class UHapticFeedbackEffect_Base : public UObject
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_Base, 0x0000);
		}

		// class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_Buffer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_Buffer, 0x0000);
		}

		// class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_Curve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_Curve, 0x0000);
		}

		// class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_SoundWave)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_SoundWave, 0x0000);
		}

		// class UHealthSnapshotBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__HealthSnapshotBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHealthSnapshotBlueprintLibrary, 0x0000);
		}

		// class UHLODProxy : public UObject
		TEST_METHOD(Class__Engine__HLODProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHLODProxy, 0x0000);
		}

		// class UAmbisonicsSubmixSettingsBase : public UObject
		TEST_METHOD(Class__Engine__AmbisonicsSubmixSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAmbisonicsSubmixSettingsBase, 0x0000);
		}

		// class USpatializationPluginSourceSettingsBase : public UObject
		TEST_METHOD(Class__Engine__SpatializationPluginSourceSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpatializationPluginSourceSettingsBase, 0x0000);
		}

		// class UOcclusionPluginSourceSettingsBase : public UObject
		TEST_METHOD(Class__Engine__OcclusionPluginSourceSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOcclusionPluginSourceSettingsBase, 0x0000);
		}

		// class USoundModulationPluginSourceSettingsBase : public UObject
		TEST_METHOD(Class__Engine__SoundModulationPluginSourceSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundModulationPluginSourceSettingsBase, 0x0000);
		}

		// class UReverbPluginSourceSettingsBase : public UObject
		TEST_METHOD(Class__Engine__ReverbPluginSourceSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReverbPluginSourceSettingsBase, 0x0000);
		}

		// class UImportanceSamplingLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__ImportanceSamplingLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImportanceSamplingLibrary, 0x0000);
		}

		// class UImportantToggleSettingInterface : public UInterface
		TEST_METHOD(Class__Engine__ImportantToggleSettingInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImportantToggleSettingInterface, 0x0000);
		}

		// class UInGameAdManager : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__InGameAdManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInGameAdManager, 0x0000);
		}

		// class UInheritableComponentHandler : public UObject
		TEST_METHOD(Class__Engine__InheritableComponentHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInheritableComponentHandler, 0x0000);
		}

		// class UInputDelegateBinding : public UDynamicBlueprintBinding
		TEST_METHOD(Class__Engine__InputDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputDelegateBinding, 0x0000);
		}

		// class UInputActionDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputActionDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputActionDelegateBinding, 0x0000);
		}

		// class UInputAxisDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputAxisDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputAxisDelegateBinding, 0x0000);
		}

		// class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputAxisKeyDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputAxisKeyDelegateBinding, 0x0000);
		}

		// class UInputComponent : public UActorComponent
		TEST_METHOD(Class__Engine__InputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputComponent, 0x0000);
		}

		// class UInputKeyDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputKeyDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputKeyDelegateBinding, 0x0000);
		}

		// class UInputSettings : public UObject
		TEST_METHOD(Class__Engine__InputSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputSettings, 0x0000);
		}

		// class UInputTouchDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputTouchDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputTouchDelegateBinding, 0x0000);
		}

		// class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
		TEST_METHOD(Class__Engine__InputVectorAxisDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputVectorAxisDelegateBinding, 0x0000);
		}

		// class UInterface_AssetUserData : public UInterface
		TEST_METHOD(Class__Engine__Interface_AssetUserData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_AssetUserData, 0x0000);
		}

		// class UInterface_CollisionDataProvider : public UInterface
		TEST_METHOD(Class__Engine__Interface_CollisionDataProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_CollisionDataProvider, 0x0000);
		}

		// class UInterface_PostProcessVolume : public UInterface
		TEST_METHOD(Class__Engine__Interface_PostProcessVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_PostProcessVolume, 0x0000);
		}

		// class UInterface_PreviewMeshProvider : public UInterface
		TEST_METHOD(Class__Engine__Interface_PreviewMeshProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_PreviewMeshProvider, 0x0000);
		}

		// class UInterpCurveEdSetup : public UObject
		TEST_METHOD(Class__Engine__InterpCurveEdSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpCurveEdSetup, 0x0000);
		}

		// class UInterpData : public UObject
		TEST_METHOD(Class__Engine__InterpData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpData, 0x0000);
		}

		// class UInterpFilter : public UObject
		TEST_METHOD(Class__Engine__InterpFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpFilter, 0x0000);
		}

		// class UInterpFilter_Classes : public UInterpFilter
		TEST_METHOD(Class__Engine__InterpFilter_Classes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpFilter_Classes, 0x0000);
		}

		// class UInterpFilter_Custom : public UInterpFilter
		TEST_METHOD(Class__Engine__InterpFilter_Custom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpFilter_Custom, 0x0000);
		}

		// class UInterpGroup : public UObject
		TEST_METHOD(Class__Engine__InterpGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroup, 0x0000);
		}

		// class UInterpGroupCamera : public UInterpGroup
		TEST_METHOD(Class__Engine__InterpGroupCamera)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupCamera, 0x0000);
		}

		// class UInterpGroupDirector : public UInterpGroup
		TEST_METHOD(Class__Engine__InterpGroupDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupDirector, 0x0000);
		}

		// class UInterpGroupInst : public UObject
		TEST_METHOD(Class__Engine__InterpGroupInst)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupInst, 0x0000);
		}

		// class UInterpGroupInstCamera : public UInterpGroupInst
		TEST_METHOD(Class__Engine__InterpGroupInstCamera)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupInstCamera, 0x0000);
		}

		// class UInterpGroupInstDirector : public UInterpGroupInst
		TEST_METHOD(Class__Engine__InterpGroupInstDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupInstDirector, 0x0000);
		}

		// class UInterpToMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__InterpToMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpToMovementComponent, 0x0000);
		}

		// class UInterpTrack : public UObject
		TEST_METHOD(Class__Engine__InterpTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrack, 0x0000);
		}

		// class UInterpTrackFloatBase : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackFloatBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatBase, 0x0000);
		}

		// class UInterpTrackAnimControl : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackAnimControl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackAnimControl, 0x0000);
		}

		// class UInterpTrackVectorBase : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackVectorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVectorBase, 0x0000);
		}

		// class UInterpTrackAudioMaster : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackAudioMaster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackAudioMaster, 0x0000);
		}

		// class UInterpTrackBoolProp : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackBoolProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackBoolProp, 0x0000);
		}

		// class UInterpTrackColorProp : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackColorProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackColorProp, 0x0000);
		}

		// class UInterpTrackColorScale : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackColorScale)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackColorScale, 0x0000);
		}

		// class UInterpTrackDirector : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackDirector, 0x0000);
		}

		// class UInterpTrackEvent : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackEvent, 0x0000);
		}

		// class UInterpTrackFade : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFade, 0x0000);
		}

		// class UInterpTrackFloatAnimBPParam : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatAnimBPParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatAnimBPParam, 0x0000);
		}

		// class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatMaterialParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatMaterialParam, 0x0000);
		}

		// class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatParticleParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatParticleParam, 0x0000);
		}

		// class UInterpTrackFloatProp : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatProp, 0x0000);
		}

		// class UInterpTrackInst : public UObject
		TEST_METHOD(Class__Engine__InterpTrackInst)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInst, 0x0000);
		}

		// class UInterpTrackInstAnimControl : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstAnimControl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstAnimControl, 0x0000);
		}

		// class UInterpTrackInstAudioMaster : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstAudioMaster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstAudioMaster, 0x0000);
		}

		// class UInterpTrackInstProperty : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstProperty, 0x0000);
		}

		// class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstBoolProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstBoolProp, 0x0000);
		}

		// class UInterpTrackInstColorProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstColorProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstColorProp, 0x0000);
		}

		// class UInterpTrackInstColorScale : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstColorScale)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstColorScale, 0x0000);
		}

		// class UInterpTrackInstDirector : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstDirector, 0x0000);
		}

		// class UInterpTrackInstEvent : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstEvent, 0x0000);
		}

		// class UInterpTrackInstFade : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFade, 0x0000);
		}

		// class UInterpTrackInstFloatAnimBPParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFloatAnimBPParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatAnimBPParam, 0x0000);
		}

		// class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFloatMaterialParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatMaterialParam, 0x0000);
		}

		// class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFloatParticleParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatParticleParam, 0x0000);
		}

		// class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstFloatProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatProp, 0x0000);
		}

		// class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstLinearColorProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstLinearColorProp, 0x0000);
		}

		// class UInterpTrackInstMove : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstMove)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstMove, 0x0000);
		}

		// class UInterpTrackInstParticleReplay : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstParticleReplay)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstParticleReplay, 0x0000);
		}

		// class UInterpTrackInstSlomo : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstSlomo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstSlomo, 0x0000);
		}

		// class UInterpTrackInstSound : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstSound, 0x0000);
		}

		// class UInterpTrackInstToggle : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstToggle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstToggle, 0x0000);
		}

		// class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstVectorMaterialParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstVectorMaterialParam, 0x0000);
		}

		// class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstVectorProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstVectorProp, 0x0000);
		}

		// class UInterpTrackInstVisibility : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstVisibility)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstVisibility, 0x0000);
		}

		// class UInterpTrackLinearColorBase : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackLinearColorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackLinearColorBase, 0x0000);
		}

		// class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
		TEST_METHOD(Class__Engine__InterpTrackLinearColorProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackLinearColorProp, 0x0000);
		}

		// class UInterpTrackMove : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackMove)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackMove, 0x0000);
		}

		// class UInterpTrackMoveAxis : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackMoveAxis)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackMoveAxis, 0x0000);
		}

		// class UInterpTrackParticleReplay : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackParticleReplay)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackParticleReplay, 0x0000);
		}

		// class UInterpTrackSlomo : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackSlomo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackSlomo, 0x0000);
		}

		// class UInterpTrackSound : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackSound, 0x0000);
		}

		// class UInterpTrackToggle : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackToggle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackToggle, 0x0000);
		}

		// class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackVectorMaterialParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVectorMaterialParam, 0x0000);
		}

		// class UInterpTrackVectorProp : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackVectorProp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVectorProp, 0x0000);
		}

		// class UInterpTrackVisibility : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackVisibility)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVisibility, 0x0000);
		}

		// class UIntSerialization : public UObject
		TEST_METHOD(Class__Engine__IntSerialization)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIntSerialization, 0x0000);
		}

		// class AKillZVolume : public APhysicsVolume
		TEST_METHOD(Class__Engine__KillZVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AKillZVolume, 0x0000);
		}

		// class UKismetArrayLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetArrayLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetArrayLibrary, 0x0000);
		}

		// class UKismetGuidLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetGuidLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetGuidLibrary, 0x0000);
		}

		// class UKismetInputLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetInputLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetInputLibrary, 0x0000);
		}

		// class UKismetInternationalizationLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetInternationalizationLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetInternationalizationLibrary, 0x0000);
		}

		// class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetMaterialLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetMaterialLibrary, 0x0000);
		}

		// class UKismetMathLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetMathLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetMathLibrary, 0x0000);
		}

		// class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetNodeHelperLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetNodeHelperLibrary, 0x0000);
		}

		// class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetRenderingLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetRenderingLibrary, 0x0000);
		}

		// class UKismetStringLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetStringLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetStringLibrary, 0x0000);
		}

		// class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetStringTableLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetStringTableLibrary, 0x0000);
		}

		// class UKismetSystemLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetSystemLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetSystemLibrary, 0x0000);
		}

		// class UKismetTextLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetTextLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetTextLibrary, 0x0000);
		}

		// class ULayer : public UObject
		TEST_METHOD(Class__Engine__Layer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULayer, 0x0000);
		}

		// class ULevel : public UObject
		TEST_METHOD(Class__Engine__Level)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevel, 0x0000);
		}

		// class ULevelActorContainer : public UObject
		TEST_METHOD(Class__Engine__LevelActorContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelActorContainer, 0x0000);
		}

		// class ALevelBounds : public AActor
		TEST_METHOD(Class__Engine__LevelBounds)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelBounds, 0x0000);
		}

		// class ULevelScriptBlueprint : public UBlueprint
		TEST_METHOD(Class__Engine__LevelScriptBlueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelScriptBlueprint, 0x0000);
		}

		// class ULevelStreaming : public UObject
		TEST_METHOD(Class__Engine__LevelStreaming)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreaming, 0x0000);
		}

		// class ULevelStreamingAlwaysLoaded : public ULevelStreaming
		TEST_METHOD(Class__Engine__LevelStreamingAlwaysLoaded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreamingAlwaysLoaded, 0x0000);
		}

		// class ULevelStreamingDynamic : public ULevelStreaming
		TEST_METHOD(Class__Engine__LevelStreamingDynamic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreamingDynamic, 0x0000);
		}

		// class ULevelStreamingPersistent : public ULevelStreaming
		TEST_METHOD(Class__Engine__LevelStreamingPersistent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreamingPersistent, 0x0000);
		}

		// class ALevelStreamingVolume : public AVolume
		TEST_METHOD(Class__Engine__LevelStreamingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelStreamingVolume, 0x0000);
		}

		// class ULightmappedSurfaceCollection : public UObject
		TEST_METHOD(Class__Engine__LightmappedSurfaceCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightmappedSurfaceCollection, 0x0000);
		}

		// class ULightMapTexture2D : public UTexture2D
		TEST_METHOD(Class__Engine__LightMapTexture2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightMapTexture2D, 0x0000);
		}

		// class ALightmassCharacterIndirectDetailVolume : public AVolume
		TEST_METHOD(Class__Engine__LightmassCharacterIndirectDetailVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALightmassCharacterIndirectDetailVolume, 0x0000);
		}

		// class ALightmassImportanceVolume : public AVolume
		TEST_METHOD(Class__Engine__LightmassImportanceVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALightmassImportanceVolume, 0x0000);
		}

		// class ALightmassPortal : public AActor
		TEST_METHOD(Class__Engine__LightmassPortal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALightmassPortal, 0x0000);
		}

		// class ULightmassPortalComponent : public USceneComponent
		TEST_METHOD(Class__Engine__LightmassPortalComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightmassPortalComponent, 0x0000);
		}

		// class ULightmassPrimitiveSettingsObject : public UObject
		TEST_METHOD(Class__Engine__LightmassPrimitiveSettingsObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightmassPrimitiveSettingsObject, 0x0000);
		}

		// class ULineBatchComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__LineBatchComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULineBatchComponent, 0x0000);
		}

		// class ULocalLightComponent : public ULightComponent
		TEST_METHOD(Class__Engine__LocalLightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalLightComponent, 0x0000);
		}

		// class ULocalPlayer : public UPlayer
		TEST_METHOD(Class__Engine__LocalPlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalPlayer, 0x0000);
		}

		// class ULocalPlayerSubsystem : public USubsystem
		TEST_METHOD(Class__Engine__LocalPlayerSubsystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalPlayerSubsystem, 0x0000);
		}

		// class UMapBuildDataRegistry : public UObject
		TEST_METHOD(Class__Engine__MapBuildDataRegistry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapBuildDataRegistry, 0x0000);
		}

		// class UMaterial : public UMaterialInterface
		TEST_METHOD(Class__Engine__Material)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterial, 0x0000);
		}

		// class UMaterialBillboardComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__MaterialBillboardComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialBillboardComponent, 0x0000);
		}

		// class UMaterialExpressionAbs : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAbs)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAbs, 0x0000);
		}

		// class UMaterialExpressionActorPositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionActorPositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionActorPositionWS, 0x0000);
		}

		// class UMaterialExpressionAdd : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAdd)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAdd, 0x0000);
		}

		// class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
		TEST_METHOD(Class__Engine__MaterialExpressionAntialiasedTextureMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAntialiasedTextureMask, 0x0000);
		}

		// class UMaterialExpressionAppendVector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAppendVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAppendVector, 0x0000);
		}

		// class UMaterialExpressionArccosine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArccosine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArccosine, 0x0000);
		}

		// class UMaterialExpressionArccosineFast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArccosineFast)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArccosineFast, 0x0000);
		}

		// class UMaterialExpressionArcsine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArcsine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArcsine, 0x0000);
		}

		// class UMaterialExpressionArcsineFast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArcsineFast)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArcsineFast, 0x0000);
		}

		// class UMaterialExpressionArctangent : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangent, 0x0000);
		}

		// class UMaterialExpressionArctangent2 : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangent2)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangent2, 0x0000);
		}

		// class UMaterialExpressionArctangent2Fast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangent2Fast)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangent2Fast, 0x0000);
		}

		// class UMaterialExpressionArctangentFast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangentFast)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangentFast, 0x0000);
		}

		// class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAtmosphericFogColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAtmosphericFogColor, 0x0000);
		}

		// class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAtmosphericLightColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAtmosphericLightColor, 0x0000);
		}

		// class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAtmosphericLightVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAtmosphericLightVector, 0x0000);
		}

		// class UMaterialExpressionBentNormalCustomOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionBentNormalCustomOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBentNormalCustomOutput, 0x0000);
		}

		// class UMaterialExpressionBlackBody : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBlackBody)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBlackBody, 0x0000);
		}

		// class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBlendMaterialAttributes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBlendMaterialAttributes, 0x0000);
		}

		// class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBreakMaterialAttributes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBreakMaterialAttributes, 0x0000);
		}

		// class UMaterialExpressionBumpOffset : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBumpOffset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBumpOffset, 0x0000);
		}

		// class UMaterialExpressionCameraPositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCameraPositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCameraPositionWS, 0x0000);
		}

		// class UMaterialExpressionCameraVectorWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCameraVectorWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCameraVectorWS, 0x0000);
		}

		// class UMaterialExpressionCeil : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCeil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCeil, 0x0000);
		}

		// class UMaterialExpressionParameter : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParameter, 0x0000);
		}

		// class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionVectorParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVectorParameter, 0x0000);
		}

		// class UMaterialExpressionChannelMaskParameter : public UMaterialExpressionVectorParameter
		TEST_METHOD(Class__Engine__MaterialExpressionChannelMaskParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionChannelMaskParameter, 0x0000);
		}

		// class UMaterialExpressionClamp : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionClamp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionClamp, 0x0000);
		}

		// class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionClearCoatNormalCustomOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionClearCoatNormalCustomOutput, 0x0000);
		}

		// class UMaterialExpressionCollectionParameter : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCollectionParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCollectionParameter, 0x0000);
		}

		// class UMaterialExpressionComment : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionComment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionComment, 0x0000);
		}

		// class UMaterialExpressionComponentMask : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionComponentMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionComponentMask, 0x0000);
		}

		// class UMaterialExpressionConstant : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant, 0x0000);
		}

		// class UMaterialExpressionConstant2Vector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant2Vector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant2Vector, 0x0000);
		}

		// class UMaterialExpressionConstant3Vector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant3Vector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant3Vector, 0x0000);
		}

		// class UMaterialExpressionConstant4Vector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant4Vector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant4Vector, 0x0000);
		}

		// class UMaterialExpressionConstantBiasScale : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstantBiasScale)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstantBiasScale, 0x0000);
		}

		// class UMaterialExpressionCosine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCosine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCosine, 0x0000);
		}

		// class UMaterialExpressionCrossProduct : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCrossProduct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCrossProduct, 0x0000);
		}

		// class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionScalarParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionScalarParameter, 0x0000);
		}

		// class UMaterialExpressionCurveAtlasRowParameter : public UMaterialExpressionScalarParameter
		TEST_METHOD(Class__Engine__MaterialExpressionCurveAtlasRowParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCurveAtlasRowParameter, 0x0000);
		}

		// class UMaterialExpressionCustom : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCustom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCustom, 0x0000);
		}

		// class UMaterialExpressionDDX : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDDX)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDDX, 0x0000);
		}

		// class UMaterialExpressionDDY : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDDY)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDDY, 0x0000);
		}

		// class UMaterialExpressionDecalDerivative : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDecalDerivative)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDecalDerivative, 0x0000);
		}

		// class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDecalLifetimeOpacity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDecalLifetimeOpacity, 0x0000);
		}

		// class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDecalMipmapLevel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDecalMipmapLevel, 0x0000);
		}

		// class UMaterialExpressionDeltaTime : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDeltaTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDeltaTime, 0x0000);
		}

		// class UMaterialExpressionDepthFade : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDepthFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDepthFade, 0x0000);
		}

		// class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDepthOfFieldFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDepthOfFieldFunction, 0x0000);
		}

		// class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDeriveNormalZ)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDeriveNormalZ, 0x0000);
		}

		// class UMaterialExpressionDesaturation : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDesaturation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDesaturation, 0x0000);
		}

		// class UMaterialExpressionDistance : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistance, 0x0000);
		}

		// class UMaterialExpressionDistanceCullFade : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistanceCullFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistanceCullFade, 0x0000);
		}

		// class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistanceFieldGradient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistanceFieldGradient, 0x0000);
		}

		// class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistanceToNearestSurface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistanceToNearestSurface, 0x0000);
		}

		// class UMaterialExpressionDivide : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDivide)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDivide, 0x0000);
		}

		// class UMaterialExpressionDotProduct : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDotProduct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDotProduct, 0x0000);
		}

		// class UMaterialExpressionDynamicParameter : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDynamicParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDynamicParameter, 0x0000);
		}

		// class UMaterialExpressionEyeAdaptation : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionEyeAdaptation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionEyeAdaptation, 0x0000);
		}

		// class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFeatureLevelSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFeatureLevelSwitch, 0x0000);
		}

		// class UMaterialExpressionFloor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFloor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFloor, 0x0000);
		}

		// class UMaterialExpressionFmod : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFmod)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFmod, 0x0000);
		}

		// class UMaterialExpressionFontSample : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFontSample)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFontSample, 0x0000);
		}

		// class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
		TEST_METHOD(Class__Engine__MaterialExpressionFontSampleParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFontSampleParameter, 0x0000);
		}

		// class UMaterialExpressionFrac : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFrac)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFrac, 0x0000);
		}

		// class UMaterialExpressionFresnel : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFresnel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFresnel, 0x0000);
		}

		// class UMaterialExpressionFunctionInput : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFunctionInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFunctionInput, 0x0000);
		}

		// class UMaterialExpressionFunctionOutput : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFunctionOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFunctionOutput, 0x0000);
		}

		// class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionGetMaterialAttributes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionGetMaterialAttributes, 0x0000);
		}

		// class UMaterialExpressionGIReplace : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionGIReplace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionGIReplace, 0x0000);
		}

		// class UMaterialExpressionIf : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionIf)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionIf, 0x0000);
		}

		// class UMaterialExpressionLightmapUVs : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLightmapUVs)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLightmapUVs, 0x0000);
		}

		// class UMaterialExpressionLightmassReplace : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLightmassReplace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLightmassReplace, 0x0000);
		}

		// class UMaterialExpressionLightVector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLightVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLightVector, 0x0000);
		}

		// class UMaterialExpressionLinearInterpolate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLinearInterpolate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLinearInterpolate, 0x0000);
		}

		// class UMaterialExpressionLogarithm10 : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLogarithm10)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLogarithm10, 0x0000);
		}

		// class UMaterialExpressionLogarithm2 : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLogarithm2)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLogarithm2, 0x0000);
		}

		// class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMakeMaterialAttributes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMakeMaterialAttributes, 0x0000);
		}

		// class UMaterialExpressionMaterialAttributeLayers : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialAttributeLayers)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialAttributeLayers, 0x0000);
		}

		// class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialFunctionCall)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialFunctionCall, 0x0000);
		}

		// class UMaterialExpressionMaterialLayerOutput : public UMaterialExpressionFunctionOutput
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialLayerOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialLayerOutput, 0x0000);
		}

		// class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialProxyReplace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialProxyReplace, 0x0000);
		}

		// class UMaterialExpressionMax : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMax)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMax, 0x0000);
		}

		// class UMaterialExpressionMin : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMin, 0x0000);
		}

		// class UMaterialExpressionMultiply : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMultiply)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMultiply, 0x0000);
		}

		// class UMaterialExpressionNoise : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionNoise)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionNoise, 0x0000);
		}

		// class UMaterialExpressionNormalize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionNormalize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionNormalize, 0x0000);
		}

		// class UMaterialExpressionObjectBounds : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectBounds)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectBounds, 0x0000);
		}

		// class UMaterialExpressionObjectOrientation : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectOrientation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectOrientation, 0x0000);
		}

		// class UMaterialExpressionObjectPositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectPositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectPositionWS, 0x0000);
		}

		// class UMaterialExpressionObjectRadius : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectRadius)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectRadius, 0x0000);
		}

		// class UMaterialExpressionOneMinus : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionOneMinus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionOneMinus, 0x0000);
		}

		// class UMaterialExpressionPanner : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPanner)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPanner, 0x0000);
		}

		// class UMaterialExpressionParticleColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleColor, 0x0000);
		}

		// class UMaterialExpressionParticleDirection : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleDirection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleDirection, 0x0000);
		}

		// class UMaterialExpressionParticleMacroUV : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleMacroUV)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleMacroUV, 0x0000);
		}

		// class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleMotionBlurFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleMotionBlurFade, 0x0000);
		}

		// class UMaterialExpressionParticlePositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticlePositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticlePositionWS, 0x0000);
		}

		// class UMaterialExpressionParticleRadius : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleRadius)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleRadius, 0x0000);
		}

		// class UMaterialExpressionParticleRandom : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleRandom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleRandom, 0x0000);
		}

		// class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleRelativeTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleRelativeTime, 0x0000);
		}

		// class UMaterialExpressionParticleSize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleSize, 0x0000);
		}

		// class UMaterialExpressionParticleSpeed : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleSpeed)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleSpeed, 0x0000);
		}

		// class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
		TEST_METHOD(Class__Engine__MaterialExpressionParticleSubUV)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleSubUV, 0x0000);
		}

		// class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPerInstanceFadeAmount)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPerInstanceFadeAmount, 0x0000);
		}

		// class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPerInstanceRandom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPerInstanceRandom, 0x0000);
		}

		// class UMaterialExpressionPixelDepth : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPixelDepth)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPixelDepth, 0x0000);
		}

		// class UMaterialExpressionPixelNormalWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPixelNormalWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPixelNormalWS, 0x0000);
		}

		// class UMaterialExpressionPower : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPower)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPower, 0x0000);
		}

		// class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPrecomputedAOMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPrecomputedAOMask, 0x0000);
		}

		// class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPreSkinnedNormal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPreSkinnedNormal, 0x0000);
		}

		// class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPreSkinnedPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPreSkinnedPosition, 0x0000);
		}

		// class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPreviousFrameSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPreviousFrameSwitch, 0x0000);
		}

		// class UMaterialExpressionQualitySwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionQualitySwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionQualitySwitch, 0x0000);
		}

		// class UMaterialExpressionRayTracingQualitySwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionRayTracingQualitySwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionRayTracingQualitySwitch, 0x0000);
		}

		// class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionReflectionVectorWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionReflectionVectorWS, 0x0000);
		}

		// class UMaterialExpressionReroute : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionReroute)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionReroute, 0x0000);
		}

		// class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionRotateAboutAxis)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionRotateAboutAxis, 0x0000);
		}

		// class UMaterialExpressionRotator : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionRotator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionRotator, 0x0000);
		}

		// class UMaterialExpressionRound : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionRound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionRound, 0x0000);
		}

		// class UMaterialExpressionSaturate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSaturate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSaturate, 0x0000);
		}

		// class UMaterialExpressionSceneColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneColor, 0x0000);
		}

		// class UMaterialExpressionSceneDepth : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneDepth)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneDepth, 0x0000);
		}

		// class UMaterialExpressionSceneTexelSize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneTexelSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneTexelSize, 0x0000);
		}

		// class UMaterialExpressionSceneTexture : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneTexture, 0x0000);
		}

		// class UMaterialExpressionScreenPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionScreenPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionScreenPosition, 0x0000);
		}

		// class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSetMaterialAttributes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSetMaterialAttributes, 0x0000);
		}

		// class UMaterialExpressionShadingPathSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionShadingPathSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionShadingPathSwitch, 0x0000);
		}

		// class UMaterialExpressionShadowReplace : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionShadowReplace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionShadowReplace, 0x0000);
		}

		// class UMaterialExpressionSign : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSign)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSign, 0x0000);
		}

		// class UMaterialExpressionSine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSine, 0x0000);
		}

		// class UMaterialExpressionSobol : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSobol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSobol, 0x0000);
		}

		// class UMaterialExpressionSpeedTree : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSpeedTree)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSpeedTree, 0x0000);
		}

		// class UMaterialExpressionSphereMask : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSphereMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSphereMask, 0x0000);
		}

		// class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSphericalParticleOpacity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSphericalParticleOpacity, 0x0000);
		}

		// class UMaterialExpressionSquareRoot : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSquareRoot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSquareRoot, 0x0000);
		}

		// class UMaterialExpressionStaticBool : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionStaticBool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticBool, 0x0000);
		}

		// class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionStaticBoolParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticBoolParameter, 0x0000);
		}

		// class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionStaticComponentMaskParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticComponentMaskParameter, 0x0000);
		}

		// class UMaterialExpressionStaticSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionStaticSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticSwitch, 0x0000);
		}

		// class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
		TEST_METHOD(Class__Engine__MaterialExpressionStaticSwitchParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticSwitchParameter, 0x0000);
		}

		// class UMaterialExpressionSubtract : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSubtract)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSubtract, 0x0000);
		}

		// class UMaterialExpressionTangent : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTangent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTangent, 0x0000);
		}

		// class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionTangentOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTangentOutput, 0x0000);
		}

		// class UMaterialExpressionTemporalSobol : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTemporalSobol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTemporalSobol, 0x0000);
		}

		// class UMaterialExpressionTextureCoordinate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTextureCoordinate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureCoordinate, 0x0000);
		}

		// class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
		TEST_METHOD(Class__Engine__MaterialExpressionTextureObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureObject, 0x0000);
		}

		// class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureObjectParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureObjectParameter, 0x0000);
		}

		// class UMaterialExpressionTextureProperty : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTextureProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureProperty, 0x0000);
		}

		// class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameterCube)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameterCube, 0x0000);
		}

		// class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameterSubUV)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameterSubUV, 0x0000);
		}

		// class UMaterialExpressionTextureSampleParameterVolume : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameterVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameterVolume, 0x0000);
		}

		// class UMaterialExpressionTime : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTime, 0x0000);
		}

		// class UMaterialExpressionTransform : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTransform, 0x0000);
		}

		// class UMaterialExpressionTransformPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTransformPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTransformPosition, 0x0000);
		}

		// class UMaterialExpressionTruncate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTruncate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTruncate, 0x0000);
		}

		// class UMaterialExpressionTwoSidedSign : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTwoSidedSign)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTwoSidedSign, 0x0000);
		}

		// class UMaterialExpressionVectorNoise : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionVectorNoise)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVectorNoise, 0x0000);
		}

		// class UMaterialExpressionVertexColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionVertexColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVertexColor, 0x0000);
		}

		// class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionVertexInterpolator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVertexInterpolator, 0x0000);
		}

		// class UMaterialExpressionVertexNormalWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionVertexNormalWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVertexNormalWS, 0x0000);
		}

		// class UMaterialExpressionViewProperty : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionViewProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionViewProperty, 0x0000);
		}

		// class UMaterialExpressionViewSize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionViewSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionViewSize, 0x0000);
		}

		// class UMaterialExpressionWorldPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionWorldPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionWorldPosition, 0x0000);
		}

		// class UMaterialFunctionInterface : public UObject
		TEST_METHOD(Class__Engine__MaterialFunctionInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionInterface, 0x0000);
		}

		// class UMaterialFunction : public UMaterialFunctionInterface
		TEST_METHOD(Class__Engine__MaterialFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunction, 0x0000);
		}

		// class UMaterialFunctionInstance : public UMaterialFunctionInterface
		TEST_METHOD(Class__Engine__MaterialFunctionInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionInstance, 0x0000);
		}

		// class UMaterialFunctionMaterialLayer : public UMaterialFunction
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayer, 0x0000);
		}

		// class UMaterialFunctionMaterialLayerInstance : public UMaterialFunctionInstance
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayerInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayerInstance, 0x0000);
		}

		// class UMaterialFunctionMaterialLayerBlend : public UMaterialFunction
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayerBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayerBlend, 0x0000);
		}

		// class UMaterialFunctionMaterialLayerBlendInstance : public UMaterialFunctionInstance
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayerBlendInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayerBlendInstance, 0x0000);
		}

		// class AMaterialInstanceActor : public AActor
		TEST_METHOD(Class__Engine__MaterialInstanceActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMaterialInstanceActor, 0x0000);
		}

		// class UMaterialInstanceDynamic : public UMaterialInstance
		TEST_METHOD(Class__Engine__MaterialInstanceDynamic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInstanceDynamic, 0x0000);
		}

		// class UMaterialParameterCollection : public UObject
		TEST_METHOD(Class__Engine__MaterialParameterCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialParameterCollection, 0x0000);
		}

		// class UMaterialParameterCollectionInstance : public UObject
		TEST_METHOD(Class__Engine__MaterialParameterCollectionInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialParameterCollectionInstance, 0x0000);
		}

		// class AMatineeActor : public AActor
		TEST_METHOD(Class__Engine__MatineeActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMatineeActor, 0x0000);
		}

		// class AMatineeActorCameraAnim : public AMatineeActor
		TEST_METHOD(Class__Engine__MatineeActorCameraAnim)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMatineeActorCameraAnim, 0x0000);
		}

		// class UMatineeAnimInterface : public UInterface
		TEST_METHOD(Class__Engine__MatineeAnimInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeAnimInterface, 0x0000);
		}

		// class UMatineeInterface : public UInterface
		TEST_METHOD(Class__Engine__MatineeInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeInterface, 0x0000);
		}

		// class AMeshMergeCullingVolume : public AVolume
		TEST_METHOD(Class__Engine__MeshMergeCullingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMeshMergeCullingVolume, 0x0000);
		}

		// class UMeshSimplificationSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__MeshSimplificationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshSimplificationSettings, 0x0000);
		}

		// class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__MeshVertexPainterKismetLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshVertexPainterKismetLibrary, 0x0000);
		}

		// class UMicroTransactionBase : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__MicroTransactionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMicroTransactionBase, 0x0000);
		}

		// class UModelComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ModelComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UModelComponent, 0x0000);
		}

		// class UMorphTarget : public UObject
		TEST_METHOD(Class__Engine__MorphTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMorphTarget, 0x0000);
		}

		// class UNavAgentInterface : public UInterface
		TEST_METHOD(Class__Engine__NavAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAgentInterface, 0x0000);
		}

		// class UNavCollisionBase : public UObject
		TEST_METHOD(Class__Engine__NavCollisionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavCollisionBase, 0x0000);
		}

		// class UNavEdgeProviderInterface : public UInterface
		TEST_METHOD(Class__Engine__NavEdgeProviderInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavEdgeProviderInterface, 0x0000);
		}

		// class UNavigationDataChunk : public UObject
		TEST_METHOD(Class__Engine__NavigationDataChunk)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationDataChunk, 0x0000);
		}

		// class UNavigationDataInterface : public UInterface
		TEST_METHOD(Class__Engine__NavigationDataInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationDataInterface, 0x0000);
		}

		// class ANavigationObjectBase : public AActor
		TEST_METHOD(Class__Engine__NavigationObjectBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationObjectBase, 0x0000);
		}

		// class UNavigationSystem : public UObject
		TEST_METHOD(Class__Engine__NavigationSystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystem, 0x0000);
		}

		// class UNavigationSystemConfig : public UObject
		TEST_METHOD(Class__Engine__NavigationSystemConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemConfig, 0x0000);
		}

		// class UNullNavSysConfig : public UNavigationSystemConfig
		TEST_METHOD(Class__Engine__NullNavSysConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNullNavSysConfig, 0x0000);
		}

		// class UNavLinkDefinition : public UObject
		TEST_METHOD(Class__Engine__NavLinkDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkDefinition, 0x0000);
		}

		// class UNavPathObserverInterface : public UInterface
		TEST_METHOD(Class__Engine__NavPathObserverInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavPathObserverInterface, 0x0000);
		}

		// class UNavRelevantInterface : public UInterface
		TEST_METHOD(Class__Engine__NavRelevantInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavRelevantInterface, 0x0000);
		}

		// class USimulatedClientNetConnection : public UNetConnection
		TEST_METHOD(Class__Engine__SimulatedClientNetConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USimulatedClientNetConnection, 0x0000);
		}

		// class UNetworkPredictionInterface : public UInterface
		TEST_METHOD(Class__Engine__NetworkPredictionInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetworkPredictionInterface, 0x0000);
		}

		// class UNetworkSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__NetworkSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetworkSettings, 0x0000);
		}

		// class UNodeMappingContainer : public UObject
		TEST_METHOD(Class__Engine__NodeMappingContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNodeMappingContainer, 0x0000);
		}

		// class UNodeMappingProviderInterface : public UInterface
		TEST_METHOD(Class__Engine__NodeMappingProviderInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNodeMappingProviderInterface, 0x0000);
		}

		// class ANote : public AActor
		TEST_METHOD(Class__Engine__Note)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANote, 0x0000);
		}

		// class UObjectLibrary : public UObject
		TEST_METHOD(Class__Engine__ObjectLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectLibrary, 0x0000);
		}

		// class UObjectReferencer : public UObject
		TEST_METHOD(Class__Engine__ObjectReferencer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectReferencer, 0x0000);
		}

		// class UPackageMapClient : public UPackageMap
		TEST_METHOD(Class__Engine__PackageMapClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPackageMapClient, 0x0000);
		}

		// class APainCausingVolume : public APhysicsVolume
		TEST_METHOD(Class__Engine__PainCausingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APainCausingVolume, 0x0000);
		}

		// class UParticleEmitter : public UObject
		TEST_METHOD(Class__Engine__ParticleEmitter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleEmitter, 0x0000);
		}

		// class AParticleEventManager : public AActor
		TEST_METHOD(Class__Engine__ParticleEventManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AParticleEventManager, 0x0000);
		}

		// class UParticleLODLevel : public UObject
		TEST_METHOD(Class__Engine__ParticleLODLevel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleLODLevel, 0x0000);
		}

		// class UParticleModule : public UObject
		TEST_METHOD(Class__Engine__ParticleModule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModule, 0x0000);
		}

		// class UParticleModuleAccelerationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationBase, 0x0000);
		}

		// class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAcceleration)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAcceleration, 0x0000);
		}

		// class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationConstant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationConstant, 0x0000);
		}

		// class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationDrag)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationDrag, 0x0000);
		}

		// class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationDragScaleOverLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationDragScaleOverLife, 0x0000);
		}

		// class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationOverLifetime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationOverLifetime, 0x0000);
		}

		// class UParticleModuleAttractorBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleAttractorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorBase, 0x0000);
		}

		// class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorLine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorLine, 0x0000);
		}

		// class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorParticle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorParticle, 0x0000);
		}

		// class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorPoint, 0x0000);
		}

		// class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorPointGravity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorPointGravity, 0x0000);
		}

		// class UParticleModuleBeamBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleBeamBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamBase, 0x0000);
		}

		// class UParticleModuleBeamModifier : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamModifier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamModifier, 0x0000);
		}

		// class UParticleModuleBeamNoise : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamNoise)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamNoise, 0x0000);
		}

		// class UParticleModuleBeamSource : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamSource, 0x0000);
		}

		// class UParticleModuleBeamTarget : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamTarget, 0x0000);
		}

		// class UParticleModuleCameraBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleCameraBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCameraBase, 0x0000);
		}

		// class UParticleModuleCameraOffset : public UParticleModuleCameraBase
		TEST_METHOD(Class__Engine__ParticleModuleCameraOffset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCameraOffset, 0x0000);
		}

		// class UParticleModuleCollisionBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleCollisionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCollisionBase, 0x0000);
		}

		// class UParticleModuleCollision : public UParticleModuleCollisionBase
		TEST_METHOD(Class__Engine__ParticleModuleCollision)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCollision, 0x0000);
		}

		// class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
		TEST_METHOD(Class__Engine__ParticleModuleCollisionGPU)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCollisionGPU, 0x0000);
		}

		// class UParticleModuleColorBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleColorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColorBase, 0x0000);
		}

		// class UParticleModuleColor : public UParticleModuleColorBase
		TEST_METHOD(Class__Engine__ParticleModuleColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColor, 0x0000);
		}

		// class UParticleModuleColor_Seeded : public UParticleModuleColor
		TEST_METHOD(Class__Engine__ParticleModuleColor_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColor_Seeded, 0x0000);
		}

		// class UParticleModuleColorOverLife : public UParticleModuleColorBase
		TEST_METHOD(Class__Engine__ParticleModuleColorOverLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColorOverLife, 0x0000);
		}

		// class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
		TEST_METHOD(Class__Engine__ParticleModuleColorScaleOverLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColorScaleOverLife, 0x0000);
		}

		// class UParticleModuleEventBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleEventBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventBase, 0x0000);
		}

		// class UParticleModuleEventGenerator : public UParticleModuleEventBase
		TEST_METHOD(Class__Engine__ParticleModuleEventGenerator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventGenerator, 0x0000);
		}

		// class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
		TEST_METHOD(Class__Engine__ParticleModuleEventReceiverBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventReceiverBase, 0x0000);
		}

		// class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
		TEST_METHOD(Class__Engine__ParticleModuleEventReceiverKillParticles)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventReceiverKillParticles, 0x0000);
		}

		// class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
		TEST_METHOD(Class__Engine__ParticleModuleEventReceiverSpawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventReceiverSpawn, 0x0000);
		}

		// class UParticleModuleEventSendToGame : public UObject
		TEST_METHOD(Class__Engine__ParticleModuleEventSendToGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventSendToGame, 0x0000);
		}

		// class UParticleModuleKillBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleKillBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleKillBase, 0x0000);
		}

		// class UParticleModuleKillBox : public UParticleModuleKillBase
		TEST_METHOD(Class__Engine__ParticleModuleKillBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleKillBox, 0x0000);
		}

		// class UParticleModuleKillHeight : public UParticleModuleKillBase
		TEST_METHOD(Class__Engine__ParticleModuleKillHeight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleKillHeight, 0x0000);
		}

		// class UParticleModuleLifetimeBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleLifetimeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLifetimeBase, 0x0000);
		}

		// class UParticleModuleLifetime : public UParticleModuleLifetimeBase
		TEST_METHOD(Class__Engine__ParticleModuleLifetime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLifetime, 0x0000);
		}

		// class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
		TEST_METHOD(Class__Engine__ParticleModuleLifetime_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLifetime_Seeded, 0x0000);
		}

		// class UParticleModuleLightBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleLightBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLightBase, 0x0000);
		}

		// class UParticleModuleLight : public UParticleModuleLightBase
		TEST_METHOD(Class__Engine__ParticleModuleLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLight, 0x0000);
		}

		// class UParticleModuleLight_Seeded : public UParticleModuleLight
		TEST_METHOD(Class__Engine__ParticleModuleLight_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLight_Seeded, 0x0000);
		}

		// class UParticleModuleLocationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleLocationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationBase, 0x0000);
		}

		// class UParticleModuleLocation : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocation, 0x0000);
		}

		// class UParticleModuleLocation_Seeded : public UParticleModuleLocation
		TEST_METHOD(Class__Engine__ParticleModuleLocation_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocation_Seeded, 0x0000);
		}

		// class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationBoneSocket)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationBoneSocket, 0x0000);
		}

		// class UParticleModuleLocationDirect : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationDirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationDirect, 0x0000);
		}

		// class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationEmitter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationEmitter, 0x0000);
		}

		// class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationEmitterDirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationEmitterDirect, 0x0000);
		}

		// class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveBase, 0x0000);
		}

		// class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveCylinder)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveCylinder, 0x0000);
		}

		// class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveCylinder_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveCylinder_Seeded, 0x0000);
		}

		// class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveSphere)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveSphere, 0x0000);
		}

		// class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveSphere_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveSphere_Seeded, 0x0000);
		}

		// class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveTriangle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveTriangle, 0x0000);
		}

		// class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationSkelVertSurface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationSkelVertSurface, 0x0000);
		}

		// class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
		TEST_METHOD(Class__Engine__ParticleModuleLocationWorldOffset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationWorldOffset, 0x0000);
		}

		// class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
		TEST_METHOD(Class__Engine__ParticleModuleLocationWorldOffset_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationWorldOffset_Seeded, 0x0000);
		}

		// class UParticleModuleMaterialBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleMaterialBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMaterialBase, 0x0000);
		}

		// class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshMaterial, 0x0000);
		}

		// class UParticleModuleRotationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleRotationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationBase, 0x0000);
		}

		// class UParticleModuleMeshRotation : public UParticleModuleRotationBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotation, 0x0000);
		}

		// class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotation_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotation_Seeded, 0x0000);
		}

		// class UParticleModuleRotationRateBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleRotationRateBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRateBase, 0x0000);
		}

		// class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRate, 0x0000);
		}

		// class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRate_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRate_Seeded, 0x0000);
		}

		// class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRateMultiplyLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRateMultiplyLife, 0x0000);
		}

		// class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRateOverLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRateOverLife, 0x0000);
		}

		// class UParticleModuleOrbitBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleOrbitBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrbitBase, 0x0000);
		}

		// class UParticleModuleOrbit : public UParticleModuleOrbitBase
		TEST_METHOD(Class__Engine__ParticleModuleOrbit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrbit, 0x0000);
		}

		// class UParticleModuleOrientationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleOrientationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrientationBase, 0x0000);
		}

		// class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
		TEST_METHOD(Class__Engine__ParticleModuleOrientationAxisLock)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrientationAxisLock, 0x0000);
		}

		// class UParticleModuleParameterBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleParameterBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleParameterBase, 0x0000);
		}

		// class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
		TEST_METHOD(Class__Engine__ParticleModuleParameterDynamic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleParameterDynamic, 0x0000);
		}

		// class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
		TEST_METHOD(Class__Engine__ParticleModuleParameterDynamic_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleParameterDynamic_Seeded, 0x0000);
		}

		// class UParticleModulePivotOffset : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModulePivotOffset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModulePivotOffset, 0x0000);
		}

		// class UParticleModuleRequired : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleRequired)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRequired, 0x0000);
		}

		// class UParticleModuleRotation : public UParticleModuleRotationBase
		TEST_METHOD(Class__Engine__ParticleModuleRotation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotation, 0x0000);
		}

		// class UParticleModuleRotation_Seeded : public UParticleModuleRotation
		TEST_METHOD(Class__Engine__ParticleModuleRotation_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotation_Seeded, 0x0000);
		}

		// class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
		TEST_METHOD(Class__Engine__ParticleModuleRotationOverLifetime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationOverLifetime, 0x0000);
		}

		// class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleRotationRate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRate, 0x0000);
		}

		// class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
		TEST_METHOD(Class__Engine__ParticleModuleRotationRate_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRate_Seeded, 0x0000);
		}

		// class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleRotationRateMultiplyLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRateMultiplyLife, 0x0000);
		}

		// class UParticleModuleSizeBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleSizeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeBase, 0x0000);
		}

		// class UParticleModuleSize : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSize, 0x0000);
		}

		// class UParticleModuleSize_Seeded : public UParticleModuleSize
		TEST_METHOD(Class__Engine__ParticleModuleSize_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSize_Seeded, 0x0000);
		}

		// class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSizeMultiplyLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeMultiplyLife, 0x0000);
		}

		// class UParticleModuleSizeScale : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSizeScale)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeScale, 0x0000);
		}

		// class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSizeScaleBySpeed)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeScaleBySpeed, 0x0000);
		}

		// class UParticleModuleSourceMovement : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleSourceMovement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSourceMovement, 0x0000);
		}

		// class UParticleModuleSpawnBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleSpawnBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSpawnBase, 0x0000);
		}

		// class UParticleModuleSpawn : public UParticleModuleSpawnBase
		TEST_METHOD(Class__Engine__ParticleModuleSpawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSpawn, 0x0000);
		}

		// class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
		TEST_METHOD(Class__Engine__ParticleModuleSpawnPerUnit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSpawnPerUnit, 0x0000);
		}

		// class UParticleModuleSubUVBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleSubUVBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSubUVBase, 0x0000);
		}

		// class UParticleModuleSubUV : public UParticleModuleSubUVBase
		TEST_METHOD(Class__Engine__ParticleModuleSubUV)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSubUV, 0x0000);
		}

		// class UParticleModuleSubUVMovie : public UParticleModuleSubUV
		TEST_METHOD(Class__Engine__ParticleModuleSubUVMovie)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSubUVMovie, 0x0000);
		}

		// class UParticleModuleTrailBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleTrailBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTrailBase, 0x0000);
		}

		// class UParticleModuleTrailSource : public UParticleModuleTrailBase
		TEST_METHOD(Class__Engine__ParticleModuleTrailSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTrailSource, 0x0000);
		}

		// class UParticleModuleTypeDataBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataBase, 0x0000);
		}

		// class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataAnimTrail)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataAnimTrail, 0x0000);
		}

		// class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataBeam2)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataBeam2, 0x0000);
		}

		// class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataGpu)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataGpu, 0x0000);
		}

		// class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataMesh, 0x0000);
		}

		// class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataRibbon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataRibbon, 0x0000);
		}

		// class UParticleModuleVectorFieldBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldBase, 0x0000);
		}

		// class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldGlobal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldGlobal, 0x0000);
		}

		// class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldLocal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldLocal, 0x0000);
		}

		// class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldRotation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldRotation, 0x0000);
		}

		// class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldRotationRate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldRotationRate, 0x0000);
		}

		// class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldScale)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldScale, 0x0000);
		}

		// class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldScaleOverLife)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldScaleOverLife, 0x0000);
		}

		// class UParticleModuleVelocityBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleVelocityBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityBase, 0x0000);
		}

		// class UParticleModuleVelocity : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocity, 0x0000);
		}

		// class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
		TEST_METHOD(Class__Engine__ParticleModuleVelocity_Seeded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocity_Seeded, 0x0000);
		}

		// class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocityCone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityCone, 0x0000);
		}

		// class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocityInheritParent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityInheritParent, 0x0000);
		}

		// class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocityOverLifetime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityOverLifetime, 0x0000);
		}

		// class UParticleSpriteEmitter : public UParticleEmitter
		TEST_METHOD(Class__Engine__ParticleSpriteEmitter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSpriteEmitter, 0x0000);
		}

		// class UParticleSystem : public UObject
		TEST_METHOD(Class__Engine__ParticleSystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSystem, 0x0000);
		}

		// class UParticleSystemComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ParticleSystemComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSystemComponent, 0x0000);
		}

		// class UParticleSystemReplay : public UObject
		TEST_METHOD(Class__Engine__ParticleSystemReplay)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSystemReplay, 0x0000);
		}

		// class UPathFollowingAgentInterface : public UInterface
		TEST_METHOD(Class__Engine__PathFollowingAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathFollowingAgentInterface, 0x0000);
		}

		// class UPawnNoiseEmitterComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PawnNoiseEmitterComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnNoiseEmitterComponent, 0x0000);
		}

		// class UPhysicalAnimationComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PhysicalAnimationComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicalAnimationComponent, 0x0000);
		}

		// class UPhysicalMaterial : public UObject
		TEST_METHOD(Class__Engine__PhysicalMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicalMaterial, 0x0000);
		}

		// class UPhysicalMaterialPropertyBase : public UObject
		TEST_METHOD(Class__Engine__PhysicalMaterialPropertyBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicalMaterialPropertyBase, 0x0000);
		}

		// class UPhysicsAsset : public UObject
		TEST_METHOD(Class__Engine__PhysicsAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsAsset, 0x0000);
		}

		// class USkeletalBodySetup : public UBodySetup
		TEST_METHOD(Class__Engine__SkeletalBodySetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalBodySetup, 0x0000);
		}

		// class UPhysicsCollisionHandler : public UObject
		TEST_METHOD(Class__Engine__PhysicsCollisionHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsCollisionHandler, 0x0000);
		}

		// class ARigidBodyBase : public AActor
		TEST_METHOD(Class__Engine__RigidBodyBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARigidBodyBase, 0x0000);
		}

		// class APhysicsConstraintActor : public ARigidBodyBase
		TEST_METHOD(Class__Engine__PhysicsConstraintActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsConstraintActor, 0x0000);
		}

		// class UPhysicsConstraintComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PhysicsConstraintComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsConstraintComponent, 0x0000);
		}

		// class UPhysicsConstraintTemplate : public UObject
		TEST_METHOD(Class__Engine__PhysicsConstraintTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsConstraintTemplate, 0x0000);
		}

		// class UPhysicsHandleComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PhysicsHandleComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsHandleComponent, 0x0000);
		}

		// class UPhysicsSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__PhysicsSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsSettings, 0x0000);
		}

		// class UPhysicsSpringComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PhysicsSpringComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsSpringComponent, 0x0000);
		}

		// class APhysicsThruster : public ARigidBodyBase
		TEST_METHOD(Class__Engine__PhysicsThruster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsThruster, 0x0000);
		}

		// class UPhysicsThrusterComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PhysicsThrusterComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsThrusterComponent, 0x0000);
		}

		// class ASceneCapture : public AActor
		TEST_METHOD(Class__Engine__SceneCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASceneCapture, 0x0000);
		}

		// class APlanarReflection : public ASceneCapture
		TEST_METHOD(Class__Engine__PlanarReflection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlanarReflection, 0x0000);
		}

		// class USceneCaptureComponent : public USceneComponent
		TEST_METHOD(Class__Engine__SceneCaptureComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneCaptureComponent, 0x0000);
		}

		// class UPlanarReflectionComponent : public USceneCaptureComponent
		TEST_METHOD(Class__Engine__PlanarReflectionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlanarReflectionComponent, 0x0000);
		}

		// class APlaneReflectionCapture : public AReflectionCapture
		TEST_METHOD(Class__Engine__PlaneReflectionCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlaneReflectionCapture, 0x0000);
		}

		// class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
		TEST_METHOD(Class__Engine__PlaneReflectionCaptureComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlaneReflectionCaptureComponent, 0x0000);
		}

		// class UPlatformEventsComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PlatformEventsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformEventsComponent, 0x0000);
		}

		// class UPlatformInterfaceWebResponse : public UObject
		TEST_METHOD(Class__Engine__PlatformInterfaceWebResponse)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformInterfaceWebResponse, 0x0000);
		}

		// class UPlayerInput : public UObject
		TEST_METHOD(Class__Engine__PlayerInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayerInput, 0x0000);
		}

		// class APlayerStart : public ANavigationObjectBase
		TEST_METHOD(Class__Engine__PlayerStart)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerStart, 0x0000);
		}

		// class APlayerStartPIE : public APlayerStart
		TEST_METHOD(Class__Engine__PlayerStartPIE)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerStartPIE, 0x0000);
		}

		// class UPluginCommandlet : public UCommandlet
		TEST_METHOD(Class__Engine__PluginCommandlet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPluginCommandlet, 0x0000);
		}

		// class APointLight : public ALight
		TEST_METHOD(Class__Engine__PointLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APointLight, 0x0000);
		}

		// class UPointLightComponent : public ULocalLightComponent
		TEST_METHOD(Class__Engine__PointLightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPointLightComponent, 0x0000);
		}

		// class UPolys : public UObject
		TEST_METHOD(Class__Engine__Polys)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPolys, 0x0000);
		}

		// class UPoseableMeshComponent : public USkinnedMeshComponent
		TEST_METHOD(Class__Engine__PoseableMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPoseableMeshComponent, 0x0000);
		}

		// class UPoseAsset : public UAnimationAsset
		TEST_METHOD(Class__Engine__PoseAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPoseAsset, 0x0000);
		}

		// class UPoseWatch : public UObject
		TEST_METHOD(Class__Engine__PoseWatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPoseWatch, 0x0000);
		}

		// class APostProcessVolume : public AVolume
		TEST_METHOD(Class__Engine__PostProcessVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APostProcessVolume, 0x0000);
		}

		// class APrecomputedVisibilityOverrideVolume : public AVolume
		TEST_METHOD(Class__Engine__PrecomputedVisibilityOverrideVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APrecomputedVisibilityOverrideVolume, 0x0000);
		}

		// class APrecomputedVisibilityVolume : public AVolume
		TEST_METHOD(Class__Engine__PrecomputedVisibilityVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APrecomputedVisibilityVolume, 0x0000);
		}

		// class UPreviewCollectionInterface : public UInterface
		TEST_METHOD(Class__Engine__PreviewCollectionInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPreviewCollectionInterface, 0x0000);
		}

		// class UPreviewMeshCollection : public UDataAsset
		TEST_METHOD(Class__Engine__PreviewMeshCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPreviewMeshCollection, 0x0000);
		}

		// class UPrimaryAssetLabel : public UPrimaryDataAsset
		TEST_METHOD(Class__Engine__PrimaryAssetLabel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrimaryAssetLabel, 0x0000);
		}

		// class UProxyLODMeshSimplificationSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__ProxyLODMeshSimplificationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProxyLODMeshSimplificationSettings, 0x0000);
		}

		// class ARadialForceActor : public ARigidBodyBase
		TEST_METHOD(Class__Engine__RadialForceActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARadialForceActor, 0x0000);
		}

		// class URadialForceComponent : public USceneComponent
		TEST_METHOD(Class__Engine__RadialForceComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URadialForceComponent, 0x0000);
		}

		// class ARectLight : public ALight
		TEST_METHOD(Class__Engine__RectLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARectLight, 0x0000);
		}

		// class URectLightComponent : public ULocalLightComponent
		TEST_METHOD(Class__Engine__RectLightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URectLightComponent, 0x0000);
		}

		// class URendererSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__RendererSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URendererSettings, 0x0000);
		}

		// class URendererOverrideSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__RendererOverrideSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URendererOverrideSettings, 0x0000);
		}

		// class UReplicationDriver : public UObject
		TEST_METHOD(Class__Engine__ReplicationDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReplicationDriver, 0x0000);
		}

		// class UReplicationConnectionDriver : public UObject
		TEST_METHOD(Class__Engine__ReplicationConnectionDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReplicationConnectionDriver, 0x0000);
		}

		// class UReporterBase : public UObject
		TEST_METHOD(Class__Engine__ReporterBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReporterBase, 0x0000);
		}

		// class UReporterGraph : public UReporterBase
		TEST_METHOD(Class__Engine__ReporterGraph)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReporterGraph, 0x0000);
		}

		// class UReverbEffect : public UObject
		TEST_METHOD(Class__Engine__ReverbEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReverbEffect, 0x0000);
		}

		// class URig : public UObject
		TEST_METHOD(Class__Engine__Rig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URig, 0x0000);
		}

		// class URotatingMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__RotatingMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URotatingMovementComponent, 0x0000);
		}

		// class URVOAvoidanceInterface : public UInterface
		TEST_METHOD(Class__Engine__RVOAvoidanceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URVOAvoidanceInterface, 0x0000);
		}

		// class UScene : public UObject
		TEST_METHOD(Class__Engine__Scene)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScene, 0x0000);
		}

		// class ASceneCapture2D : public ASceneCapture
		TEST_METHOD(Class__Engine__SceneCapture2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASceneCapture2D, 0x0000);
		}

		// class USceneCaptureComponent2D : public USceneCaptureComponent
		TEST_METHOD(Class__Engine__SceneCaptureComponent2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneCaptureComponent2D, 0x0000);
		}

		// class USceneCaptureComponentCube : public USceneCaptureComponent
		TEST_METHOD(Class__Engine__SceneCaptureComponentCube)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneCaptureComponentCube, 0x0000);
		}

		// class ASceneCaptureCube : public ASceneCapture
		TEST_METHOD(Class__Engine__SceneCaptureCube)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASceneCaptureCube, 0x0000);
		}

		// class USCS_Node : public UObject
		TEST_METHOD(Class__Engine__SCS_Node)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USCS_Node, 0x0000);
		}

		// class USelection : public UObject
		TEST_METHOD(Class__Engine__Selection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USelection, 0x0000);
		}

		// class AServerStatReplicator : public AInfo
		TEST_METHOD(Class__Engine__ServerStatReplicator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AServerStatReplicator, 0x0000);
		}

		// class UShadowMapTexture2D : public UTexture2D
		TEST_METHOD(Class__Engine__ShadowMapTexture2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShadowMapTexture2D, 0x0000);
		}

		// class USimpleConstructionScript : public UObject
		TEST_METHOD(Class__Engine__SimpleConstructionScript)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USimpleConstructionScript, 0x0000);
		}

		// class USkeletalMesh : public UObject
		TEST_METHOD(Class__Engine__SkeletalMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMesh, 0x0000);
		}

		// class ASkeletalMeshActor : public AActor
		TEST_METHOD(Class__Engine__SkeletalMeshActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASkeletalMeshActor, 0x0000);
		}

		// class USkeletalMeshLODSettings : public UDataAsset
		TEST_METHOD(Class__Engine__SkeletalMeshLODSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshLODSettings, 0x0000);
		}

		// class USkeletalMeshSimplificationSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__SkeletalMeshSimplificationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshSimplificationSettings, 0x0000);
		}

		// class USkeletalMeshSocket : public UObject
		TEST_METHOD(Class__Engine__SkeletalMeshSocket)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshSocket, 0x0000);
		}

		// class USkyLightComponent : public ULightComponentBase
		TEST_METHOD(Class__Engine__SkyLightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkyLightComponent, 0x0000);
		}

		// class USlateBrushAsset : public UObject
		TEST_METHOD(Class__Engine__SlateBrushAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateBrushAsset, 0x0000);
		}

		// class USlateTextureAtlasInterface : public UInterface
		TEST_METHOD(Class__Engine__SlateTextureAtlasInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateTextureAtlasInterface, 0x0000);
		}

		// class USmokeTestCommandlet : public UCommandlet
		TEST_METHOD(Class__Engine__SmokeTestCommandlet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USmokeTestCommandlet, 0x0000);
		}

		// class USoundAttenuation : public UObject
		TEST_METHOD(Class__Engine__SoundAttenuation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundAttenuation, 0x0000);
		}

		// class USoundClass : public UObject
		TEST_METHOD(Class__Engine__SoundClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundClass, 0x0000);
		}

		// class USoundConcurrency : public UObject
		TEST_METHOD(Class__Engine__SoundConcurrency)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundConcurrency, 0x0000);
		}

		// class USoundCue : public USoundBase
		TEST_METHOD(Class__Engine__SoundCue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundCue, 0x0000);
		}

		// class USoundEffectSourcePreset : public USoundEffectPreset
		TEST_METHOD(Class__Engine__SoundEffectSourcePreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectSourcePreset, 0x0000);
		}

		// class USoundEffectSourcePresetChain : public UObject
		TEST_METHOD(Class__Engine__SoundEffectSourcePresetChain)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectSourcePresetChain, 0x0000);
		}

		// class USoundGroups : public UObject
		TEST_METHOD(Class__Engine__SoundGroups)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundGroups, 0x0000);
		}

		// class USoundNode : public UObject
		TEST_METHOD(Class__Engine__SoundNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNode, 0x0000);
		}

		// class USoundNodeAssetReferencer : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeAssetReferencer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeAssetReferencer, 0x0000);
		}

		// class USoundNodeAttenuation : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeAttenuation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeAttenuation, 0x0000);
		}

		// class USoundNodeBranch : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeBranch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeBranch, 0x0000);
		}

		// class USoundNodeConcatenator : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeConcatenator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeConcatenator, 0x0000);
		}

		// class USoundNodeDelay : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDelay)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDelay, 0x0000);
		}

		// class USoundNodeDialoguePlayer : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDialoguePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDialoguePlayer, 0x0000);
		}

		// class USoundNodeDistanceCrossFade : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDistanceCrossFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDistanceCrossFade, 0x0000);
		}

		// class USoundNodeDoppler : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDoppler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDoppler, 0x0000);
		}

		// class USoundNodeEnveloper : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeEnveloper)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeEnveloper, 0x0000);
		}

		// class USoundNodeGroupControl : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeGroupControl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeGroupControl, 0x0000);
		}

		// class USoundNodeLooping : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeLooping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeLooping, 0x0000);
		}

		// class USoundNodeMature : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeMature)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeMature, 0x0000);
		}

		// class USoundNodeMixer : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeMixer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeMixer, 0x0000);
		}

		// class USoundNodeModulator : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeModulator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeModulator, 0x0000);
		}

		// class USoundNodeModulatorContinuous : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeModulatorContinuous)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeModulatorContinuous, 0x0000);
		}

		// class USoundNodeOscillator : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeOscillator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeOscillator, 0x0000);
		}

		// class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
		TEST_METHOD(Class__Engine__SoundNodeParamCrossFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeParamCrossFade, 0x0000);
		}

		// class USoundNodeQualityLevel : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeQualityLevel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeQualityLevel, 0x0000);
		}

		// class USoundNodeRandom : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeRandom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeRandom, 0x0000);
		}

		// class USoundNodeSoundClass : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeSoundClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeSoundClass, 0x0000);
		}

		// class USoundNodeSwitch : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeSwitch, 0x0000);
		}

		// class USoundNodeWaveParam : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeWaveParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeWaveParam, 0x0000);
		}

		// class USoundNodeWavePlayer : public USoundNodeAssetReferencer
		TEST_METHOD(Class__Engine__SoundNodeWavePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeWavePlayer, 0x0000);
		}

		// class USoundSourceBus : public USoundWave
		TEST_METHOD(Class__Engine__SoundSourceBus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundSourceBus, 0x0000);
		}

		// class USoundSubmix : public UObject
		TEST_METHOD(Class__Engine__SoundSubmix)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundSubmix, 0x0000);
		}

		// class USpectatorPawnMovement : public UFloatingPawnMovement
		TEST_METHOD(Class__Engine__SpectatorPawnMovement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpectatorPawnMovement, 0x0000);
		}

		// class ASphereReflectionCapture : public AReflectionCapture
		TEST_METHOD(Class__Engine__SphereReflectionCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASphereReflectionCapture, 0x0000);
		}

		// class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
		TEST_METHOD(Class__Engine__SphereReflectionCaptureComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USphereReflectionCaptureComponent, 0x0000);
		}

		// class ASplineMeshActor : public AActor
		TEST_METHOD(Class__Engine__SplineMeshActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASplineMeshActor, 0x0000);
		}

		// class USplineMeshComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Engine__SplineMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USplineMeshComponent, 0x0000);
		}

		// class USpotLightComponent : public UPointLightComponent
		TEST_METHOD(Class__Engine__SpotLightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpotLightComponent, 0x0000);
		}

		// class USpringArmComponent : public USceneComponent
		TEST_METHOD(Class__Engine__SpringArmComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpringArmComponent, 0x0000);
		}

		// class UStaticMesh : public UObject
		TEST_METHOD(Class__Engine__StaticMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMesh, 0x0000);
		}

		// class UStaticMeshSocket : public UObject
		TEST_METHOD(Class__Engine__StaticMeshSocket)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMeshSocket, 0x0000);
		}

		// class UStereoLayerComponent : public USceneComponent
		TEST_METHOD(Class__Engine__StereoLayerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStereoLayerComponent, 0x0000);
		}

		// class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__StereoLayerFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStereoLayerFunctionLibrary, 0x0000);
		}

		// class UStringTable : public UObject
		TEST_METHOD(Class__Engine__StringTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStringTable, 0x0000);
		}

		// class USubsurfaceProfile : public UObject
		TEST_METHOD(Class__Engine__SubsurfaceProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubsurfaceProfile, 0x0000);
		}

		// class USubsystemBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__SubsystemBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubsystemBlueprintLibrary, 0x0000);
		}

		// class USubUVAnimation : public UObject
		TEST_METHOD(Class__Engine__SubUVAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubUVAnimation, 0x0000);
		}

		// class UTimecodeProvider : public UObject
		TEST_METHOD(Class__Engine__TimecodeProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimecodeProvider, 0x0000);
		}

		// class USystemTimeTimecodeProvider : public UTimecodeProvider
		TEST_METHOD(Class__Engine__SystemTimeTimecodeProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USystemTimeTimecodeProvider, 0x0000);
		}

		// class ATargetPoint : public AActor
		TEST_METHOD(Class__Engine__TargetPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATargetPoint, 0x0000);
		}

		// class UTextPropertyTestObject : public UObject
		TEST_METHOD(Class__Engine__TextPropertyTestObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextPropertyTestObject, 0x0000);
		}

		// class ATextRenderActor : public AActor
		TEST_METHOD(Class__Engine__TextRenderActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATextRenderActor, 0x0000);
		}

		// class UTexture2DDynamic : public UTexture
		TEST_METHOD(Class__Engine__Texture2DDynamic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTexture2DDynamic, 0x0000);
		}

		// class UTextureLightProfile : public UTexture2D
		TEST_METHOD(Class__Engine__TextureLightProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureLightProfile, 0x0000);
		}

		// class UTextureRenderTargetCube : public UTextureRenderTarget
		TEST_METHOD(Class__Engine__TextureRenderTargetCube)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureRenderTargetCube, 0x0000);
		}

		// class UThumbnailInfo : public UObject
		TEST_METHOD(Class__Engine__ThumbnailInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UThumbnailInfo, 0x0000);
		}

		// class UTimelineComponent : public UActorComponent
		TEST_METHOD(Class__Engine__TimelineComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimelineComponent, 0x0000);
		}

		// class UTimelineTemplate : public UObject
		TEST_METHOD(Class__Engine__TimelineTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimelineTemplate, 0x0000);
		}

		// class UTireType : public UDataAsset
		TEST_METHOD(Class__Engine__TireType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTireType, 0x0000);
		}

		// class UTouchInterface : public UObject
		TEST_METHOD(Class__Engine__TouchInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTouchInterface, 0x0000);
		}

		// class ATriggerBase : public AActor
		TEST_METHOD(Class__Engine__TriggerBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerBase, 0x0000);
		}

		// class ATriggerBox : public ATriggerBase
		TEST_METHOD(Class__Engine__TriggerBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerBox, 0x0000);
		}

		// class ATriggerCapsule : public ATriggerBase
		TEST_METHOD(Class__Engine__TriggerCapsule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerCapsule, 0x0000);
		}

		// class ATriggerSphere : public ATriggerBase
		TEST_METHOD(Class__Engine__TriggerSphere)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerSphere, 0x0000);
		}

		// class ATriggerVolume : public AVolume
		TEST_METHOD(Class__Engine__TriggerVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerVolume, 0x0000);
		}

		// class UTwitterIntegrationBase : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__TwitterIntegrationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTwitterIntegrationBase, 0x0000);
		}

		// class UUserDefinedEnum : public UEnum
		TEST_METHOD(Class__Engine__UserDefinedEnum)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedEnum, 0x0000);
		}

		// class UUserDefinedStruct : public UScriptStruct
		TEST_METHOD(Class__Engine__UserDefinedStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedStruct, 0x0000);
		}

		// class UUserInterfaceSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__UserInterfaceSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserInterfaceSettings, 0x0000);
		}

		// class UVectorField : public UObject
		TEST_METHOD(Class__Engine__VectorField)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorField, 0x0000);
		}

		// class UVectorFieldAnimated : public UVectorField
		TEST_METHOD(Class__Engine__VectorFieldAnimated)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorFieldAnimated, 0x0000);
		}

		// class UVectorFieldComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__VectorFieldComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorFieldComponent, 0x0000);
		}

		// class UVectorFieldStatic : public UVectorField
		TEST_METHOD(Class__Engine__VectorFieldStatic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorFieldStatic, 0x0000);
		}

		// class AVectorFieldVolume : public AActor
		TEST_METHOD(Class__Engine__VectorFieldVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVectorFieldVolume, 0x0000);
		}

		// class UVirtualTexture : public UObject
		TEST_METHOD(Class__Engine__VirtualTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVirtualTexture, 0x0000);
		}

		// class ULightMapVirtualTexture : public UVirtualTexture
		TEST_METHOD(Class__Engine__LightMapVirtualTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightMapVirtualTexture, 0x0000);
		}

		// class UVirtualTextureSpace : public UObject
		TEST_METHOD(Class__Engine__VirtualTextureSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVirtualTextureSpace, 0x0000);
		}

		// class ULightMapVirtualTextureSpace : public UVirtualTextureSpace
		TEST_METHOD(Class__Engine__LightMapVirtualTextureSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightMapVirtualTextureSpace, 0x0000);
		}

		// class UVisualLoggerAutomationTests : public UObject
		TEST_METHOD(Class__Engine__VisualLoggerAutomationTests)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerAutomationTests, 0x0000);
		}

		// class UVisualLoggerDebugSnapshotInterface : public UInterface
		TEST_METHOD(Class__Engine__VisualLoggerDebugSnapshotInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerDebugSnapshotInterface, 0x0000);
		}

		// class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__VisualLoggerKismetLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerKismetLibrary, 0x0000);
		}

		// class UVoiceChannel : public UChannel
		TEST_METHOD(Class__Engine__VoiceChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVoiceChannel, 0x0000);
		}

		// class UVOIPTalker : public UActorComponent
		TEST_METHOD(Class__Engine__VOIPTalker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVOIPTalker, 0x0000);
		}

		// class UVOIPStatics : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__VOIPStatics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVOIPStatics, 0x0000);
		}

		// class UVolumeTexture : public UTexture
		TEST_METHOD(Class__Engine__VolumeTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVolumeTexture, 0x0000);
		}

		// class AVolumetricLightmapDensityVolume : public AVolume
		TEST_METHOD(Class__Engine__VolumetricLightmapDensityVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVolumetricLightmapDensityVolume, 0x0000);
		}

		// class AWindDirectionalSource : public AInfo
		TEST_METHOD(Class__Engine__WindDirectionalSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWindDirectionalSource, 0x0000);
		}

		// class UWindDirectionalSourceComponent : public USceneComponent
		TEST_METHOD(Class__Engine__WindDirectionalSourceComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWindDirectionalSourceComponent, 0x0000);
		}

		// class UWorldComposition : public UObject
		TEST_METHOD(Class__Engine__WorldComposition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldComposition, 0x0000);
		}

		// class UHierarchicalLODSetup : public UObject
		TEST_METHOD(Class__Engine__HierarchicalLODSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHierarchicalLODSetup, 0x0000);
		}

		// class AWorldSettings : public AInfo
		TEST_METHOD(Class__Engine__WorldSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWorldSettings, 0x0000);
		}

		// class UMaterialExpressionSpriteTextureSampler : public UMaterialExpressionTextureSampleParameter2D
		TEST_METHOD(Class__Paper2D__MaterialExpressionSpriteTextureSampler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSpriteTextureSampler, 0x0000);
		}

		// class APaperCharacter : public ACharacter
		TEST_METHOD(Class__Paper2D__PaperCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperCharacter, 0x0000);
		}

		// class UPaperFlipbook : public UObject
		TEST_METHOD(Class__Paper2D__PaperFlipbook)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperFlipbook, 0x0000);
		}

		// class APaperFlipbookActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperFlipbookActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperFlipbookActor, 0x0000);
		}

		// class UPaperFlipbookComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperFlipbookComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperFlipbookComponent, 0x0000);
		}

		// class APaperGroupedSpriteActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperGroupedSpriteActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperGroupedSpriteActor, 0x0000);
		}

		// class UPaperGroupedSpriteComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperGroupedSpriteComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperGroupedSpriteComponent, 0x0000);
		}

		// class UPaperRuntimeSettings : public UObject
		TEST_METHOD(Class__Paper2D__PaperRuntimeSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperRuntimeSettings, 0x0000);
		}

		// class UPaperSprite : public UObject
		TEST_METHOD(Class__Paper2D__PaperSprite)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSprite, 0x0000);
		}

		// class APaperSpriteActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperSpriteActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperSpriteActor, 0x0000);
		}

		// class UPaperSpriteAtlas : public UObject
		TEST_METHOD(Class__Paper2D__PaperSpriteAtlas)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSpriteAtlas, 0x0000);
		}

		// class UPaperSpriteBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Paper2D__PaperSpriteBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSpriteBlueprintLibrary, 0x0000);
		}

		// class UPaperSpriteComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperSpriteComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSpriteComponent, 0x0000);
		}

		// class APaperTerrainActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperTerrainActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperTerrainActor, 0x0000);
		}

		// class UPaperTerrainComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Paper2D__PaperTerrainComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTerrainComponent, 0x0000);
		}

		// class UPaperTerrainMaterial : public UDataAsset
		TEST_METHOD(Class__Paper2D__PaperTerrainMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTerrainMaterial, 0x0000);
		}

		// class UPaperTerrainSplineComponent : public USplineComponent
		TEST_METHOD(Class__Paper2D__PaperTerrainSplineComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTerrainSplineComponent, 0x0000);
		}

		// class UPaperTileLayer : public UObject
		TEST_METHOD(Class__Paper2D__PaperTileLayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileLayer, 0x0000);
		}

		// class UPaperTileMap : public UObject
		TEST_METHOD(Class__Paper2D__PaperTileMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileMap, 0x0000);
		}

		// class APaperTileMapActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperTileMapActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperTileMapActor, 0x0000);
		}

		// class UPaperTileMapComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperTileMapComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileMapComponent, 0x0000);
		}

		// class UPaperTileSet : public UObject
		TEST_METHOD(Class__Paper2D__PaperTileSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileSet, 0x0000);
		}

		// class UTileMapBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Paper2D__TileMapBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTileMapBlueprintLibrary, 0x0000);
		}

		// class ULightPropagationVolumeBlendable : public UObject
		TEST_METHOD(Class__LightPropagationVolumeRuntime__LightPropagationVolumeBlendable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightPropagationVolumeBlendable, 0x0000);
		}

		// class UAudioCurveSourceComponent : public UAudioComponent
		TEST_METHOD(Class__FacialAnimation__AudioCurveSourceComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioCurveSourceComponent, 0x0000);
		}

		// class ABP_Projectile_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile__BP_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_C, 0x0000);
		}

		// class UAndroidPermissionCallbackProxy : public UObject
		TEST_METHOD(Class__AndroidPermission__AndroidPermissionCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAndroidPermissionCallbackProxy, 0x0000);
		}

		// class UAndroidPermissionFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AndroidPermission__AndroidPermissionFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAndroidPermissionFunctionLibrary, 0x0000);
		}

		// class AArchVisCharacter : public ACharacter
		TEST_METHOD(Class__ArchVisCharacter__ArchVisCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArchVisCharacter, 0x0000);
		}

		// class UArchVisCharMovementComponent : public UCharacterMovementComponent
		TEST_METHOD(Class__ArchVisCharacter__ArchVisCharMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArchVisCharMovementComponent, 0x0000);
		}

		// class UAction_Shield_Splitter_C : public UAction_Shield_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Shield_Splitter__Action_Shield_Splitter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Shield_Splitter_C, 0x0000);
		}

		// class ABP_Root_Splitter_Shockwave_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Root_Splitter_Shockwave__BP_Root_Splitter_Shockwave_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Root_Splitter_Shockwave_C, 0x0000);
		}

		// class UCombatClass_Boss_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_Boss__CombatClass_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_Boss_C, 0x0000);
		}

		// class UCraftingRecipe_Base : public UObject
		TEST_METHOD(Class__GunfireRuntime__CraftingRecipe_Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCraftingRecipe_Base, 0x0000);
		}

		// class UActorModifier : public UObject
		TEST_METHOD(Class__GunfireRuntime__ActorModifier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorModifier, 0x0000);
		}

		// class UActionBase : public UActorModifier
		TEST_METHOD(Class__GunfireRuntime__ActionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActionBase, 0x0000);
		}

		// class AItem : public AActor
		TEST_METHOD(Class__GunfireRuntime__Item)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem, 0x0000);
		}

		// class AEquipment : public AItem
		TEST_METHOD(Class__GunfireRuntime__Equipment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEquipment, 0x0000);
		}

		// class AUseableItem : public AEquipment
		TEST_METHOD(Class__GunfireRuntime__UseableItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AUseableItem, 0x0000);
		}

		// class UItemInstanceData : public UObject
		TEST_METHOD(Class__GunfireRuntime__ItemInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemInstanceData, 0x0000);
		}

		// class UEquipmentInstanceData : public UItemInstanceData
		TEST_METHOD(Class__GunfireRuntime__EquipmentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEquipmentInstanceData, 0x0000);
		}

		// class UStateMachineSubobject : public UObject
		TEST_METHOD(Class__GunfireRuntime__StateMachineSubobject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateMachineSubobject, 0x0000);
		}

		// class UCondition : public UStateMachineSubobject
		TEST_METHOD(Class__GunfireRuntime__Condition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCondition, 0x0000);
		}

		// class UItemType : public UObject
		TEST_METHOD(Class__GunfireRuntime__ItemType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType, 0x0000);
		}

		// class AWeaponBase : public AEquipment
		TEST_METHOD(Class__GunfireRuntime__WeaponBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeaponBase, 0x0000);
		}

		// class UAnimInstanceGunfire : public UAnimInstance
		TEST_METHOD(Class__GunfireRuntime__AnimInstanceGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimInstanceGunfire, 0x0000);
		}

		// class UItemCategory : public UObject
		TEST_METHOD(Class__GunfireRuntime__ItemCategory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory, 0x0000);
		}

		// class UTraitsComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__TraitsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTraitsComponent, 0x0000);
		}

		// class APlayerStateGunfire : public APlayerState
		TEST_METHOD(Class__GunfireRuntime__PlayerStateGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerStateGunfire, 0x0000);
		}

		// class ARangedWeapon : public AWeaponBase
		TEST_METHOD(Class__GunfireRuntime__RangedWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARangedWeapon, 0x0000);
		}

		// class ACharacterGunfire : public ACharacter
		TEST_METHOD(Class__GunfireRuntime__CharacterGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacterGunfire, 0x0000);
		}

		// class APlayerGunfire : public ACharacterGunfire
		TEST_METHOD(Class__GunfireRuntime__PlayerGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerGunfire, 0x0000);
		}

		// class UCheatManagerGunfire : public UCheatManager
		TEST_METHOD(Class__GunfireRuntime__CheatManagerGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheatManagerGunfire, 0x0000);
		}

		// class UDifficultyScalingComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__DifficultyScalingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDifficultyScalingComponent, 0x0000);
		}

		// class UCameraState : public UObject
		TEST_METHOD(Class__GunfireRuntime__CameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraState, 0x0000);
		}

		// class UFlyCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__FlyCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFlyCameraState, 0x0000);
		}

		// class UFogOfWarComponent : public UStaticMeshComponent
		TEST_METHOD(Class__GunfireRuntime__FogOfWarComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFogOfWarComponent, 0x0000);
		}

		// class UGameInstanceGunfire : public UGameInstance
		TEST_METHOD(Class__GunfireRuntime__GameInstanceGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameInstanceGunfire, 0x0000);
		}

		// class AGameModeGunfire : public AGameMode
		TEST_METHOD(Class__GunfireRuntime__GameModeGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameModeGunfire, 0x0000);
		}

		// class AGameStateGunfire : public AGameState
		TEST_METHOD(Class__GunfireRuntime__GameStateGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameStateGunfire, 0x0000);
		}

		// class AUIHud : public AHUD
		TEST_METHOD(Class__GunfireRuntime__UIHud)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AUIHud, 0x0000);
		}

		// class UMapGenComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__MapGenComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapGenComponent, 0x0000);
		}

		// class AMeleeWeapon : public AWeaponBase
		TEST_METHOD(Class__GunfireRuntime__MeleeWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMeleeWeapon, 0x0000);
		}

		// class AMiniMapDisplayActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__MiniMapDisplayActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniMapDisplayActor, 0x0000);
		}

		// class AMiniMapLevelRegion : public AActor
		TEST_METHOD(Class__GunfireRuntime__MiniMapLevelRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniMapLevelRegion, 0x0000);
		}

		// class UMiniMapWidget : public UUserWidget
		TEST_METHOD(Class__GunfireRuntime__MiniMapWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMapWidget, 0x0000);
		}

		// class APlayerControllerGunfire : public APlayerController
		TEST_METHOD(Class__GunfireRuntime__PlayerControllerGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerControllerGunfire, 0x0000);
		}

		// class UPlayStateEffect : public UObject
		TEST_METHOD(Class__GunfireRuntime__PlayStateEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect, 0x0000);
		}

		// class UInventoryComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__InventoryComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInventoryComponent, 0x0000);
		}

		// class UProgressionComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ProgressionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProgressionComponent, 0x0000);
		}

		// class AQuest : public AActor
		TEST_METHOD(Class__GunfireRuntime__Quest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest, 0x0000);
		}

		// class UQuestComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__QuestComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestComponent, 0x0000);
		}

		// class UQuestEntity : public UQuestComponent
		TEST_METHOD(Class__GunfireRuntime__QuestEntity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestEntity, 0x0000);
		}

		// class UQuestManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__QuestManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestManager, 0x0000);
		}

		// class USequencerManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SequencerManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USequencerManager, 0x0000);
		}

		// class USilhouetteComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SilhouetteComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USilhouetteComponent, 0x0000);
		}

		// class USpawnFilterManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SpawnFilterManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterManager, 0x0000);
		}

		// class UStateCameraComponent : public UCameraComponent
		TEST_METHOD(Class__GunfireRuntime__StateCameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateCameraComponent, 0x0000);
		}

		// class UTrait : public UActorModifier
		TEST_METHOD(Class__GunfireRuntime__Trait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait, 0x0000);
		}

		// class AUIActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__UIActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AUIActor, 0x0000);
		}

		// class AEquipmentMod : public AItem
		TEST_METHOD(Class__GunfireRuntime__EquipmentMod)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEquipmentMod, 0x0000);
		}

		// class UActorStateDecorator : public UStateMachineSubobject
		TEST_METHOD(Class__GunfireRuntime__ActorStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorStateDecorator, 0x0000);
		}

		// class UShowEquipmentAbstractDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__ShowEquipmentAbstractDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShowEquipmentAbstractDecorator, 0x0000);
		}

		// class USpawnFilterEntry : public UObject
		TEST_METHOD(Class__GunfireRuntime__SpawnFilterEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterEntry, 0x0000);
		}

		// class USpawnFilterElement : public USpawnFilterEntry
		TEST_METHOD(Class__GunfireRuntime__SpawnFilterElement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterElement, 0x0000);
		}

		// class USpawnTableEntry : public UObject
		TEST_METHOD(Class__GunfireRuntime__SpawnTableEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableEntry, 0x0000);
		}

		// class USpawnTableElement : public USpawnTableEntry
		TEST_METHOD(Class__GunfireRuntime__SpawnTableElement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableElement, 0x0000);
		}

		// class UAchievementHelpers : public UGameInstanceSubsystem
		TEST_METHOD(Class__GunfireRuntime__AchievementHelpers)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementHelpers, 0x0000);
		}

		// class UAchievementInfo : public UObject
		TEST_METHOD(Class__GunfireRuntime__AchievementInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementInfo, 0x0000);
		}

		// class UAchievementList : public UObject
		TEST_METHOD(Class__GunfireRuntime__AchievementList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementList, 0x0000);
		}

		// class UAchievementUpdateCallbackProxy : public UAchievementWriteCallbackProxy
		TEST_METHOD(Class__GunfireRuntime__AchievementUpdateCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementUpdateCallbackProxy, 0x0000);
		}

		// class UAchievementIncrementCallbackProxy : public UAchievementUpdateCallbackProxy
		TEST_METHOD(Class__GunfireRuntime__AchievementIncrementCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementIncrementCallbackProxy, 0x0000);
		}

		// class UAchievementSetCallbackProxy : public UAchievementUpdateCallbackProxy
		TEST_METHOD(Class__GunfireRuntime__AchievementSetCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementSetCallbackProxy, 0x0000);
		}

		// class UActionComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ActionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActionComponent, 0x0000);
		}

		// class UActorContextCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__ActorContextCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorContextCondition, 0x0000);
		}

		// class UActorState : public UStateMachineSubobject
		TEST_METHOD(Class__GunfireRuntime__ActorState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorState, 0x0000);
		}

		// class UActorStateTransition : public UStateMachineSubobject
		TEST_METHOD(Class__GunfireRuntime__ActorStateTransition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorStateTransition, 0x0000);
		}

		// class UAdvancedDecalComponent : public UDecalComponent
		TEST_METHOD(Class__GunfireRuntime__AdvancedDecalComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAdvancedDecalComponent, 0x0000);
		}

		// class UAdvImage : public UImage
		TEST_METHOD(Class__GunfireRuntime__AdvImage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAdvImage, 0x0000);
		}

		// class UAdvTextBlock : public UWidget
		TEST_METHOD(Class__GunfireRuntime__AdvTextBlock)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAdvTextBlock, 0x0000);
		}

		// class UAdvTextBlockSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__AdvTextBlockSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAdvTextBlockSettings, 0x0000);
		}

		// class UAIAttackStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIAttackStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIAttackStateDecorator, 0x0000);
		}

		// class UAIAwarenessComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AIAwarenessComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIAwarenessComponent, 0x0000);
		}

		// class UAIAwarenessManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AIAwarenessManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIAwarenessManager, 0x0000);
		}

		// class AAICharacter : public ACharacterGunfire
		TEST_METHOD(Class__GunfireRuntime__AICharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAICharacter, 0x0000);
		}

		// class UAITargetSelector : public UObject
		TEST_METHOD(Class__GunfireRuntime__AITargetSelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITargetSelector, 0x0000);
		}

		// class UAICharacterNearbyTargetSelector : public UAITargetSelector
		TEST_METHOD(Class__GunfireRuntime__AICharacterNearbyTargetSelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAICharacterNearbyTargetSelector, 0x0000);
		}

		// class AAIGoalActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__AIGoalActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIGoalActor, 0x0000);
		}

		// class AAIControllerGunfire : public AAIController
		TEST_METHOD(Class__GunfireRuntime__AIControllerGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIControllerGunfire, 0x0000);
		}

		// class UAIConvergeToStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIConvergeToStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIConvergeToStateDecorator, 0x0000);
		}

		// class UAICoordinator : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AICoordinator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAICoordinator, 0x0000);
		}

		// class UAIDataContainer : public UObject
		TEST_METHOD(Class__GunfireRuntime__AIDataContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataContainer, 0x0000);
		}

		// class AAIData : public AActor
		TEST_METHOD(Class__GunfireRuntime__AIData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIData, 0x0000);
		}

		// class UAIDataComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AIDataComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataComponent, 0x0000);
		}

		// class UAIDataGenerationSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__AIDataGenerationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataGenerationSettings, 0x0000);
		}

		// class UAIDataRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__GunfireRuntime__AIDataRenderingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataRenderingComponent, 0x0000);
		}

		// class UAIDefaultTargetSelector : public UAITargetSelector
		TEST_METHOD(Class__GunfireRuntime__AIDefaultTargetSelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDefaultTargetSelector, 0x0000);
		}

		// class UEncounterGroupInstance : public UObject
		TEST_METHOD(Class__GunfireRuntime__EncounterGroupInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEncounterGroupInstance, 0x0000);
		}

		// class UAIDirector : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AIDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDirector, 0x0000);
		}

		// class AAIDirectorSettings : public AActor
		TEST_METHOD(Class__GunfireRuntime__AIDirectorSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIDirectorSettings, 0x0000);
		}

		// class UAIDistanceCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AIDistanceCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDistanceCondition, 0x0000);
		}

		// class UAIEnvQueryStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIEnvQueryStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIEnvQueryStateDecorator, 0x0000);
		}

		// class UAIFollowTargetStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIFollowTargetStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIFollowTargetStateDecorator, 0x0000);
		}

		// class UAIHasBetterTargetCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AIHasBetterTargetCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIHasBetterTargetCondition, 0x0000);
		}

		// class UAIHasPatrolPathCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AIHasPatrolPathCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIHasPatrolPathCondition, 0x0000);
		}

		// class UAIHealTargetSelector : public UAITargetSelector
		TEST_METHOD(Class__GunfireRuntime__AIHealTargetSelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIHealTargetSelector, 0x0000);
		}

		// class UAIJumpCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AIJumpCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIJumpCondition, 0x0000);
		}

		// class UAnimActorState : public UActorState
		TEST_METHOD(Class__GunfireRuntime__AnimActorState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimActorState, 0x0000);
		}

		// class UAIJumpState : public UAnimActorState
		TEST_METHOD(Class__GunfireRuntime__AIJumpState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIJumpState, 0x0000);
		}

		// class UAIMoveForwardStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIMoveForwardStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIMoveForwardStateDecorator, 0x0000);
		}

		// class UAimTargetCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AimTargetCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAimTargetCondition, 0x0000);
		}

		// class UAINavArea : public UNavArea
		TEST_METHOD(Class__GunfireRuntime__AINavArea)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAINavArea, 0x0000);
		}

		// class UAINavAreaCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AINavAreaCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAINavAreaCondition, 0x0000);
		}

		// class UAINavLinkCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AINavLinkCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAINavLinkCondition, 0x0000);
		}

		// class UAINavLinkState : public UAnimActorState
		TEST_METHOD(Class__GunfireRuntime__AINavLinkState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAINavLinkState, 0x0000);
		}

		// class UAINearbyPlayerTargetSelector : public UAITargetSelector
		TEST_METHOD(Class__GunfireRuntime__AINearbyPlayerTargetSelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAINearbyPlayerTargetSelector, 0x0000);
		}

		// class UAINodePathCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AINodePathCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAINodePathCondition, 0x0000);
		}

		// class AAIPathPoint : public AActor
		TEST_METHOD(Class__GunfireRuntime__AIPathPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIPathPoint, 0x0000);
		}

		// class UAIPathResultCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AIPathResultCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPathResultCondition, 0x0000);
		}

		// class UAIPathStatusCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AIPathStatusCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPathStatusCondition, 0x0000);
		}

		// class UAIPathToStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIPathToStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPathToStateDecorator, 0x0000);
		}

		// class UAIPatrolStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIPatrolStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPatrolStateDecorator, 0x0000);
		}

		// class UAIPerceptionStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIPerceptionStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionStateDecorator, 0x0000);
		}

		// class UAIPOIType : public UObject
		TEST_METHOD(Class__GunfireRuntime__AIPOIType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPOIType, 0x0000);
		}

		// class AAIPointOfInterest : public AActor
		TEST_METHOD(Class__GunfireRuntime__AIPointOfInterest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIPointOfInterest, 0x0000);
		}

		// class UAIPointOfInterestManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AIPointOfInterestManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPointOfInterestManager, 0x0000);
		}

		// class UAIPointOfInterestComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AIPointOfInterestComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPointOfInterestComponent, 0x0000);
		}

		// class UAIPOICondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AIPOICondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPOICondition, 0x0000);
		}

		// class UAIResurrectTargetSelector : public UAITargetSelector
		TEST_METHOD(Class__GunfireRuntime__AIResurrectTargetSelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIResurrectTargetSelector, 0x0000);
		}

		// class UAIShootStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIShootStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIShootStateDecorator, 0x0000);
		}

		// class UAISpawnPointDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AISpawnPointDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISpawnPointDecorator, 0x0000);
		}

		// class UAIStrafeTargetStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIStrafeTargetStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIStrafeTargetStateDecorator, 0x0000);
		}

		// class UCombatClass : public UObject
		TEST_METHOD(Class__GunfireRuntime__CombatClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass, 0x0000);
		}

		// class AAITacticalPointData : public AActor
		TEST_METHOD(Class__GunfireRuntime__AITacticalPointData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAITacticalPointData, 0x0000);
		}

		// class AAICustomTacticalPoint : public AActor
		TEST_METHOD(Class__GunfireRuntime__AICustomTacticalPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAICustomTacticalPoint, 0x0000);
		}

		// class UAITacticalPointDebugComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AITacticalPointDebugComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITacticalPointDebugComponent, 0x0000);
		}

		// class UAITacticalPointCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AITacticalPointCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITacticalPointCondition, 0x0000);
		}

		// class UAITacticalPointContainerInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__AITacticalPointContainerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITacticalPointContainerInterface, 0x0000);
		}

		// class UAITacticalPointManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AITacticalPointManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITacticalPointManager, 0x0000);
		}

		// class UAITargetChangedCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AITargetChangedCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITargetChangedCondition, 0x0000);
		}

		// class UAITargetCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AITargetCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITargetCondition, 0x0000);
		}

		// class UAITargetSelectorStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AITargetSelectorStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITargetSelectorStateDecorator, 0x0000);
		}

		// class UAIUpdateTargetStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIUpdateTargetStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIUpdateTargetStateDecorator, 0x0000);
		}

		// class UAIWanderStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AIWanderStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIWanderStateDecorator, 0x0000);
		}

		// class UAmbientAudioComponent : public UAudioComponent
		TEST_METHOD(Class__GunfireRuntime__AmbientAudioComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAmbientAudioComponent, 0x0000);
		}

		// class UAmbientAudioManager : public UObject
		TEST_METHOD(Class__GunfireRuntime__AmbientAudioManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAmbientAudioManager, 0x0000);
		}

		// class UAmbientSpawnManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AmbientSpawnManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAmbientSpawnManager, 0x0000);
		}

		// class AVisualizableActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__VisualizableActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVisualizableActor, 0x0000);
		}

		// class AAmbientSpawnRegion : public AVisualizableActor
		TEST_METHOD(Class__GunfireRuntime__AmbientSpawnRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmbientSpawnRegion, 0x0000);
		}

		// class UAngleDiffCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__AngleDiffCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAngleDiffCondition, 0x0000);
		}

		// class UAnimatedCameraComponent : public UCameraComponent
		TEST_METHOD(Class__GunfireRuntime__AnimatedCameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimatedCameraComponent, 0x0000);
		}

		// class UAnimatedCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__AnimatedCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimatedCameraState, 0x0000);
		}

		// class UAnimationSet : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__AnimationSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationSet, 0x0000);
		}

		// class UOptimizableNotifyInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__OptimizableNotifyInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOptimizableNotifyInterface, 0x0000);
		}

		// class UConditionalAnimNotify : public UAnimNotify
		TEST_METHOD(Class__GunfireRuntime__ConditionalAnimNotify)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConditionalAnimNotify, 0x0000);
		}

		// class UStateTransientAnimNotify : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__StateTransientAnimNotify)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateTransientAnimNotify, 0x0000);
		}

		// class UAnimNotify_ActionEvent : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_ActionEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ActionEvent, 0x0000);
		}

		// class UAnimNotify_AnimatedCameraCut : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_AnimatedCameraCut)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_AnimatedCameraCut, 0x0000);
		}

		// class UConditionalAnimNotifyState : public UAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__ConditionalAnimNotifyState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConditionalAnimNotifyState, 0x0000);
		}

		// class UAnimNotify_AnimatedCameraCutFOVTransition : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_AnimatedCameraCutFOVTransition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_AnimatedCameraCutFOVTransition, 0x0000);
		}

		// class UAnimNotify_Awareness : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_Awareness)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Awareness, 0x0000);
		}

		// class UAnimNotify_CameraShake : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_CameraShake)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_CameraShake, 0x0000);
		}

		// class UAnimNotify_CharacterEvent : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_CharacterEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_CharacterEvent, 0x0000);
		}

		// class UAnimNotify_DoAction : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_DoAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_DoAction, 0x0000);
		}

		// class UAnimNotify_EnableHitLocation : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_EnableHitLocation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_EnableHitLocation, 0x0000);
		}

		// class UAnimNotify_PlayerEffect : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_PlayerEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayerEffect, 0x0000);
		}

		// class UAnimNotify_ForceFeedback : public UAnimNotify_PlayerEffect
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_ForceFeedback)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ForceFeedback, 0x0000);
		}

		// class UAnimNotify_ImpactEffect : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_ImpactEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ImpactEffect, 0x0000);
		}

		// class UAnimNotify_Impulse : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_Impulse)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Impulse, 0x0000);
		}

		// class UAnimNotify_ItemEvent : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_ItemEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ItemEvent, 0x0000);
		}

		// class UAnimNotify_PlaySoundParameter : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_PlaySoundParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlaySoundParameter, 0x0000);
		}

		// class UAnimNotify_PlaySoundSetSound : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_PlaySoundSetSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlaySoundSetSound, 0x0000);
		}

		// class UAnimNotify_PlayVisualSetParticleEffect : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_PlayVisualSetParticleEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayVisualSetParticleEffect, 0x0000);
		}

		// class UAnimNotify_Ragdoll : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_Ragdoll)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Ragdoll, 0x0000);
		}

		// class UAnimNotify_ScaleGravity : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_ScaleGravity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ScaleGravity, 0x0000);
		}

		// class UAnimNotify_SetComponentVisible : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_SetComponentVisible)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SetComponentVisible, 0x0000);
		}

		// class UAnimNotify_StateParticleEffect : public UAnimNotify_PlayParticleEffect
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_StateParticleEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_StateParticleEffect, 0x0000);
		}

		// class UAnimNotify_StateSound : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_StateSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_StateSound, 0x0000);
		}

		// class UAnimNotify_StowWeapon : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_StowWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_StowWeapon, 0x0000);
		}

		// class UAnimNotify_TargetConverge : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_TargetConverge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_TargetConverge, 0x0000);
		}

		// class UAnimNotify_TimeDilation : public UStateTransientAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_TimeDilation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_TimeDilation, 0x0000);
		}

		// class UAnimNotify_TriggerNearbyEmitters : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_TriggerNearbyEmitters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_TriggerNearbyEmitters, 0x0000);
		}

		// class UAnimNotify_UpdateDynamics : public UConditionalAnimNotify
		TEST_METHOD(Class__GunfireRuntime__AnimNotify_UpdateDynamics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_UpdateDynamics, 0x0000);
		}

		// class UAnimNotifyState_AnimTag : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_AnimTag)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AnimTag, 0x0000);
		}

		// class UAnimNotifyState_FaceTarget : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_FaceTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_FaceTarget, 0x0000);
		}

		// class UAnimNotifyState_MaterialParam : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_MaterialParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_MaterialParam, 0x0000);
		}

		// class UAnimNotifyState_ResetLookPoses : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_ResetLookPoses)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_ResetLookPoses, 0x0000);
		}

		// class UAnimNotifyState_SetClothBlend : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_SetClothBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_SetClothBlend, 0x0000);
		}

		// class UAnimNotifyState_SoundTag : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_SoundTag)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_SoundTag, 0x0000);
		}

		// class UAnimNotifyState_StateTrail : public UAnimNotifyState_Trail
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_StateTrail)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_StateTrail, 0x0000);
		}

		// class UStateTransientAnimNotifyState : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__StateTransientAnimNotifyState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateTransientAnimNotifyState, 0x0000);
		}

		// class UAnimNotifyState_StateWindow : public UStateTransientAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_StateWindow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_StateWindow, 0x0000);
		}

		// class UAnimNotifyState_TagWindow : public UStateTransientAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_TagWindow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_TagWindow, 0x0000);
		}

		// class UAnimNotifyState_TargetAlign : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_TargetAlign)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_TargetAlign, 0x0000);
		}

		// class UAnimNotifyState_TimeDilationState : public UStateTransientAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_TimeDilationState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_TimeDilationState, 0x0000);
		}

		// class UAnimNotifyState_VisualSetTrail : public UAnimNotifyState_StateTrail
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_VisualSetTrail)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_VisualSetTrail, 0x0000);
		}

		// class UAnimNotifyState_WeaponPhantom : public UConditionalAnimNotifyState
		TEST_METHOD(Class__GunfireRuntime__AnimNotifyState_WeaponPhantom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_WeaponPhantom, 0x0000);
		}

		// class UAnimTagStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AnimTagStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimTagStateDecorator, 0x0000);
		}

		// class UApexCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__ApexCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UApexCondition, 0x0000);
		}

		// class UAssetCache : public UObject
		TEST_METHOD(Class__GunfireRuntime__AssetCache)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetCache, 0x0000);
		}

		// class UAttributesComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__AttributesComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAttributesComponent, 0x0000);
		}

		// class UAudioStateID : public UObject
		TEST_METHOD(Class__GunfireRuntime__AudioStateID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioStateID, 0x0000);
		}

		// class UAudioState_Default : public UAudioStateID
		TEST_METHOD(Class__GunfireRuntime__AudioState_Default)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioState_Default, 0x0000);
		}

		// class AAudioCustomVolume : public AAudioVolume
		TEST_METHOD(Class__GunfireRuntime__AudioCustomVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAudioCustomVolume, 0x0000);
		}

		// class UBlockEvadeStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__BlockEvadeStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlockEvadeStateDecorator, 0x0000);
		}

		// class UBlueprintFunctionLibraryGunfire : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__GunfireRuntime__BlueprintFunctionLibraryGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintFunctionLibraryGunfire, 0x0000);
		}

		// class UBoundsStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__BoundsStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoundsStateDecorator, 0x0000);
		}

		// class UBreakableImpulseComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__BreakableImpulseComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBreakableImpulseComponent, 0x0000);
		}

		// class UBreakableComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__BreakableComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBreakableComponent, 0x0000);
		}

		// class UBTDecorator_Condition : public UBTDecorator
		TEST_METHOD(Class__GunfireRuntime__BTDecorator_Condition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_Condition, 0x0000);
		}

		// class UBTTask_SetActorState : public UBTTaskNode
		TEST_METHOD(Class__GunfireRuntime__BTTask_SetActorState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_SetActorState, 0x0000);
		}

		// class UGroundProbeComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__GroundProbeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGroundProbeComponent, 0x0000);
		}

		// class ABuilder : public AEquipment
		TEST_METHOD(Class__GunfireRuntime__Builder)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABuilder, 0x0000);
		}

		// class UButtonCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__ButtonCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButtonCondition, 0x0000);
		}

		// class UCameraModifier_SimulatedHMD : public UCameraModifier
		TEST_METHOD(Class__GunfireRuntime__CameraModifier_SimulatedHMD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraModifier_SimulatedHMD, 0x0000);
		}

		// class UCameraStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__CameraStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraStateDecorator, 0x0000);
		}

		// class UAnimatedCameraStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__AnimatedCameraStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimatedCameraStateDecorator, 0x0000);
		}

		// class UCapsuleSizeStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__CapsuleSizeStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCapsuleSizeStateDecorator, 0x0000);
		}

		// class UChallenge : public UObject
		TEST_METHOD(Class__GunfireRuntime__Challenge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChallenge, 0x0000);
		}

		// class UChallengeComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ChallengeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChallengeComponent, 0x0000);
		}

		// class UChallengeList : public UObject
		TEST_METHOD(Class__GunfireRuntime__ChallengeList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChallengeList, 0x0000);
		}

		// class UChallengeObjective : public UObject
		TEST_METHOD(Class__GunfireRuntime__ChallengeObjective)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChallengeObjective, 0x0000);
		}

		// class UChallengeReward : public UObject
		TEST_METHOD(Class__GunfireRuntime__ChallengeReward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChallengeReward, 0x0000);
		}

		// class UChanceCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__ChanceCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChanceCondition, 0x0000);
		}

		// class UCharacterManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__CharacterManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterManager, 0x0000);
		}

		// class UCharacterMovementComponentGunfire : public UCharacterMovementComponent
		TEST_METHOD(Class__GunfireRuntime__CharacterMovementComponentGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMovementComponentGunfire, 0x0000);
		}

		// class ASpawnPointBase : public AActor
		TEST_METHOD(Class__GunfireRuntime__SpawnPointBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPointBase, 0x0000);
		}

		// class ACharacterSpawnPoint : public ASpawnPointBase
		TEST_METHOD(Class__GunfireRuntime__CharacterSpawnPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacterSpawnPoint, 0x0000);
		}

		// class AChargeableItem : public AEquipment
		TEST_METHOD(Class__GunfireRuntime__ChargeableItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AChargeableItem, 0x0000);
		}

		// class UChargeCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__ChargeCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChargeCondition, 0x0000);
		}

		// class UCheatInputSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__CheatInputSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheatInputSettings, 0x0000);
		}

		// class UChildAttachmentBroadcaster : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ChildAttachmentBroadcaster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChildAttachmentBroadcaster, 0x0000);
		}

		// class UCinematicCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__CinematicCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCinematicCondition, 0x0000);
		}

		// class UClampVelocityDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__ClampVelocityDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClampVelocityDecorator, 0x0000);
		}

		// class UClearLockTargetStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__ClearLockTargetStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClearLockTargetStateDecorator, 0x0000);
		}

		// class UCollisionModeStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__CollisionModeStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCollisionModeStateDecorator, 0x0000);
		}

		// class UCombatUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__CombatUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatUtil, 0x0000);
		}

		// class UCompoundState : public UActorState
		TEST_METHOD(Class__GunfireRuntime__CompoundState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompoundState, 0x0000);
		}

		// class UConditionList : public UStateMachineSubobject
		TEST_METHOD(Class__GunfireRuntime__ConditionList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConditionList, 0x0000);
		}

		// class URuleSet : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__RuleSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URuleSet, 0x0000);
		}

		// class UContextualDialogSet : public URuleSet
		TEST_METHOD(Class__GunfireRuntime__ContextualDialogSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UContextualDialogSet, 0x0000);
		}

		// class UContextualDialogComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ContextualDialogComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UContextualDialogComponent, 0x0000);
		}

		// class UCooldownCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__CooldownCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCooldownCondition, 0x0000);
		}

		// class UCooldownStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__CooldownStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCooldownStateDecorator, 0x0000);
		}

		// class UCounterCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__CounterCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCounterCondition, 0x0000);
		}

		// class UCraftingRecipe : public UCraftingRecipe_Base
		TEST_METHOD(Class__GunfireRuntime__CraftingRecipe)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCraftingRecipe, 0x0000);
		}

		// class UCraftingRecipeList : public UObject
		TEST_METHOD(Class__GunfireRuntime__CraftingRecipeList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCraftingRecipeList, 0x0000);
		}

		// class UCraftingRecipeManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__CraftingRecipeManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCraftingRecipeManager, 0x0000);
		}

		// class UCraftingComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__CraftingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCraftingComponent, 0x0000);
		}

		// class UCustomCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__CustomCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCustomCondition, 0x0000);
		}

		// class ACutsceneTransientActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__CutsceneTransientActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACutsceneTransientActor, 0x0000);
		}

		// class ADamageableActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__DamageableActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADamageableActor, 0x0000);
		}

		// class UDamageableInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__DamageableInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageableInterface, 0x0000);
		}

		// class UDamageInfoUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__DamageInfoUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageInfoUtil, 0x0000);
		}

		// class UDamageNotifyInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__DamageNotifyInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageNotifyInterface, 0x0000);
		}

		// class UDamageSourceInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__DamageSourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageSourceInterface, 0x0000);
		}

		// class UDamageStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__DamageStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageStateDecorator, 0x0000);
		}

		// class UDamageClass : public UObject
		TEST_METHOD(Class__GunfireRuntime__DamageClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass, 0x0000);
		}

		// class UDamageTypeGunfire : public UDamageType
		TEST_METHOD(Class__GunfireRuntime__DamageTypeGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageTypeGunfire, 0x0000);
		}

		// class UDeployableComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__DeployableComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeployableComponent, 0x0000);
		}

		// class ADialogStage : public AActor
		TEST_METHOD(Class__GunfireRuntime__DialogStage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialogStage, 0x0000);
		}

		// class UDialogCameraComponent : public UCineCameraComponent
		TEST_METHOD(Class__GunfireRuntime__DialogCameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogCameraComponent, 0x0000);
		}

		// class UDialogProviderInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__DialogProviderInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogProviderInterface, 0x0000);
		}

		// class UDialogInitiatorInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__DialogInitiatorInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogInitiatorInterface, 0x0000);
		}

		// class UEventTreeComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__EventTreeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeComponent, 0x0000);
		}

		// class UDialogComponent : public UEventTreeComponent
		TEST_METHOD(Class__GunfireRuntime__DialogComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogComponent, 0x0000);
		}

		// class UDialogInstance : public UObject
		TEST_METHOD(Class__GunfireRuntime__DialogInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogInstance, 0x0000);
		}

		// class UDialogManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__DialogManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogManager, 0x0000);
		}

		// class UDialogVocalRange : public UObject
		TEST_METHOD(Class__GunfireRuntime__DialogVocalRange)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogVocalRange, 0x0000);
		}

		// class UDisableInputDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__DisableInputDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDisableInputDecorator, 0x0000);
		}

		// class UDisableTargetLockStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__DisableTargetLockStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDisableTargetLockStateDecorator, 0x0000);
		}

		// class UDissolveComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__DissolveComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDissolveComponent, 0x0000);
		}

		// class UDiveCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__DiveCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDiveCondition, 0x0000);
		}

		// class UEffectsPreviewSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__EffectsPreviewSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEffectsPreviewSettings, 0x0000);
		}

		// class UEncounterInstance : public UObject
		TEST_METHOD(Class__GunfireRuntime__EncounterInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEncounterInstance, 0x0000);
		}

		// class USpawnTableEncounterParams : public USpawnTableEntry
		TEST_METHOD(Class__GunfireRuntime__SpawnTableEncounterParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableEncounterParams, 0x0000);
		}

		// class UEncounterManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__EncounterManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEncounterManager, 0x0000);
		}

		// class UEnvQueryContext_SpawnLocation : public UEnvQueryContext
		TEST_METHOD(Class__GunfireRuntime__EnvQueryContext_SpawnLocation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_SpawnLocation, 0x0000);
		}

		// class UEnvQueryContext_TargetBase : public UEnvQueryContext
		TEST_METHOD(Class__GunfireRuntime__EnvQueryContext_TargetBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_TargetBase, 0x0000);
		}

		// class UEnvQueryContext_Target : public UEnvQueryContext_TargetBase
		TEST_METHOD(Class__GunfireRuntime__EnvQueryContext_Target)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_Target, 0x0000);
		}

		// class UEnvQueryContext_TargetAimPos : public UEnvQueryContext_TargetBase
		TEST_METHOD(Class__GunfireRuntime__EnvQueryContext_TargetAimPos)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_TargetAimPos, 0x0000);
		}

		// class UEnvQueryContext_TargetLastKnownPosition : public UEnvQueryContext_TargetBase
		TEST_METHOD(Class__GunfireRuntime__EnvQueryContext_TargetLastKnownPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_TargetLastKnownPosition, 0x0000);
		}

		// class UEnvQueryGenerator_AITacticalPoint : public UEnvQueryGenerator
		TEST_METHOD(Class__GunfireRuntime__EnvQueryGenerator_AITacticalPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_AITacticalPoint, 0x0000);
		}

		// class UEnvQueryItemType_AITacticalPoint : public UEnvQueryItemType_VectorBase
		TEST_METHOD(Class__GunfireRuntime__EnvQueryItemType_AITacticalPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_AITacticalPoint, 0x0000);
		}

		// class UEnvQueryGenerator_SinglePoint : public UEnvQueryGenerator
		TEST_METHOD(Class__GunfireRuntime__EnvQueryGenerator_SinglePoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_SinglePoint, 0x0000);
		}

		// class UEnvQueryTest_AITacticalPoint : public UEnvQueryTest
		TEST_METHOD(Class__GunfireRuntime__EnvQueryTest_AITacticalPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_AITacticalPoint, 0x0000);
		}

		// class UEnvQueryTest_Cover : public UEnvQueryTest
		TEST_METHOD(Class__GunfireRuntime__EnvQueryTest_Cover)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Cover, 0x0000);
		}

		// class UEnvQueryTest_FieldOfView : public UEnvQueryTest
		TEST_METHOD(Class__GunfireRuntime__EnvQueryTest_FieldOfView)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_FieldOfView, 0x0000);
		}

		// class UEnvQueryTest_GroundMaterial : public UEnvQueryTest
		TEST_METHOD(Class__GunfireRuntime__EnvQueryTest_GroundMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_GroundMaterial, 0x0000);
		}

		// class UEnvQueryTest_LineOfSight : public UEnvQueryTest
		TEST_METHOD(Class__GunfireRuntime__EnvQueryTest_LineOfSight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_LineOfSight, 0x0000);
		}

		// class UEnvQueryTest_Outside : public UEnvQueryTest
		TEST_METHOD(Class__GunfireRuntime__EnvQueryTest_Outside)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Outside, 0x0000);
		}

		// class UEquipmentSkinInstanceData : public UItemInstanceData
		TEST_METHOD(Class__GunfireRuntime__EquipmentSkinInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEquipmentSkinInstanceData, 0x0000);
		}

		// class AEquipmentSkin : public AItem
		TEST_METHOD(Class__GunfireRuntime__EquipmentSkin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEquipmentSkin, 0x0000);
		}

		// class UEquipItemDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__EquipItemDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEquipItemDecorator, 0x0000);
		}

		// class UEquippedItemChangedCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__EquippedItemChangedCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEquippedItemChangedCondition, 0x0000);
		}

		// class UEventHandlerInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__EventHandlerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventHandlerInterface, 0x0000);
		}

		// class UEventStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__EventStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventStateDecorator, 0x0000);
		}

		// class UEventTree : public UObject
		TEST_METHOD(Class__GunfireRuntime__EventTree)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTree, 0x0000);
		}

		// class UEventTreeAsset : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__EventTreeAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeAsset, 0x0000);
		}

		// class UEventTreeNode_Base : public UObject
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Base, 0x0000);
		}

		// class UEventTreeNode : public UEventTreeNode_Base
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode, 0x0000);
		}

		// class UEventTreeNode_Achievement : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Achievement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Achievement, 0x0000);
		}

		// class UEventTreeContextObject : public UObject
		TEST_METHOD(Class__GunfireRuntime__EventTreeContextObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeContextObject, 0x0000);
		}

		// class UBranch : public UEventTreeNode_Base
		TEST_METHOD(Class__GunfireRuntime__Branch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBranch, 0x0000);
		}

		// class UEventTreeNode_Branch : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Branch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Branch, 0x0000);
		}

		// class UEventTreeNode_Delay : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Delay)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Delay, 0x0000);
		}

		// class UDialog_Speaker : public UObject
		TEST_METHOD(Class__GunfireRuntime__Dialog_Speaker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialog_Speaker, 0x0000);
		}

		// class UDialog_Emote : public UObject
		TEST_METHOD(Class__GunfireRuntime__Dialog_Emote)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialog_Emote, 0x0000);
		}

		// class UEventTreeNode_Dialog : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Dialog)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Dialog, 0x0000);
		}

		// class UEventTreeNode_DialogInterrupt : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_DialogInterrupt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_DialogInterrupt, 0x0000);
		}

		// class UBranch_DialogOption : public UBranch
		TEST_METHOD(Class__GunfireRuntime__Branch_DialogOption)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBranch_DialogOption, 0x0000);
		}

		// class UEventTreeNode_DialogOptions : public UEventTreeNode_Branch
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_DialogOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_DialogOptions, 0x0000);
		}

		// class UEventTreeNode_List : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_List)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_List, 0x0000);
		}

		// class UEventTreeNode_DialogOption : public UEventTreeNode_List
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_DialogOption)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_DialogOption, 0x0000);
		}

		// class UHasDialogOptionsCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HasDialogOptionsCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasDialogOptionsCondition, 0x0000);
		}

		// class UEventTreeNode_Event : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Event)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Event, 0x0000);
		}

		// class UEventTreeNode_ExecSubroutine : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_ExecSubroutine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_ExecSubroutine, 0x0000);
		}

		// class UEventTreeNode_Exit : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Exit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Exit, 0x0000);
		}

		// class UBranch_SequenceOption : public UBranch
		TEST_METHOD(Class__GunfireRuntime__Branch_SequenceOption)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBranch_SequenceOption, 0x0000);
		}

		// class UEventTreeNode_LevelSequence : public UEventTreeNode_Branch
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_LevelSequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_LevelSequence, 0x0000);
		}

		// class UEventTreeNode_Link : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Link)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Link, 0x0000);
		}

		// class UEventTreeNode_ActivateObjective : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_ActivateObjective)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_ActivateObjective, 0x0000);
		}

		// class UEventTreeNode_CompleteObjective : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_CompleteObjective)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_CompleteObjective, 0x0000);
		}

		// class UEventTreeNode_CompleteQuest : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_CompleteQuest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_CompleteQuest, 0x0000);
		}

		// class UEventTreeNode_ProximityTrigger : public UEventTreeNode_List
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_ProximityTrigger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_ProximityTrigger, 0x0000);
		}

		// class UEventTreeNode_ItemTrigger : public UEventTreeNode_List
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_ItemTrigger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_ItemTrigger, 0x0000);
		}

		// class UBranch_QuestSwitch : public UBranch
		TEST_METHOD(Class__GunfireRuntime__Branch_QuestSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBranch_QuestSwitch, 0x0000);
		}

		// class UEventTreeNode_QuestSwitch : public UEventTreeNode_Branch
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_QuestSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_QuestSwitch, 0x0000);
		}

		// class UBranch_Random : public UBranch
		TEST_METHOD(Class__GunfireRuntime__Branch_Random)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBranch_Random, 0x0000);
		}

		// class UEventTreeNode_RandomBranch : public UEventTreeNode_Branch
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_RandomBranch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_RandomBranch, 0x0000);
		}

		// class UEventTreeNode_SetCooldown : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_SetCooldown)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_SetCooldown, 0x0000);
		}

		// class UEventTreeNode_SetKey : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_SetKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_SetKey, 0x0000);
		}

		// class UEventTreeNode_RemoveKey : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_RemoveKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_RemoveKey, 0x0000);
		}

		// class UEventTreeNode_SetMultipleSpeakers : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_SetMultipleSpeakers)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_SetMultipleSpeakers, 0x0000);
		}

		// class UEventTreeNode_SetVariable : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_SetVariable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_SetVariable, 0x0000);
		}

		// class UEventTreeNode_Stage : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Stage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Stage, 0x0000);
		}

		// class UBranch_Subroutine : public UBranch
		TEST_METHOD(Class__GunfireRuntime__Branch_Subroutine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBranch_Subroutine, 0x0000);
		}

		// class UEventTreeNode_Subroutines : public UEventTreeNode_Branch
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Subroutines)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Subroutines, 0x0000);
		}

		// class UBranch_Switch : public UBranch
		TEST_METHOD(Class__GunfireRuntime__Branch_Switch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBranch_Switch, 0x0000);
		}

		// class UEventTreeNode_Switch : public UEventTreeNode_Branch
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Switch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Switch, 0x0000);
		}

		// class UEventTreeNode_TreeLink : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_TreeLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_TreeLink, 0x0000);
		}

		// class UEventTreeNode_Trigger : public UEventTreeNode_List
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_Trigger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Trigger, 0x0000);
		}

		// class UEventTreeNode_ExecTrigger : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_ExecTrigger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_ExecTrigger, 0x0000);
		}

		// class UExperienceReward : public UChallengeReward
		TEST_METHOD(Class__GunfireRuntime__ExperienceReward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UExperienceReward, 0x0000);
		}

		// class UFaceCameraComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__FaceCameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaceCameraComponent, 0x0000);
		}

		// class UFacingOverrideDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__FacingOverrideDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFacingOverrideDecorator, 0x0000);
		}

		// class UFaction : public UObject
		TEST_METHOD(Class__GunfireRuntime__Faction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaction, 0x0000);
		}

		// class UFactionSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__FactionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFactionSettings, 0x0000);
		}

		// class UFactionManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__FactionManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFactionManager, 0x0000);
		}

		// class UFactionComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__FactionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFactionComponent, 0x0000);
		}

		// class UFallCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__FallCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFallCondition, 0x0000);
		}

		// class UFallDamageComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__FallDamageComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFallDamageComponent, 0x0000);
		}

		// class UFallDamageDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__FallDamageDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFallDamageDecorator, 0x0000);
		}

		// class UFixedCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__FixedCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFixedCameraState, 0x0000);
		}

		// class UFlinchCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__FlinchCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFlinchCondition, 0x0000);
		}

		// class AFlyCameraController : public APlayerController
		TEST_METHOD(Class__GunfireRuntime__FlyCameraController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFlyCameraController, 0x0000);
		}

		// class UFocusableCanvasPanel : public UCanvasPanel
		TEST_METHOD(Class__GunfireRuntime__FocusableCanvasPanel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusableCanvasPanel, 0x0000);
		}

		// class UFocusButtonSlot : public UPanelSlot
		TEST_METHOD(Class__GunfireRuntime__FocusButtonSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusButtonSlot, 0x0000);
		}

		// class UFocusButtonWidget : public UContentWidget
		TEST_METHOD(Class__GunfireRuntime__FocusButtonWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusButtonWidget, 0x0000);
		}

		// class UFocusCameraSettings : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__FocusCameraSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusCameraSettings, 0x0000);
		}

		// class UFocusCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__FocusCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusCameraState, 0x0000);
		}

		// class UFocusGroup : public UCanvasPanel
		TEST_METHOD(Class__GunfireRuntime__FocusGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusGroup, 0x0000);
		}

		// class UFocusManInputHandler : public UObject
		TEST_METHOD(Class__GunfireRuntime__FocusManInputHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusManInputHandler, 0x0000);
		}

		// class UFocusManInputAxisHandler : public UObject
		TEST_METHOD(Class__GunfireRuntime__FocusManInputAxisHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusManInputAxisHandler, 0x0000);
		}

		// class UFocusManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__FocusManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusManager, 0x0000);
		}

		// class UFocusVisual : public UContentWidget
		TEST_METHOD(Class__GunfireRuntime__FocusVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusVisual, 0x0000);
		}

		// class UFocusWidget : public UUserWidget
		TEST_METHOD(Class__GunfireRuntime__FocusWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFocusWidget, 0x0000);
		}

		// class UFxActorDestroyerComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__FxActorDestroyerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFxActorDestroyerComponent, 0x0000);
		}

		// class AGameRules : public AActor
		TEST_METHOD(Class__GunfireRuntime__GameRules)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameRules, 0x0000);
		}

		// class UUserSetting : public UObject
		TEST_METHOD(Class__GunfireRuntime__UserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserSetting, 0x0000);
		}

		// class UGameUserSettingsList : public UObject
		TEST_METHOD(Class__GunfireRuntime__GameUserSettingsList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameUserSettingsList, 0x0000);
		}

		// class UGameUserSettingsGunfire : public UGameUserSettings
		TEST_METHOD(Class__GunfireRuntime__GameUserSettingsGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameUserSettingsGunfire, 0x0000);
		}

		// class UBinaryUserSetting : public UUserSetting
		TEST_METHOD(Class__GunfireRuntime__BinaryUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBinaryUserSetting, 0x0000);
		}

		// class UIntUserSetting : public UUserSetting
		TEST_METHOD(Class__GunfireRuntime__IntUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIntUserSetting, 0x0000);
		}

		// class UFloatUserSetting : public UUserSetting
		TEST_METHOD(Class__GunfireRuntime__FloatUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFloatUserSetting, 0x0000);
		}

		// class UEnumUserSetting : public UIntUserSetting
		TEST_METHOD(Class__GunfireRuntime__EnumUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnumUserSetting, 0x0000);
		}

		// class UAudioUserSetting : public UFloatUserSetting
		TEST_METHOD(Class__GunfireRuntime__AudioUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioUserSetting, 0x0000);
		}

		// class UResolutionUserSetting : public UUserSetting
		TEST_METHOD(Class__GunfireRuntime__ResolutionUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UResolutionUserSetting, 0x0000);
		}

		// class URebindableInputSetting : public UUserSetting
		TEST_METHOD(Class__GunfireRuntime__RebindableInputSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URebindableInputSetting, 0x0000);
		}

		// class UInputAxisPropertiesSetting : public UFloatUserSetting
		TEST_METHOD(Class__GunfireRuntime__InputAxisPropertiesSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputAxisPropertiesSetting, 0x0000);
		}

		// class UColorblindUserSetting : public UIntUserSetting
		TEST_METHOD(Class__GunfireRuntime__ColorblindUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UColorblindUserSetting, 0x0000);
		}

		// class UToggleUserSetting : public UUserSetting
		TEST_METHOD(Class__GunfireRuntime__ToggleUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UToggleUserSetting, 0x0000);
		}

		// class UVoiceInputDeviceSetting : public UEnumUserSetting
		TEST_METHOD(Class__GunfireRuntime__VoiceInputDeviceSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVoiceInputDeviceSetting, 0x0000);
		}

		// class UGameUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__GameUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameUtil, 0x0000);
		}

		// class UGameViewportClientGunfire : public UGameViewportClient
		TEST_METHOD(Class__GunfireRuntime__GameViewportClientGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameViewportClientGunfire, 0x0000);
		}

		// class UGlobalObjectPool : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__GlobalObjectPool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGlobalObjectPool, 0x0000);
		}

		// class UGroupCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__GroupCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGroupCondition, 0x0000);
		}

		// class UGunfireSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__GunfireSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGunfireSettings, 0x0000);
		}

		// class UHasInteractiveCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HasInteractiveCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasInteractiveCondition, 0x0000);
		}

		// class UHasItemByTypeCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HasItemByTypeCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasItemByTypeCondition, 0x0000);
		}

		// class UHasItemCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HasItemCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasItemCondition, 0x0000);
		}

		// class UHasPendingInterruptCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HasPendingInterruptCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasPendingInterruptCondition, 0x0000);
		}

		// class UHasTargetCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HasTargetCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasTargetCondition, 0x0000);
		}

		// class UHasTraitCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HasTraitCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasTraitCondition, 0x0000);
		}

		// class UHealthCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__HealthCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHealthCondition, 0x0000);
		}

		// class UHeuristicBoundsComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__HeuristicBoundsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHeuristicBoundsComponent, 0x0000);
		}

		// class UHierarchicalEditInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__HierarchicalEditInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHierarchicalEditInterface, 0x0000);
		}

		// class UHitLogComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__HitLogComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHitLogComponent, 0x0000);
		}

		// class UHitPauseInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__HitPauseInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHitPauseInterface, 0x0000);
		}

		// class UHitPauseUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__HitPauseUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHitPauseUtil, 0x0000);
		}

		// class UHitReactionState : public UAnimActorState
		TEST_METHOD(Class__GunfireRuntime__HitReactionState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHitReactionState, 0x0000);
		}

		// class UIdleTimerComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__IdleTimerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIdleTimerComponent, 0x0000);
		}

		// class UImageEntry : public UObject
		TEST_METHOD(Class__GunfireRuntime__ImageEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageEntry, 0x0000);
		}

		// class UImageID : public UObject
		TEST_METHOD(Class__GunfireRuntime__ImageID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageID, 0x0000);
		}

		// class UImageSet : public UObject
		TEST_METHOD(Class__GunfireRuntime__ImageSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSet, 0x0000);
		}

		// class UImageSetSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__ImageSetSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSetSettings, 0x0000);
		}

		// class AImpactEffect : public AActor
		TEST_METHOD(Class__GunfireRuntime__ImpactEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect, 0x0000);
		}

		// class ATracer : public AActor
		TEST_METHOD(Class__GunfireRuntime__Tracer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer, 0x0000);
		}

		// class UInInteractiveCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__InInteractiveCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInInteractiveCondition, 0x0000);
		}

		// class UInPhysicsBoundsCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__InPhysicsBoundsCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInPhysicsBoundsCondition, 0x0000);
		}

		// class UInputDeviceManager : public UObject
		TEST_METHOD(Class__GunfireRuntime__InputDeviceManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputDeviceManager, 0x0000);
		}

		// class UInputHandler : public UObject
		TEST_METHOD(Class__GunfireRuntime__InputHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputHandler, 0x0000);
		}

		// class UInputRebindings : public UObject
		TEST_METHOD(Class__GunfireRuntime__InputRebindings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputRebindings, 0x0000);
		}

		// class UInputStateComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__InputStateComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputStateComponent, 0x0000);
		}

		// class UInspectableComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__InspectableComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectableComponent, 0x0000);
		}

		// class UInspectableCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__InspectableCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectableCondition, 0x0000);
		}

		// class UStats : public UObject
		TEST_METHOD(Class__GunfireRuntime__Stats)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStats, 0x0000);
		}

		// class UInspectUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__InspectUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectUtil, 0x0000);
		}

		// class UInteractiveState : public UActorState
		TEST_METHOD(Class__GunfireRuntime__InteractiveState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractiveState, 0x0000);
		}

		// class UInteractiveResult : public UCondition
		TEST_METHOD(Class__GunfireRuntime__InteractiveResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractiveResult, 0x0000);
		}

		// class UInteractiveStateTransition : public UActorStateTransition
		TEST_METHOD(Class__GunfireRuntime__InteractiveStateTransition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractiveStateTransition, 0x0000);
		}

		// class UInterpolatedSoundMix : public USoundMix
		TEST_METHOD(Class__GunfireRuntime__InterpolatedSoundMix)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpolatedSoundMix, 0x0000);
		}

		// class UInViewCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__InViewCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInViewCondition, 0x0000);
		}

		// class UItemGenerator : public UObject
		TEST_METHOD(Class__GunfireRuntime__ItemGenerator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemGenerator, 0x0000);
		}

		// class UItemGeneratorItem : public UItemGenerator
		TEST_METHOD(Class__GunfireRuntime__ItemGeneratorItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemGeneratorItem, 0x0000);
		}

		// class UItemGeneratorLink : public UItemGenerator
		TEST_METHOD(Class__GunfireRuntime__ItemGeneratorLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemGeneratorLink, 0x0000);
		}

		// class UItemGeneratorTable : public UItemGenerator
		TEST_METHOD(Class__GunfireRuntime__ItemGeneratorTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemGeneratorTable, 0x0000);
		}

		// class UItemManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ItemManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemManager, 0x0000);
		}

		// class UItemSocketComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__ItemSocketComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemSocketComponent, 0x0000);
		}

		// class UItemUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__ItemUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemUtil, 0x0000);
		}

		// class UKeyCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__KeyCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKeyCondition, 0x0000);
		}

		// class ULadderParams : public UObject
		TEST_METHOD(Class__GunfireRuntime__LadderParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULadderParams, 0x0000);
		}

		// class UTraversalCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__TraversalCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTraversalCondition, 0x0000);
		}

		// class ULadderCondition : public UTraversalCondition
		TEST_METHOD(Class__GunfireRuntime__LadderCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULadderCondition, 0x0000);
		}

		// class UTraversalState : public UAnimActorState
		TEST_METHOD(Class__GunfireRuntime__TraversalState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTraversalState, 0x0000);
		}

		// class ULadderState : public UTraversalState
		TEST_METHOD(Class__GunfireRuntime__LadderState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULadderState, 0x0000);
		}

		// class ULastAttackCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__LastAttackCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULastAttackCondition, 0x0000);
		}

		// class ULastHitCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__LastHitCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULastHitCondition, 0x0000);
		}

		// class ULedgeGrabCondition : public UTraversalCondition
		TEST_METHOD(Class__GunfireRuntime__LedgeGrabCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULedgeGrabCondition, 0x0000);
		}

		// class ULedgeGrabState : public UTraversalState
		TEST_METHOD(Class__GunfireRuntime__LedgeGrabState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULedgeGrabState, 0x0000);
		}

		// class ULevelInstance : public UObject
		TEST_METHOD(Class__GunfireRuntime__LevelInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelInstance, 0x0000);
		}

		// class ULevelLoadingManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__LevelLoadingManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelLoadingManager, 0x0000);
		}

		// class APlayableLevel : public AActor
		TEST_METHOD(Class__GunfireRuntime__PlayableLevel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayableLevel, 0x0000);
		}

		// class APlayableLevelCollection : public AActor
		TEST_METHOD(Class__GunfireRuntime__PlayableLevelCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayableLevelCollection, 0x0000);
		}

		// class ULODVolumeFilter : public UObject
		TEST_METHOD(Class__GunfireRuntime__LODVolumeFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULODVolumeFilter, 0x0000);
		}

		// class ALODVolume : public AActor
		TEST_METHOD(Class__GunfireRuntime__LODVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALODVolume, 0x0000);
		}

		// class ULODVolumeManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__LODVolumeManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULODVolumeManager, 0x0000);
		}

		// class URandomTileActorInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__RandomTileActorInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URandomTileActorInterface, 0x0000);
		}

		// class AMapGenSettings : public AActor
		TEST_METHOD(Class__GunfireRuntime__MapGenSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMapGenSettings, 0x0000);
		}

		// class UMapGenGizmo : public UPrimitiveComponent
		TEST_METHOD(Class__GunfireRuntime__MapGenGizmo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapGenGizmo, 0x0000);
		}

		// class UMapTileTemplateEdge : public UMapGenGizmo
		TEST_METHOD(Class__GunfireRuntime__MapTileTemplateEdge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapTileTemplateEdge, 0x0000);
		}

		// class AMapTileTemplate : public AActor
		TEST_METHOD(Class__GunfireRuntime__MapTileTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMapTileTemplate, 0x0000);
		}

		// class AMapRegionTemplate : public AActor
		TEST_METHOD(Class__GunfireRuntime__MapRegionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMapRegionTemplate, 0x0000);
		}

		// class AMapTileEdge : public AActor
		TEST_METHOD(Class__GunfireRuntime__MapTileEdge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMapTileEdge, 0x0000);
		}

		// class AMapTileInfo : public AActor
		TEST_METHOD(Class__GunfireRuntime__MapTileInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMapTileInfo, 0x0000);
		}

		// class AMapTileNav : public ANavMeshBoundsVolume
		TEST_METHOD(Class__GunfireRuntime__MapTileNav)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMapTileNav, 0x0000);
		}

		// class UPlayableMap : public UObject
		TEST_METHOD(Class__GunfireRuntime__PlayableMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayableMap, 0x0000);
		}

		// class UMapLoader : public UObject
		TEST_METHOD(Class__GunfireRuntime__MapLoader)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapLoader, 0x0000);
		}

		// class UMathUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__MathUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMathUtil, 0x0000);
		}

		// class UMeshOutlinerComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__MeshOutlinerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshOutlinerComponent, 0x0000);
		}

		// class AMiniMapActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__MiniMapActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniMapActor, 0x0000);
		}

		// class UMiniMapComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__MiniMapComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMapComponent, 0x0000);
		}

		// class UMiniMapImage : public UImage
		TEST_METHOD(Class__GunfireRuntime__MiniMapImage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMapImage, 0x0000);
		}

		// class AMiniMapLookupActor : public AActor
		TEST_METHOD(Class__GunfireRuntime__MiniMapLookupActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniMapLookupActor, 0x0000);
		}

		// class UMiniMapManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__MiniMapManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMapManager, 0x0000);
		}

		// class UMiniMapPanel : public UCanvasPanel
		TEST_METHOD(Class__GunfireRuntime__MiniMapPanel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMapPanel, 0x0000);
		}

		// class UMiniMapPanelSlot : public UCanvasPanelSlot
		TEST_METHOD(Class__GunfireRuntime__MiniMapPanelSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMapPanelSlot, 0x0000);
		}

		// class UMoveDetachedCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__MoveDetachedCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMoveDetachedCameraState, 0x0000);
		}

		// class UMoveInputCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__MoveInputCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMoveInputCondition, 0x0000);
		}

		// class UMovementTypeDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__MovementTypeDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovementTypeDecorator, 0x0000);
		}

		// class UMovieSceneDialogSection : public UMovieSceneSection
		TEST_METHOD(Class__GunfireRuntime__MovieSceneDialogSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneDialogSection, 0x0000);
		}

		// class UMovieSceneDialogTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__GunfireRuntime__MovieSceneDialogTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneDialogTrack, 0x0000);
		}

		// class UMovieSceneEventTreeSection : public UMovieSceneSection
		TEST_METHOD(Class__GunfireRuntime__MovieSceneEventTreeSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventTreeSection, 0x0000);
		}

		// class UMovieSceneEventTreeTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__GunfireRuntime__MovieSceneEventTreeTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventTreeTrack, 0x0000);
		}

		// class UMovieSceneSoundSetSection : public UMovieSceneSection
		TEST_METHOD(Class__GunfireRuntime__MovieSceneSoundSetSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSoundSetSection, 0x0000);
		}

		// class UMovieSceneSoundSetTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__GunfireRuntime__MovieSceneSoundSetTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSoundSetTrack, 0x0000);
		}

		// class UMusicDirector : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__MusicDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMusicDirector, 0x0000);
		}

		// class UMusicSet : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__MusicSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMusicSet, 0x0000);
		}

		// class UMusicManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__MusicManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMusicManager, 0x0000);
		}

		// class UNamedActorComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__NamedActorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedActorComponent, 0x0000);
		}

		// class UNamedActorManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__NamedActorManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedActorManager, 0x0000);
		}

		// class UNavigationSystemGunfire : public UNavigationSystemV1
		TEST_METHOD(Class__GunfireRuntime__NavigationSystemGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemGunfire, 0x0000);
		}

		// class UNavLinkGunfireComponent : public UNavLinkCustomComponent
		TEST_METHOD(Class__GunfireRuntime__NavLinkGunfireComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkGunfireComponent, 0x0000);
		}

		// class UNavMeshTestCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__NavMeshTestCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavMeshTestCondition, 0x0000);
		}

		// class UNavModifierGunfireComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__NavModifierGunfireComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavModifierGunfireComponent, 0x0000);
		}

		// class UNPCHeadTrackingComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__NPCHeadTrackingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNPCHeadTrackingComponent, 0x0000);
		}

		// class UGroundCheckParams : public UObject
		TEST_METHOD(Class__GunfireRuntime__GroundCheckParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGroundCheckParams, 0x0000);
		}

		// class UGroundCheckParams_Default : public UGroundCheckParams
		TEST_METHOD(Class__GunfireRuntime__GroundCheckParams_Default)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGroundCheckParams_Default, 0x0000);
		}

		// class UOnGroundCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__OnGroundCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnGroundCondition, 0x0000);
		}

		// class UPathFollowingComponentGunfire : public UPathFollowingComponent
		TEST_METHOD(Class__GunfireRuntime__PathFollowingComponentGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathFollowingComponentGunfire, 0x0000);
		}

		// class UPathSharingManager : public UObject
		TEST_METHOD(Class__GunfireRuntime__PathSharingManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathSharingManager, 0x0000);
		}

		// class UPathSharingFilter : public UNavigationQueryFilter
		TEST_METHOD(Class__GunfireRuntime__PathSharingFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathSharingFilter, 0x0000);
		}

		// class UPathSharingFilter_Default : public UPathSharingFilter
		TEST_METHOD(Class__GunfireRuntime__PathSharingFilter_Default)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathSharingFilter_Default, 0x0000);
		}

		// class UPersistenceKeysComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__PersistenceKeysComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPersistenceKeysComponent, 0x0000);
		}

		// class UPhysCastCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__PhysCastCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysCastCondition, 0x0000);
		}

		// class UPhysicsSoundInstance : public UObject
		TEST_METHOD(Class__GunfireRuntime__PhysicsSoundInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsSoundInstance, 0x0000);
		}

		// class APhysicsActorGunfire : public AActor
		TEST_METHOD(Class__GunfireRuntime__PhysicsActorGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsActorGunfire, 0x0000);
		}

		// class APhysicsBounds : public AActor
		TEST_METHOD(Class__GunfireRuntime__PhysicsBounds)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsBounds, 0x0000);
		}

		// class UPhysicsBoundsType : public UObject
		TEST_METHOD(Class__GunfireRuntime__PhysicsBoundsType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsBoundsType, 0x0000);
		}

		// class UPhysicsBoundsInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__PhysicsBoundsInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsBoundsInterface, 0x0000);
		}

		// class UPhysicsBoundsUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__PhysicsBoundsUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsBoundsUtil, 0x0000);
		}

		// class UPhysicsUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__PhysicsUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsUtil, 0x0000);
		}

		// class UPlacementHelperComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__PlacementHelperComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlacementHelperComponent, 0x0000);
		}

		// class UPlatformCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__PlatformCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformCameraState, 0x0000);
		}

		// class APlayerCameraManagerGunfire : public APlayerCameraManager
		TEST_METHOD(Class__GunfireRuntime__PlayerCameraManagerGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerCameraManagerGunfire, 0x0000);
		}

		// class UPlayStateComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__PlayStateComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateComponent, 0x0000);
		}

		// class UPlayStateUtils : public UObject
		TEST_METHOD(Class__GunfireRuntime__PlayStateUtils)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateUtils, 0x0000);
		}

		// class UPlayState : public UObject
		TEST_METHOD(Class__GunfireRuntime__PlayState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayState, 0x0000);
		}

		// class UPlayStateSet : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__PlayStateSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateSet, 0x0000);
		}

		// class UPlayStateEffect_ScreenFade : public UPlayStateEffect
		TEST_METHOD(Class__GunfireRuntime__PlayStateEffect_ScreenFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_ScreenFade, 0x0000);
		}

		// class UPlayStateEffect_HideHUD : public UPlayStateEffect
		TEST_METHOD(Class__GunfireRuntime__PlayStateEffect_HideHUD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_HideHUD, 0x0000);
		}

		// class UPlayStateEffect_Input : public UPlayStateEffect
		TEST_METHOD(Class__GunfireRuntime__PlayStateEffect_Input)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_Input, 0x0000);
		}

		// class UPooledItem : public UObject
		TEST_METHOD(Class__GunfireRuntime__PooledItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPooledItem, 0x0000);
		}

		// class UPooledActor : public UPooledItem
		TEST_METHOD(Class__GunfireRuntime__PooledActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPooledActor, 0x0000);
		}

		// class UPooledTracer : public UPooledActor
		TEST_METHOD(Class__GunfireRuntime__PooledTracer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPooledTracer, 0x0000);
		}

		// class UPooledSceneComponent : public UPooledItem
		TEST_METHOD(Class__GunfireRuntime__PooledSceneComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPooledSceneComponent, 0x0000);
		}

		// class UPooledParticleSystemComponent : public UPooledSceneComponent
		TEST_METHOD(Class__GunfireRuntime__PooledParticleSystemComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPooledParticleSystemComponent, 0x0000);
		}

		// class UPossessableComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__PossessableComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPossessableComponent, 0x0000);
		}

		// class UPostProcessSkylightComponent : public UPostProcessComponent
		TEST_METHOD(Class__GunfireRuntime__PostProcessSkylightComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPostProcessSkylightComponent, 0x0000);
		}

		// class AProceduralDamageableActor : public ADamageableActor
		TEST_METHOD(Class__GunfireRuntime__ProceduralDamageableActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProceduralDamageableActor, 0x0000);
		}

		// class AProjectileBase : public AActor
		TEST_METHOD(Class__GunfireRuntime__ProjectileBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectileBase, 0x0000);
		}

		// class AProjectileSphere : public AProjectileBase
		TEST_METHOD(Class__GunfireRuntime__ProjectileSphere)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectileSphere, 0x0000);
		}

		// class AProjectileBox : public AProjectileBase
		TEST_METHOD(Class__GunfireRuntime__ProjectileBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectileBox, 0x0000);
		}

		// class UProjectileMovementComponentGunfire : public UProjectileMovementComponent
		TEST_METHOD(Class__GunfireRuntime__ProjectileMovementComponentGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProjectileMovementComponentGunfire, 0x0000);
		}

		// class AProjectileVisualization : public AActor
		TEST_METHOD(Class__GunfireRuntime__ProjectileVisualization)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectileVisualization, 0x0000);
		}

		// class UQuestEntityComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__QuestEntityComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestEntityComponent, 0x0000);
		}

		// class UQuestLocation : public UQuestComponent
		TEST_METHOD(Class__GunfireRuntime__QuestLocation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestLocation, 0x0000);
		}

		// class UQuestStateCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__QuestStateCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestStateCondition, 0x0000);
		}

		// class UQuestObjective : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__QuestObjective)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestObjective, 0x0000);
		}

		// class URangedWeaponInstanceData : public UEquipmentInstanceData
		TEST_METHOD(Class__GunfireRuntime__RangedWeaponInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URangedWeaponInstanceData, 0x0000);
		}

		// class UReloadCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__ReloadCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReloadCondition, 0x0000);
		}

		// class URangedWeaponProfile : public UObject
		TEST_METHOD(Class__GunfireRuntime__RangedWeaponProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URangedWeaponProfile, 0x0000);
		}

		// class URangeToTargetCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__RangeToTargetCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URangeToTargetCondition, 0x0000);
		}

		// class URayCastCondition : public UPhysCastCondition
		TEST_METHOD(Class__GunfireRuntime__RayCastCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URayCastCondition, 0x0000);
		}

		// class UReceptacleComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ReceptacleComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReceptacleComponent, 0x0000);
		}

		// class URegionNotifyInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__RegionNotifyInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URegionNotifyInterface, 0x0000);
		}

		// class UReplicatedMovementComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ReplicatedMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReplicatedMovementComponent, 0x0000);
		}

		// class UResourceDef : public UObject
		TEST_METHOD(Class__GunfireRuntime__ResourceDef)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UResourceDef, 0x0000);
		}

		// class UResourceSpawnManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__ResourceSpawnManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UResourceSpawnManager, 0x0000);
		}

		// class UReticulePiece : public UObject
		TEST_METHOD(Class__GunfireRuntime__ReticulePiece)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReticulePiece, 0x0000);
		}

		// class UReticule : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__Reticule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReticule, 0x0000);
		}

		// class UReticuleIcon : public UReticulePiece
		TEST_METHOD(Class__GunfireRuntime__ReticuleIcon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReticuleIcon, 0x0000);
		}

		// class UReticuleMaterial : public UReticulePiece
		TEST_METHOD(Class__GunfireRuntime__ReticuleMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReticuleMaterial, 0x0000);
		}

		// class URimComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__RimComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URimComponent, 0x0000);
		}

		// class URotatorComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__RotatorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URotatorComponent, 0x0000);
		}

		// class ARuntimeNavMeshBoundsVolume : public ANavMeshBoundsVolume
		TEST_METHOD(Class__GunfireRuntime__RuntimeNavMeshBoundsVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARuntimeNavMeshBoundsVolume, 0x0000);
		}

		// class USequenceInstance : public UObject
		TEST_METHOD(Class__GunfireRuntime__SequenceInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USequenceInstance, 0x0000);
		}

		// class USequenceRenderSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__SequenceRenderSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USequenceRenderSettings, 0x0000);
		}

		// class UShowEquipmentDecorator : public UShowEquipmentAbstractDecorator
		TEST_METHOD(Class__GunfireRuntime__ShowEquipmentDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShowEquipmentDecorator, 0x0000);
		}

		// class USilhouetteManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SilhouetteManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USilhouetteManager, 0x0000);
		}

		// class USingleObjectPool : public UObject
		TEST_METHOD(Class__GunfireRuntime__SingleObjectPool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USingleObjectPool, 0x0000);
		}

		// class USnapToGroundComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__SnapToGroundComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USnapToGroundComponent, 0x0000);
		}

		// class USoftCollisionCapsuleComponent : public UCapsuleComponent
		TEST_METHOD(Class__GunfireRuntime__SoftCollisionCapsuleComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoftCollisionCapsuleComponent, 0x0000);
		}

		// class USoftCollisionWeightStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__SoftCollisionWeightStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoftCollisionWeightStateDecorator, 0x0000);
		}

		// class USoundEntry : public UObject
		TEST_METHOD(Class__GunfireRuntime__SoundEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEntry, 0x0000);
		}

		// class USoundID : public UObject
		TEST_METHOD(Class__GunfireRuntime__SoundID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundID, 0x0000);
		}

		// class USoundSet : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__SoundSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundSet, 0x0000);
		}

		// class USoundSetComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SoundSetComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundSetComponent, 0x0000);
		}

		// class USoundTagStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__SoundTagStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundTagStateDecorator, 0x0000);
		}

		// class USpawnFilterList : public USpawnFilterEntry
		TEST_METHOD(Class__GunfireRuntime__SpawnFilterList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterList, 0x0000);
		}

		// class USpawnFilter : public USpawnFilterEntry
		TEST_METHOD(Class__GunfireRuntime__SpawnFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilter, 0x0000);
		}

		// class USpawnFilterExceptionList : public USpawnFilterList
		TEST_METHOD(Class__GunfireRuntime__SpawnFilterExceptionList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterExceptionList, 0x0000);
		}

		// class USpawnFilterReplacementList : public USpawnFilterList
		TEST_METHOD(Class__GunfireRuntime__SpawnFilterReplacementList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterReplacementList, 0x0000);
		}

		// class USpawnFilterItem : public USpawnFilterElement
		TEST_METHOD(Class__GunfireRuntime__SpawnFilterItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterItem, 0x0000);
		}

		// class ASpawnPoint : public ASpawnPointBase
		TEST_METHOD(Class__GunfireRuntime__SpawnPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint, 0x0000);
		}

		// class USpawnPointManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SpawnPointManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnPointManager, 0x0000);
		}

		// class ASpawnPointData : public AActor
		TEST_METHOD(Class__GunfireRuntime__SpawnPointData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPointData, 0x0000);
		}

		// class USpawnTableCharacter : public USpawnTableElement
		TEST_METHOD(Class__GunfireRuntime__SpawnTableCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableCharacter, 0x0000);
		}

		// class USpawnTableItem : public USpawnTableElement
		TEST_METHOD(Class__GunfireRuntime__SpawnTableItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableItem, 0x0000);
		}

		// class USpawnTableActor : public USpawnTableElement
		TEST_METHOD(Class__GunfireRuntime__SpawnTableActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableActor, 0x0000);
		}

		// class USpawnTableLink : public USpawnTableEntry
		TEST_METHOD(Class__GunfireRuntime__SpawnTableLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableLink, 0x0000);
		}

		// class USpawnTable : public USpawnTableEntry
		TEST_METHOD(Class__GunfireRuntime__SpawnTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTable, 0x0000);
		}

		// class USpawnUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__SpawnUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnUtil, 0x0000);
		}

		// class USphereCastCondition : public UPhysCastCondition
		TEST_METHOD(Class__GunfireRuntime__SphereCastCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USphereCastCondition, 0x0000);
		}

		// class ASplineBase : public AActor
		TEST_METHOD(Class__GunfireRuntime__SplineBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASplineBase, 0x0000);
		}

		// class USplineCameraComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__SplineCameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USplineCameraComponent, 0x0000);
		}

		// class USplineCameraSplineComponent : public USplineComponent
		TEST_METHOD(Class__GunfireRuntime__SplineCameraSplineComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USplineCameraSplineComponent, 0x0000);
		}

		// class ASplineCameraVolume : public AActor
		TEST_METHOD(Class__GunfireRuntime__SplineCameraVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASplineCameraVolume, 0x0000);
		}

		// class USplineFollowingComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SplineFollowingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USplineFollowingComponent, 0x0000);
		}

		// class UStaminaCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__StaminaCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaminaCondition, 0x0000);
		}

		// class UStaminaStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__StaminaStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaminaStateDecorator, 0x0000);
		}

		// class UStatCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__StatCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStatCondition, 0x0000);
		}

		// class UStateCompleteCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__StateCompleteCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateCompleteCondition, 0x0000);
		}

		// class UStateElapsedCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__StateElapsedCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateElapsedCondition, 0x0000);
		}

		// class UStateEventCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__StateEventCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateEventCondition, 0x0000);
		}

		// class UStateMachine : public UStateMachineSubobject
		TEST_METHOD(Class__GunfireRuntime__StateMachine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateMachine, 0x0000);
		}

		// class UStateMachineComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__StateMachineComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateMachineComponent, 0x0000);
		}

		// class UStateWindowCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__StateWindowCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStateWindowCondition, 0x0000);
		}

		// class AStaticProceduralMesh : public AActor
		TEST_METHOD(Class__GunfireRuntime__StaticProceduralMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AStaticProceduralMesh, 0x0000);
		}

		// class UStationarySpectatorCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__StationarySpectatorCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStationarySpectatorCameraState, 0x0000);
		}

		// class UComputedStats : public UObject
		TEST_METHOD(Class__GunfireRuntime__ComputedStats)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComputedStats, 0x0000);
		}

		// class UStatsComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__StatsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStatsComponent, 0x0000);
		}

		// class UStatStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__StatStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStatStateDecorator, 0x0000);
		}

		// class USubtitleInstance : public UObject
		TEST_METHOD(Class__GunfireRuntime__SubtitleInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubtitleInstance, 0x0000);
		}

		// class USubtitlesComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SubtitlesComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubtitlesComponent, 0x0000);
		}

		// class USurfaceOrientComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__SurfaceOrientComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USurfaceOrientComponent, 0x0000);
		}

		// class USwimmingCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__SwimmingCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USwimmingCondition, 0x0000);
		}

		// class USwimmingStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__SwimmingStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USwimmingStateDecorator, 0x0000);
		}

		// class UTabButton : public UContentWidget
		TEST_METHOD(Class__GunfireRuntime__TabButton)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTabButton, 0x0000);
		}

		// class UTabButtonSlot : public UPanelSlot
		TEST_METHOD(Class__GunfireRuntime__TabButtonSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTabButtonSlot, 0x0000);
		}

		// class UTagCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__TagCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTagCondition, 0x0000);
		}

		// class UTargetableComponent : public UHeuristicBoundsComponent
		TEST_METHOD(Class__GunfireRuntime__TargetableComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTargetableComponent, 0x0000);
		}

		// class UTargetAlignComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__TargetAlignComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTargetAlignComponent, 0x0000);
		}

		// class UTargetingComponent : public USceneComponent
		TEST_METHOD(Class__GunfireRuntime__TargetingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTargetingComponent, 0x0000);
		}

		// class UTargetLockComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__TargetLockComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTargetLockComponent, 0x0000);
		}

		// class UTargetManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__TargetManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTargetManager, 0x0000);
		}

		// class UTextDebugComponent : public UTextRenderComponent
		TEST_METHOD(Class__GunfireRuntime__TextDebugComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextDebugComponent, 0x0000);
		}

		// class UThirdPersonCameraState : public UCameraState
		TEST_METHOD(Class__GunfireRuntime__ThirdPersonCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UThirdPersonCameraState, 0x0000);
		}

		// class UTileUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__TileUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTileUtil, 0x0000);
		}

		// class ATileLOD : public ALODActor
		TEST_METHOD(Class__GunfireRuntime__TileLOD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATileLOD, 0x0000);
		}

		// class UTileInfo : public UObject
		TEST_METHOD(Class__GunfireRuntime__TileInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTileInfo, 0x0000);
		}

		// class UTileSet : public UObject
		TEST_METHOD(Class__GunfireRuntime__TileSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTileSet, 0x0000);
		}

		// class UTimeDilationDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__TimeDilationDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeDilationDecorator, 0x0000);
		}

		// class UClearTimeDilationDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__ClearTimeDilationDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClearTimeDilationDecorator, 0x0000);
		}

		// class UTimeDilationManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__TimeDilationManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeDilationManager, 0x0000);
		}

		// class UTraitType : public UObject
		TEST_METHOD(Class__GunfireRuntime__TraitType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTraitType, 0x0000);
		}

		// class UTraversalSettings : public UObject
		TEST_METHOD(Class__GunfireRuntime__TraversalSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTraversalSettings, 0x0000);
		}

		// class UTraversalSurfaceCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__TraversalSurfaceCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTraversalSurfaceCondition, 0x0000);
		}

		// class UTutorialPrompts : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__TutorialPrompts)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorialPrompts, 0x0000);
		}

		// class UTutorialComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__TutorialComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorialComponent, 0x0000);
		}

		// class UEventTreeNode_TutorialPrompt : public UEventTreeNode
		TEST_METHOD(Class__GunfireRuntime__EventTreeNode_TutorialPrompt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_TutorialPrompt, 0x0000);
		}

		// class UTutorialPromptWidget : public UUserWidget
		TEST_METHOD(Class__GunfireRuntime__TutorialPromptWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorialPromptWidget, 0x0000);
		}

		// class UTweenComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__TweenComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTweenComponent, 0x0000);
		}

		// class UUIHudComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__UIHudComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUIHudComponent, 0x0000);
		}

		// class UUIHudDamageNumberComponent : public UUIHudComponent
		TEST_METHOD(Class__GunfireRuntime__UIHudDamageNumberComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUIHudDamageNumberComponent, 0x0000);
		}

		// class UUIHudHitIndicatorComponent : public UUIHudComponent
		TEST_METHOD(Class__GunfireRuntime__UIHudHitIndicatorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUIHudHitIndicatorComponent, 0x0000);
		}

		// class UInteractiveInstigatorInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__InteractiveInstigatorInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractiveInstigatorInterface, 0x0000);
		}

		// class UUIHudInteractComponent : public UUIHudComponent
		TEST_METHOD(Class__GunfireRuntime__UIHudInteractComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUIHudInteractComponent, 0x0000);
		}

		// class UUIHudReticuleComponent : public UUIHudComponent
		TEST_METHOD(Class__GunfireRuntime__UIHudReticuleComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUIHudReticuleComponent, 0x0000);
		}

		// class UUIHudTutorialComponent : public UUIHudComponent
		TEST_METHOD(Class__GunfireRuntime__UIHudTutorialComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUIHudTutorialComponent, 0x0000);
		}

		// class UUITweenManager : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__UITweenManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUITweenManager, 0x0000);
		}

		// class UUIUtil : public UObject
		TEST_METHOD(Class__GunfireRuntime__UIUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUIUtil, 0x0000);
		}

		// class UUnCrouchCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__UnCrouchCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUnCrouchCondition, 0x0000);
		}

		// class UUseItemInterface : public UInterface
		TEST_METHOD(Class__GunfireRuntime__UseItemInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUseItemInterface, 0x0000);
		}

		// class UUseItemStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__UseItemStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUseItemStateDecorator, 0x0000);
		}

		// class UVariables : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__Variables)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariables, 0x0000);
		}

		// class UVariableComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__VariableComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariableComponent, 0x0000);
		}

		// class URootVariableContext : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__RootVariableContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URootVariableContext, 0x0000);
		}

		// class UVariableConditionBase : public UCondition
		TEST_METHOD(Class__GunfireRuntime__VariableConditionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariableConditionBase, 0x0000);
		}

		// class UVariableCondition : public UVariableConditionBase
		TEST_METHOD(Class__GunfireRuntime__VariableCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariableCondition, 0x0000);
		}

		// class UBlackboardVariableCondition : public UVariableConditionBase
		TEST_METHOD(Class__GunfireRuntime__BlackboardVariableCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardVariableCondition, 0x0000);
		}

		// class UVaultCondition : public UTraversalCondition
		TEST_METHOD(Class__GunfireRuntime__VaultCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVaultCondition, 0x0000);
		}

		// class UVaultState : public UTraversalState
		TEST_METHOD(Class__GunfireRuntime__VaultState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVaultState, 0x0000);
		}

		// class UVelocityCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__VelocityCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVelocityCondition, 0x0000);
		}

		// class UActorVisual : public UObject
		TEST_METHOD(Class__GunfireRuntime__ActorVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorVisual, 0x0000);
		}

		// class UVisualID : public UObject
		TEST_METHOD(Class__GunfireRuntime__VisualID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualID, 0x0000);
		}

		// class UVisualSetNode : public UObject
		TEST_METHOD(Class__GunfireRuntime__VisualSetNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualSetNode, 0x0000);
		}

		// class UVisualFXNode : public UObject
		TEST_METHOD(Class__GunfireRuntime__VisualFXNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualFXNode, 0x0000);
		}

		// class UVisualFXEntry : public UObject
		TEST_METHOD(Class__GunfireRuntime__VisualFXEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualFXEntry, 0x0000);
		}

		// class UVisualFX : public UVisualSetNode
		TEST_METHOD(Class__GunfireRuntime__VisualFX)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualFX, 0x0000);
		}

		// class UVisualSetSlot : public UVisualSetNode
		TEST_METHOD(Class__GunfireRuntime__VisualSetSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualSetSlot, 0x0000);
		}

		// class UVisualSet : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__VisualSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualSet, 0x0000);
		}

		// class UVisualComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__VisualComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualComponent, 0x0000);
		}

		// class UGlobalMaterialVisual : public UActorVisual
		TEST_METHOD(Class__GunfireRuntime__GlobalMaterialVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGlobalMaterialVisual, 0x0000);
		}

		// class UMaterialOverrideVisual : public UActorVisual
		TEST_METHOD(Class__GunfireRuntime__MaterialOverrideVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialOverrideVisual, 0x0000);
		}

		// class USceneVisual : public UActorVisual
		TEST_METHOD(Class__GunfireRuntime__SceneVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneVisual, 0x0000);
		}

		// class USkinnedMeshVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__SkinnedMeshVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkinnedMeshVisual, 0x0000);
		}

		// class UStaticMeshVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__StaticMeshVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMeshVisual, 0x0000);
		}

		// class URandomSkinnedMeshVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__RandomSkinnedMeshVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URandomSkinnedMeshVisual, 0x0000);
		}

		// class URandomStaticMeshVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__RandomStaticMeshVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URandomStaticMeshVisual, 0x0000);
		}

		// class UAudioVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__AudioVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioVisual, 0x0000);
		}

		// class UParticleVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__ParticleVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleVisual, 0x0000);
		}

		// class UAttachActorVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__AttachActorVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAttachActorVisual, 0x0000);
		}

		// class USetVisibilityVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__SetVisibilityVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USetVisibilityVisual, 0x0000);
		}

		// class UTagVisual : public USceneVisual
		TEST_METHOD(Class__GunfireRuntime__TagVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTagVisual, 0x0000);
		}

		// class UParticleFXNode : public UVisualFXNode
		TEST_METHOD(Class__GunfireRuntime__ParticleFXNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleFXNode, 0x0000);
		}

		// class UAudioFXNode : public UVisualFXNode
		TEST_METHOD(Class__GunfireRuntime__AudioFXNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioFXNode, 0x0000);
		}

		// class UVisualizableActorComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__VisualizableActorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualizableActorComponent, 0x0000);
		}

		// class UVitalityComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__VitalityComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVitalityComponent, 0x0000);
		}

		// class UVitalityCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__VitalityCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVitalityCondition, 0x0000);
		}

		// class UVitalityStateDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__VitalityStateDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVitalityStateDecorator, 0x0000);
		}

		// class UWallCheckCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__WallCheckCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWallCheckCondition, 0x0000);
		}

		// class UWaterCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__WaterCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWaterCondition, 0x0000);
		}

		// class UWaterEntryDecorator : public UActorStateDecorator
		TEST_METHOD(Class__GunfireRuntime__WaterEntryDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWaterEntryDecorator, 0x0000);
		}

		// class UWaterFXComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__WaterFXComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWaterFXComponent, 0x0000);
		}

		// class UWaterOverlapComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__WaterOverlapComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWaterOverlapComponent, 0x0000);
		}

		// class UWaterSurfaceCondition : public UTraversalCondition
		TEST_METHOD(Class__GunfireRuntime__WaterSurfaceCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWaterSurfaceCondition, 0x0000);
		}

		// class UWaterSurfaceState : public UTraversalState
		TEST_METHOD(Class__GunfireRuntime__WaterSurfaceState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWaterSurfaceState, 0x0000);
		}

		// class UWeaponAffinities : public UObject
		TEST_METHOD(Class__GunfireRuntime__WeaponAffinities)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponAffinities, 0x0000);
		}

		// class UWeaponComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__WeaponComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponComponent, 0x0000);
		}

		// class UWeaponAffinityComponent : public UWeaponComponent
		TEST_METHOD(Class__GunfireRuntime__WeaponAffinityComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponAffinityComponent, 0x0000);
		}

		// class UImpactDirection : public UObject
		TEST_METHOD(Class__GunfireRuntime__ImpactDirection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImpactDirection, 0x0000);
		}

		// class UWeaponPhantomComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__WeaponPhantomComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponPhantomComponent, 0x0000);
		}

		// class UWidgetComponentGunfire : public UWidgetComponent
		TEST_METHOD(Class__GunfireRuntime__WidgetComponentGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetComponentGunfire, 0x0000);
		}

		// class UWorldSoundComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__WorldSoundComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldSoundComponent, 0x0000);
		}

		// class UWorldSoundEntry : public UObject
		TEST_METHOD(Class__GunfireRuntime__WorldSoundEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldSoundEntry, 0x0000);
		}

		// class UWorldSoundID : public UObject
		TEST_METHOD(Class__GunfireRuntime__WorldSoundID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldSoundID, 0x0000);
		}

		// class UWorldSoundSet : public UDataAsset
		TEST_METHOD(Class__GunfireRuntime__WorldSoundSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldSoundSet, 0x0000);
		}

		// class UWoundedComponent : public UActorComponent
		TEST_METHOD(Class__GunfireRuntime__WoundedComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWoundedComponent, 0x0000);
		}

		// class UWoundedCondition : public UCondition
		TEST_METHOD(Class__GunfireRuntime__WoundedCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWoundedCondition, 0x0000);
		}

		// class AAIController : public AController
		TEST_METHOD(Class__AIModule__AIController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIController, 0x0000);
		}

		// class UBTNode : public UObject
		TEST_METHOD(Class__AIModule__BTNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTNode, 0x0000);
		}

		// class UBTAuxiliaryNode : public UBTNode
		TEST_METHOD(Class__AIModule__BTAuxiliaryNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTAuxiliaryNode, 0x0000);
		}

		// class UBTDecorator : public UBTAuxiliaryNode
		TEST_METHOD(Class__AIModule__BTDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator, 0x0000);
		}

		// class UBTTaskNode : public UBTNode
		TEST_METHOD(Class__AIModule__BTTaskNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTaskNode, 0x0000);
		}

		// class UEnvQueryContext : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext, 0x0000);
		}

		// class UEnvQueryNode : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryNode, 0x0000);
		}

		// class UEnvQueryGenerator : public UEnvQueryNode
		TEST_METHOD(Class__AIModule__EnvQueryGenerator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator, 0x0000);
		}

		// class UEnvQueryItemType : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryItemType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType, 0x0000);
		}

		// class UEnvQueryItemType_VectorBase : public UEnvQueryItemType
		TEST_METHOD(Class__AIModule__EnvQueryItemType_VectorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_VectorBase, 0x0000);
		}

		// class UEnvQueryTest : public UEnvQueryNode
		TEST_METHOD(Class__AIModule__EnvQueryTest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest, 0x0000);
		}

		// class UPathFollowingComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__PathFollowingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathFollowingComponent, 0x0000);
		}

		// class UAIAsyncTaskBlueprintProxy : public UObject
		TEST_METHOD(Class__AIModule__AIAsyncTaskBlueprintProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIAsyncTaskBlueprintProxy, 0x0000);
		}

		// class UAIBlueprintHelperLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AIModule__AIBlueprintHelperLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIBlueprintHelperLibrary, 0x0000);
		}

		// class UAIDataProvider : public UObject
		TEST_METHOD(Class__AIModule__AIDataProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataProvider, 0x0000);
		}

		// class UAIDataProvider_QueryParams : public UAIDataProvider
		TEST_METHOD(Class__AIModule__AIDataProvider_QueryParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataProvider_QueryParams, 0x0000);
		}

		// class UAIDataProvider_Random : public UAIDataProvider_QueryParams
		TEST_METHOD(Class__AIModule__AIDataProvider_Random)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataProvider_Random, 0x0000);
		}

		// class UAIHotSpotManager : public UObject
		TEST_METHOD(Class__AIModule__AIHotSpotManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIHotSpotManager, 0x0000);
		}

		// class UAIPerceptionComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__AIPerceptionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionComponent, 0x0000);
		}

		// class UAIPerceptionListenerInterface : public UInterface
		TEST_METHOD(Class__AIModule__AIPerceptionListenerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionListenerInterface, 0x0000);
		}

		// class UAIPerceptionStimuliSourceComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__AIPerceptionStimuliSourceComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionStimuliSourceComponent, 0x0000);
		}

		// class UAISubsystem : public UObject
		TEST_METHOD(Class__AIModule__AISubsystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISubsystem, 0x0000);
		}

		// class UAIPerceptionSystem : public UAISubsystem
		TEST_METHOD(Class__AIModule__AIPerceptionSystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionSystem, 0x0000);
		}

		// class UAIResourceInterface : public UInterface
		TEST_METHOD(Class__AIModule__AIResourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIResourceInterface, 0x0000);
		}

		// class UAIResource_Movement : public UGameplayTaskResource
		TEST_METHOD(Class__AIModule__AIResource_Movement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIResource_Movement, 0x0000);
		}

		// class UAIResource_Logic : public UGameplayTaskResource
		TEST_METHOD(Class__AIModule__AIResource_Logic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIResource_Logic, 0x0000);
		}

		// class UAISense : public UObject
		TEST_METHOD(Class__AIModule__AISense)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense, 0x0000);
		}

		// class UAISense_Blueprint : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Blueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Blueprint, 0x0000);
		}

		// class UAISense_Damage : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Damage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Damage, 0x0000);
		}

		// class UAISense_Hearing : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Hearing)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Hearing, 0x0000);
		}

		// class UAISense_Prediction : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Prediction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Prediction, 0x0000);
		}

		// class UAISense_Sight : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Sight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Sight, 0x0000);
		}

		// class UAISense_Team : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Team)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Team, 0x0000);
		}

		// class UAISense_Touch : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Touch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Touch, 0x0000);
		}

		// class UAISenseBlueprintListener : public UUserDefinedStruct
		TEST_METHOD(Class__AIModule__AISenseBlueprintListener)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseBlueprintListener, 0x0000);
		}

		// class UAISenseConfig : public UObject
		TEST_METHOD(Class__AIModule__AISenseConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig, 0x0000);
		}

		// class UAISenseConfig_Blueprint : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Blueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Blueprint, 0x0000);
		}

		// class UAISenseConfig_Damage : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Damage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Damage, 0x0000);
		}

		// class UAISenseConfig_Hearing : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Hearing)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Hearing, 0x0000);
		}

		// class UAISenseConfig_Prediction : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Prediction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Prediction, 0x0000);
		}

		// class UAISenseConfig_Sight : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Sight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Sight, 0x0000);
		}

		// class UAISenseConfig_Team : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Team)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Team, 0x0000);
		}

		// class UAISenseConfig_Touch : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Touch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Touch, 0x0000);
		}

		// class UAISenseEvent : public UObject
		TEST_METHOD(Class__AIModule__AISenseEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseEvent, 0x0000);
		}

		// class UAISenseEvent_Damage : public UAISenseEvent
		TEST_METHOD(Class__AIModule__AISenseEvent_Damage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseEvent_Damage, 0x0000);
		}

		// class UAISenseEvent_Hearing : public UAISenseEvent
		TEST_METHOD(Class__AIModule__AISenseEvent_Hearing)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseEvent_Hearing, 0x0000);
		}

		// class UAISightTargetInterface : public UInterface
		TEST_METHOD(Class__AIModule__AISightTargetInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISightTargetInterface, 0x0000);
		}

		// class UAISystem : public UAISystemBase
		TEST_METHOD(Class__AIModule__AISystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISystem, 0x0000);
		}

		// class UAITask : public UGameplayTask
		TEST_METHOD(Class__AIModule__AITask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask, 0x0000);
		}

		// class UAITask_LockLogic : public UAITask
		TEST_METHOD(Class__AIModule__AITask_LockLogic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask_LockLogic, 0x0000);
		}

		// class UAITask_MoveTo : public UAITask
		TEST_METHOD(Class__AIModule__AITask_MoveTo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask_MoveTo, 0x0000);
		}

		// class UAITask_RunEQS : public UAITask
		TEST_METHOD(Class__AIModule__AITask_RunEQS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask_RunEQS, 0x0000);
		}

		// class UBehaviorTree : public UObject
		TEST_METHOD(Class__AIModule__BehaviorTree)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTree, 0x0000);
		}

		// class UBrainComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__BrainComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrainComponent, 0x0000);
		}

		// class UBehaviorTreeComponent : public UBrainComponent
		TEST_METHOD(Class__AIModule__BehaviorTreeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTreeComponent, 0x0000);
		}

		// class UBehaviorTreeManager : public UObject
		TEST_METHOD(Class__AIModule__BehaviorTreeManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTreeManager, 0x0000);
		}

		// class UBehaviorTreeTypes : public UObject
		TEST_METHOD(Class__AIModule__BehaviorTreeTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTreeTypes, 0x0000);
		}

		// class UBlackboardComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__BlackboardComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardComponent, 0x0000);
		}

		// class UBlackboardData : public UDataAsset
		TEST_METHOD(Class__AIModule__BlackboardData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardData, 0x0000);
		}

		// class UBlackboardKeyType : public UObject
		TEST_METHOD(Class__AIModule__BlackboardKeyType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType, 0x0000);
		}

		// class UBlackboardKeyType_Bool : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Bool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Bool, 0x0000);
		}

		// class UBlackboardKeyType_Class : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Class)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Class, 0x0000);
		}

		// class UBlackboardKeyType_Enum : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Enum)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Enum, 0x0000);
		}

		// class UBlackboardKeyType_Float : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Float)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Float, 0x0000);
		}

		// class UBlackboardKeyType_Int : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Int)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Int, 0x0000);
		}

		// class UBlackboardKeyType_Name : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Name)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Name, 0x0000);
		}

		// class UBlackboardKeyType_NativeEnum : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_NativeEnum)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_NativeEnum, 0x0000);
		}

		// class UBlackboardKeyType_Object : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Object)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Object, 0x0000);
		}

		// class UBlackboardKeyType_Rotator : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Rotator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Rotator, 0x0000);
		}

		// class UBlackboardKeyType_String : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_String)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_String, 0x0000);
		}

		// class UBlackboardKeyType_Vector : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Vector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Vector, 0x0000);
		}

		// class UBTCompositeNode : public UBTNode
		TEST_METHOD(Class__AIModule__BTCompositeNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTCompositeNode, 0x0000);
		}

		// class UBTComposite_Selector : public UBTCompositeNode
		TEST_METHOD(Class__AIModule__BTComposite_Selector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTComposite_Selector, 0x0000);
		}

		// class UBTComposite_Sequence : public UBTCompositeNode
		TEST_METHOD(Class__AIModule__BTComposite_Sequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTComposite_Sequence, 0x0000);
		}

		// class UBTComposite_SimpleParallel : public UBTCompositeNode
		TEST_METHOD(Class__AIModule__BTComposite_SimpleParallel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTComposite_SimpleParallel, 0x0000);
		}

		// class UBTDecorator_BlackboardBase : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_BlackboardBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_BlackboardBase, 0x0000);
		}

		// class UBTDecorator_Blackboard : public UBTDecorator_BlackboardBase
		TEST_METHOD(Class__AIModule__BTDecorator_Blackboard)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_Blackboard, 0x0000);
		}

		// class UBTDecorator_BlueprintBase : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_BlueprintBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_BlueprintBase, 0x0000);
		}

		// class UBTDecorator_CheckGameplayTagsOnActor : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_CheckGameplayTagsOnActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_CheckGameplayTagsOnActor, 0x0000);
		}

		// class UBTDecorator_CompareBBEntries : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_CompareBBEntries)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_CompareBBEntries, 0x0000);
		}

		// class UBTDecorator_ConditionalLoop : public UBTDecorator_Blackboard
		TEST_METHOD(Class__AIModule__BTDecorator_ConditionalLoop)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ConditionalLoop, 0x0000);
		}

		// class UBTDecorator_ConeCheck : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_ConeCheck)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ConeCheck, 0x0000);
		}

		// class UBTDecorator_Cooldown : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_Cooldown)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_Cooldown, 0x0000);
		}

		// class UBTDecorator_DoesPathExist : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_DoesPathExist)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_DoesPathExist, 0x0000);
		}

		// class UBTDecorator_ForceSuccess : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_ForceSuccess)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ForceSuccess, 0x0000);
		}

		// class UBTDecorator_IsAtLocation : public UBTDecorator_BlackboardBase
		TEST_METHOD(Class__AIModule__BTDecorator_IsAtLocation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_IsAtLocation, 0x0000);
		}

		// class UBTDecorator_IsBBEntryOfClass : public UBTDecorator_BlackboardBase
		TEST_METHOD(Class__AIModule__BTDecorator_IsBBEntryOfClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_IsBBEntryOfClass, 0x0000);
		}

		// class UBTDecorator_KeepInCone : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_KeepInCone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_KeepInCone, 0x0000);
		}

		// class UBTDecorator_Loop : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_Loop)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_Loop, 0x0000);
		}

		// class UBTDecorator_ReachedMoveGoal : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_ReachedMoveGoal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ReachedMoveGoal, 0x0000);
		}

		// class UBTDecorator_SetTagCooldown : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_SetTagCooldown)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_SetTagCooldown, 0x0000);
		}

		// class UBTDecorator_TagCooldown : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_TagCooldown)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_TagCooldown, 0x0000);
		}

		// class UBTDecorator_TimeLimit : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_TimeLimit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_TimeLimit, 0x0000);
		}

		// class UBTFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AIModule__BTFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTFunctionLibrary, 0x0000);
		}

		// class UBTService : public UBTAuxiliaryNode
		TEST_METHOD(Class__AIModule__BTService)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService, 0x0000);
		}

		// class UBTService_BlackboardBase : public UBTService
		TEST_METHOD(Class__AIModule__BTService_BlackboardBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_BlackboardBase, 0x0000);
		}

		// class UBTService_BlueprintBase : public UBTService
		TEST_METHOD(Class__AIModule__BTService_BlueprintBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_BlueprintBase, 0x0000);
		}

		// class UBTService_DefaultFocus : public UBTService_BlackboardBase
		TEST_METHOD(Class__AIModule__BTService_DefaultFocus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_DefaultFocus, 0x0000);
		}

		// class UBTService_RunEQS : public UBTService_BlackboardBase
		TEST_METHOD(Class__AIModule__BTService_RunEQS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_RunEQS, 0x0000);
		}

		// class UBTTask_BlackboardBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_BlackboardBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_BlackboardBase, 0x0000);
		}

		// class UBTTask_BlueprintBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_BlueprintBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_BlueprintBase, 0x0000);
		}

		// class UBTTask_FinishWithResult : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_FinishWithResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_FinishWithResult, 0x0000);
		}

		// class UBTTask_GameplayTaskBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_GameplayTaskBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_GameplayTaskBase, 0x0000);
		}

		// class UBTTask_MakeNoise : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_MakeNoise)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_MakeNoise, 0x0000);
		}

		// class UBTTask_MoveTo : public UBTTask_BlackboardBase
		TEST_METHOD(Class__AIModule__BTTask_MoveTo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_MoveTo, 0x0000);
		}

		// class UBTTask_MoveDirectlyToward : public UBTTask_MoveTo
		TEST_METHOD(Class__AIModule__BTTask_MoveDirectlyToward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_MoveDirectlyToward, 0x0000);
		}

		// class UBTTask_PawnActionBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_PawnActionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PawnActionBase, 0x0000);
		}

		// class UBTTask_PlayAnimation : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_PlayAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PlayAnimation, 0x0000);
		}

		// class UBTTask_PlaySound : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_PlaySound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PlaySound, 0x0000);
		}

		// class UBTTask_PushPawnAction : public UBTTask_PawnActionBase
		TEST_METHOD(Class__AIModule__BTTask_PushPawnAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PushPawnAction, 0x0000);
		}

		// class UBTTask_RotateToFaceBBEntry : public UBTTask_BlackboardBase
		TEST_METHOD(Class__AIModule__BTTask_RotateToFaceBBEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RotateToFaceBBEntry, 0x0000);
		}

		// class UBTTask_RunBehavior : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_RunBehavior)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RunBehavior, 0x0000);
		}

		// class UBTTask_RunBehaviorDynamic : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_RunBehaviorDynamic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RunBehaviorDynamic, 0x0000);
		}

		// class UBTTask_RunEQSQuery : public UBTTask_BlackboardBase
		TEST_METHOD(Class__AIModule__BTTask_RunEQSQuery)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RunEQSQuery, 0x0000);
		}

		// class UBTTask_SetTagCooldown : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_SetTagCooldown)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_SetTagCooldown, 0x0000);
		}

		// class UBTTask_Wait : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_Wait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_Wait, 0x0000);
		}

		// class UBTTask_WaitBlackboardTime : public UBTTask_Wait
		TEST_METHOD(Class__AIModule__BTTask_WaitBlackboardTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_WaitBlackboardTime, 0x0000);
		}

		// class UCrowdAgentInterface : public UInterface
		TEST_METHOD(Class__AIModule__CrowdAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdAgentInterface, 0x0000);
		}

		// class UCrowdFollowingComponent : public UPathFollowingComponent
		TEST_METHOD(Class__AIModule__CrowdFollowingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdFollowingComponent, 0x0000);
		}

		// class UCrowdManager : public UCrowdManagerBase
		TEST_METHOD(Class__AIModule__CrowdManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdManager, 0x0000);
		}

		// class ADetourCrowdAIController : public AAIController
		TEST_METHOD(Class__AIModule__DetourCrowdAIController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADetourCrowdAIController, 0x0000);
		}

		// class UEnvQuery : public UDataAsset
		TEST_METHOD(Class__AIModule__EnvQuery)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQuery, 0x0000);
		}

		// class UEnvQueryContext_BlueprintBase : public UEnvQueryContext
		TEST_METHOD(Class__AIModule__EnvQueryContext_BlueprintBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_BlueprintBase, 0x0000);
		}

		// class UEnvQueryContext_Item : public UEnvQueryContext
		TEST_METHOD(Class__AIModule__EnvQueryContext_Item)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_Item, 0x0000);
		}

		// class UEnvQueryContext_Querier : public UEnvQueryContext
		TEST_METHOD(Class__AIModule__EnvQueryContext_Querier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_Querier, 0x0000);
		}

		// class UEnvQueryDebugHelpers : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryDebugHelpers)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryDebugHelpers, 0x0000);
		}

		// class UEnvQueryGenerator_ActorsOfClass : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_ActorsOfClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_ActorsOfClass, 0x0000);
		}

		// class UEnvQueryGenerator_BlueprintBase : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_BlueprintBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_BlueprintBase, 0x0000);
		}

		// class UEnvQueryGenerator_Composite : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_Composite)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_Composite, 0x0000);
		}

		// class UEnvQueryGenerator_ProjectedPoints : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_ProjectedPoints)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_ProjectedPoints, 0x0000);
		}

		// class UEnvQueryGenerator_Cone : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_Cone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_Cone, 0x0000);
		}

		// class UEnvQueryGenerator_CurrentLocation : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_CurrentLocation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_CurrentLocation, 0x0000);
		}

		// class UEnvQueryGenerator_Donut : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_Donut)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_Donut, 0x0000);
		}

		// class UEnvQueryGenerator_OnCircle : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_OnCircle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_OnCircle, 0x0000);
		}

		// class UEnvQueryGenerator_SimpleGrid : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_SimpleGrid)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_SimpleGrid, 0x0000);
		}

		// class UEnvQueryGenerator_PathingGrid : public UEnvQueryGenerator_SimpleGrid
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_PathingGrid)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_PathingGrid, 0x0000);
		}

		// class UEnvQueryInstanceBlueprintWrapper : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryInstanceBlueprintWrapper)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryInstanceBlueprintWrapper, 0x0000);
		}

		// class UEnvQueryItemType_ActorBase : public UEnvQueryItemType_VectorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_ActorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_ActorBase, 0x0000);
		}

		// class UEnvQueryItemType_Actor : public UEnvQueryItemType_ActorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_Actor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_Actor, 0x0000);
		}

		// class UEnvQueryItemType_Direction : public UEnvQueryItemType_VectorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_Direction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_Direction, 0x0000);
		}

		// class UEnvQueryItemType_Point : public UEnvQueryItemType_VectorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_Point)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_Point, 0x0000);
		}

		// class UEnvQueryManager : public UAISubsystem
		TEST_METHOD(Class__AIModule__EnvQueryManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryManager, 0x0000);
		}

		// class UEnvQueryOption : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryOption)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryOption, 0x0000);
		}

		// class UEnvQueryTest_Distance : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Distance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Distance, 0x0000);
		}

		// class UEnvQueryTest_Dot : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Dot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Dot, 0x0000);
		}

		// class UEnvQueryTest_GameplayTags : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_GameplayTags)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_GameplayTags, 0x0000);
		}

		// class UEnvQueryTest_Overlap : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Overlap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Overlap, 0x0000);
		}

		// class UEnvQueryTest_Pathfinding : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Pathfinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Pathfinding, 0x0000);
		}

		// class UEnvQueryTest_PathfindingBatch : public UEnvQueryTest_Pathfinding
		TEST_METHOD(Class__AIModule__EnvQueryTest_PathfindingBatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_PathfindingBatch, 0x0000);
		}

		// class UEnvQueryTest_Project : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Project)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Project, 0x0000);
		}

		// class UEnvQueryTest_Random : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Random)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Random, 0x0000);
		}

		// class UEnvQueryTest_Trace : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Trace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Trace, 0x0000);
		}

		// class UEnvQueryTypes : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTypes, 0x0000);
		}

		// class UEQSQueryResultSourceInterface : public UInterface
		TEST_METHOD(Class__AIModule__EQSQueryResultSourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEQSQueryResultSourceInterface, 0x0000);
		}

		// class UEQSRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__AIModule__EQSRenderingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEQSRenderingComponent, 0x0000);
		}

		// class AEQSTestingPawn : public ACharacter
		TEST_METHOD(Class__AIModule__EQSTestingPawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEQSTestingPawn, 0x0000);
		}

		// class UGenericTeamAgentInterface : public UInterface
		TEST_METHOD(Class__AIModule__GenericTeamAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGenericTeamAgentInterface, 0x0000);
		}

		// class AGridPathAIController : public AAIController
		TEST_METHOD(Class__AIModule__GridPathAIController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGridPathAIController, 0x0000);
		}

		// class UGridPathFollowingComponent : public UPathFollowingComponent
		TEST_METHOD(Class__AIModule__GridPathFollowingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGridPathFollowingComponent, 0x0000);
		}

		// class UNavFilter_AIControllerDefault : public UNavigationQueryFilter
		TEST_METHOD(Class__AIModule__NavFilter_AIControllerDefault)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavFilter_AIControllerDefault, 0x0000);
		}

		// class ANavLinkProxy : public AActor
		TEST_METHOD(Class__AIModule__NavLinkProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavLinkProxy, 0x0000);
		}

		// class UNavLocalGridManager : public UObject
		TEST_METHOD(Class__AIModule__NavLocalGridManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLocalGridManager, 0x0000);
		}

		// class UPathFollowingManager : public UObject
		TEST_METHOD(Class__AIModule__PathFollowingManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathFollowingManager, 0x0000);
		}

		// class UPawnAction : public UObject
		TEST_METHOD(Class__AIModule__PawnAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction, 0x0000);
		}

		// class UPawnAction_BlueprintBase : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_BlueprintBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_BlueprintBase, 0x0000);
		}

		// class UPawnAction_Move : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Move)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Move, 0x0000);
		}

		// class UPawnAction_Repeat : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Repeat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Repeat, 0x0000);
		}

		// class UPawnAction_Sequence : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Sequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Sequence, 0x0000);
		}

		// class UPawnAction_Wait : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Wait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Wait, 0x0000);
		}

		// class UPawnActionsComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__PawnActionsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnActionsComponent, 0x0000);
		}

		// class UPawnSensingComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__PawnSensingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnSensingComponent, 0x0000);
		}

		// class UVisualLoggerExtension : public UObject
		TEST_METHOD(Class__AIModule__VisualLoggerExtension)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerExtension, 0x0000);
		}

		// class UWidget_HUD_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HUD__Widget_HUD_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HUD_C, 0x0000);
		}

		// class UAction_Buff_Consumable_FrenzyDust_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Buff_Consumable_FrenzyDust__Action_Buff_Consumable_FrenzyDust_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Buff_Consumable_FrenzyDust_C, 0x0000);
		}

		// class ACharacter_Root_Splitter_C : public ACharacter_Root_Broken_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Splitter__Character_Root_Splitter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Splitter_C, 0x0000);
		}

		// class ACharacter_Root_Splitter_Champion_C : public ACharacter_Root_Splitter_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Splitter_Champion__Character_Root_Splitter_Champion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Splitter_Champion_C, 0x0000);
		}

		// class AConsumable_HydroCoolant_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_HydroCoolant__Consumable_HydroCoolant_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_HydroCoolant_C, 0x0000);
		}

		// class UARBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AugmentedReality__ARBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARBlueprintLibrary, 0x0000);
		}

		// class UARTraceResultLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AugmentedReality__ARTraceResultLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTraceResultLibrary, 0x0000);
		}

		// class UARBaseAsyncTaskBlueprintProxy : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__AugmentedReality__ARBaseAsyncTaskBlueprintProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARBaseAsyncTaskBlueprintProxy, 0x0000);
		}

		// class UARSaveWorldAsyncTaskBlueprintProxy : public UARBaseAsyncTaskBlueprintProxy
		TEST_METHOD(Class__AugmentedReality__ARSaveWorldAsyncTaskBlueprintProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARSaveWorldAsyncTaskBlueprintProxy, 0x0000);
		}

		// class UARGetCandidateObjectAsyncTaskBlueprintProxy : public UARBaseAsyncTaskBlueprintProxy
		TEST_METHOD(Class__AugmentedReality__ARGetCandidateObjectAsyncTaskBlueprintProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARGetCandidateObjectAsyncTaskBlueprintProxy, 0x0000);
		}

		// class UARLightEstimate : public UObject
		TEST_METHOD(Class__AugmentedReality__ARLightEstimate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARLightEstimate, 0x0000);
		}

		// class UARBasicLightEstimate : public UARLightEstimate
		TEST_METHOD(Class__AugmentedReality__ARBasicLightEstimate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARBasicLightEstimate, 0x0000);
		}

		// class UARPin : public UObject
		TEST_METHOD(Class__AugmentedReality__ARPin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARPin, 0x0000);
		}

		// class UARSessionConfig : public UDataAsset
		TEST_METHOD(Class__AugmentedReality__ARSessionConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARSessionConfig, 0x0000);
		}

		// class AARSharedWorldGameMode : public AGameMode
		TEST_METHOD(Class__AugmentedReality__ARSharedWorldGameMode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AARSharedWorldGameMode, 0x0000);
		}

		// class AARSharedWorldGameState : public AGameState
		TEST_METHOD(Class__AugmentedReality__ARSharedWorldGameState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AARSharedWorldGameState, 0x0000);
		}

		// class AARSharedWorldPlayerController : public APlayerController
		TEST_METHOD(Class__AugmentedReality__ARSharedWorldPlayerController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AARSharedWorldPlayerController, 0x0000);
		}

		// class AARSkyLight : public ASkyLight
		TEST_METHOD(Class__AugmentedReality__ARSkyLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AARSkyLight, 0x0000);
		}

		// class UARTexture : public UTexture
		TEST_METHOD(Class__AugmentedReality__ARTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTexture, 0x0000);
		}

		// class UARTextureCameraImage : public UARTexture
		TEST_METHOD(Class__AugmentedReality__ARTextureCameraImage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTextureCameraImage, 0x0000);
		}

		// class UARTextureCameraDepth : public UARTexture
		TEST_METHOD(Class__AugmentedReality__ARTextureCameraDepth)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTextureCameraDepth, 0x0000);
		}

		// class UAREnvironmentCaptureProbeTexture : public UTextureCube
		TEST_METHOD(Class__AugmentedReality__AREnvironmentCaptureProbeTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAREnvironmentCaptureProbeTexture, 0x0000);
		}

		// class UARTraceResultDummy : public UObject
		TEST_METHOD(Class__AugmentedReality__ARTraceResultDummy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTraceResultDummy, 0x0000);
		}

		// class UARTrackedGeometry : public UObject
		TEST_METHOD(Class__AugmentedReality__ARTrackedGeometry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTrackedGeometry, 0x0000);
		}

		// class UARPlaneGeometry : public UARTrackedGeometry
		TEST_METHOD(Class__AugmentedReality__ARPlaneGeometry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARPlaneGeometry, 0x0000);
		}

		// class UARTrackedPoint : public UARTrackedGeometry
		TEST_METHOD(Class__AugmentedReality__ARTrackedPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTrackedPoint, 0x0000);
		}

		// class UARTrackedImage : public UARTrackedGeometry
		TEST_METHOD(Class__AugmentedReality__ARTrackedImage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTrackedImage, 0x0000);
		}

		// class UARFaceGeometry : public UARTrackedGeometry
		TEST_METHOD(Class__AugmentedReality__ARFaceGeometry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARFaceGeometry, 0x0000);
		}

		// class UAREnvironmentCaptureProbe : public UARTrackedGeometry
		TEST_METHOD(Class__AugmentedReality__AREnvironmentCaptureProbe)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAREnvironmentCaptureProbe, 0x0000);
		}

		// class UARTrackedObject : public UARTrackedGeometry
		TEST_METHOD(Class__AugmentedReality__ARTrackedObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTrackedObject, 0x0000);
		}

		// class UARTypesDummyClass : public UObject
		TEST_METHOD(Class__AugmentedReality__ARTypesDummyClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARTypesDummyClass, 0x0000);
		}

		// class UARCandidateImage : public UDataAsset
		TEST_METHOD(Class__AugmentedReality__ARCandidateImage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARCandidateImage, 0x0000);
		}

		// class UARCandidateObject : public UDataAsset
		TEST_METHOD(Class__AugmentedReality__ARCandidateObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UARCandidateObject, 0x0000);
		}

		// class UMoviePlayerSettings : public UObject
		TEST_METHOD(Class__MoviePlayer__MoviePlayerSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMoviePlayerSettings, 0x0000);
		}

		// class AResource_TraitBook_C : public ABP_Item_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_TraitBook__Resource_TraitBook_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_TraitBook_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_09_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_09__BP_City_Corpse_Vingette_09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_09_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_05_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_05__BP_City_Corpse_Vingette_05_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_05_C, 0x0000);
		}

		// class ACharacter_Master_Player_C : public ARemnantCharacter
		TEST_METHOD(BlueprintGeneratedClass__Character_Master_Player__Character_Master_Player_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Master_Player_C, 0x0000);
		}

		// class ARemnant_PlayerController_C : public ARemnantPlayerController
		TEST_METHOD(BlueprintGeneratedClass__Remnant_PlayerController__Remnant_PlayerController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnant_PlayerController_C, 0x0000);
		}

		// class AResource_Swamp_HardenedCarapace_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_HardenedCarapace__Resource_Swamp_HardenedCarapace_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_HardenedCarapace_C, 0x0000);
		}

		// class AArmor_Head_Void_C : public AArmor_Head_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Void__Armor_Head_Void_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Void_C, 0x0000);
		}

		// class UTrait_ArmorPiercer_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_ArmorPiercer__Trait_ArmorPiercer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_ArmorPiercer_C, 0x0000);
		}

		// class AResource_Material_Iron_Base_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Material_Iron_Base__Resource_Material_Iron_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Material_Iron_Base_C, 0x0000);
		}

		// class ADialog_CheckpointMenu_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_CheckpointMenu__Dialog_CheckpointMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_CheckpointMenu_C, 0x0000);
		}

		// class UMiniMap_Remnant_C : public UMiniMapComponent
		TEST_METHOD(BlueprintGeneratedClass__MiniMap_Remnant__MiniMap_Remnant_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMap_Remnant_C, 0x0000);
		}

		// class UEmote_No_C : public UEmote
		TEST_METHOD(BlueprintGeneratedClass__Emote_No__Emote_No_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_No_C, 0x0000);
		}

		// class UCamera_FlyCamera_C : public URemnantFlyCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_FlyCamera__Camera_FlyCamera_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_FlyCamera_C, 0x0000);
		}

		// class UCamera_Default_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Default__Camera_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Default_C, 0x0000);
		}

		// class UFunctionLibrary_Quests_C : public UBlueprintFunctionLibrary
		TEST_METHOD(BlueprintGeneratedClass__FunctionLibrary_Quests__FunctionLibrary_Quests_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFunctionLibrary_Quests_C, 0x0000);
		}

		// class UTutorial_C : public UPrimaryDataAsset
		TEST_METHOD(BlueprintGeneratedClass__Tutorial__Tutorial_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_C, 0x0000);
		}

		// class UWidget_Loading_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Loading__Widget_Loading_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Loading_C, 0x0000);
		}

		// class UWidget_PartyStatus_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_PartyStatus__Widget_PartyStatus_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_PartyStatus_C, 0x0000);
		}

		// class UWidget_CheckpointNotifications_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_CheckpointNotifications__Widget_CheckpointNotifications_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_CheckpointNotifications_C, 0x0000);
		}

		// class UCameraShake_RootBrute_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_RootBrute__CameraShake_RootBrute_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_RootBrute_C, 0x0000);
		}

		// class AWeapon_Sword_C : public AWeapon_Melee_SkinnedBase_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Sword__Weapon_Sword_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Sword_C, 0x0000);
		}

		// class UItemCategory_Hidden_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Hidden__ItemCategory_Hidden_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Hidden_C, 0x0000);
		}

		// class UArmor_ComputedStats_C : public UComputedStats
		TEST_METHOD(BlueprintGeneratedClass__Armor_ComputedStats__Armor_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmor_ComputedStats_C, 0x0000);
		}

		// class UInspectStats_Trinkets_C : public UStats
		TEST_METHOD(BlueprintGeneratedClass__InspectStats_Trinkets__InspectStats_Trinkets_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectStats_Trinkets_C, 0x0000);
		}

		// class UWeapon_Coachgun_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Coachgun_AnimsBP__Weapon_Coachgun_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Coachgun_AnimsBP_C, 0x0000);
		}

		// class UAction_Character_Root_Screamer_Damage_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Screamer_Damage__Action_Character_Root_Screamer_Damage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Screamer_Damage_C, 0x0000);
		}

		// class UNamedInterfaces : public UObject
		TEST_METHOD(Class__OnlineSubsystem__NamedInterfaces)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedInterfaces, 0x0000);
		}

		// class UTurnBasedMatchInterface : public UInterface
		TEST_METHOD(Class__OnlineSubsystem__TurnBasedMatchInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTurnBasedMatchInterface, 0x0000);
		}

		// class UAction_Character_Root_Broken_FireProjectile_Right_C : public UAction_Fire_Projectile_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Broken_FireProjectile_Right__Action_Character_Root_Broken_FireProjectile_Right_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Broken_FireProjectile_Right_C, 0x0000);
		}

		// class ABP_Corpse_Vignette_Base_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Corpse_Vignette_Base__BP_Corpse_Vignette_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Corpse_Vignette_Base_C, 0x0000);
		}

		// class AImpactEffect_Creature_Medium_Tentacle_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Medium_Tentacle__ImpactEffect_Creature_Medium_Tentacle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Medium_Tentacle_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blade_WorldBreaker_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blade_WorldBreaker__ImpactEffect_Weapon_Blade_WorldBreaker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blade_WorldBreaker_C, 0x0000);
		}

		// class UDamageType_Ranged_Ruin_C : public UDamageType_Ranged_C
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Ruin__DamageType_Ranged_Ruin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Ruin_C, 0x0000);
		}

		// class UWeapon_Wasteland_Ruin_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Wasteland_Ruin_AnimsBP__Weapon_Wasteland_Ruin_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Wasteland_Ruin_AnimsBP_C, 0x0000);
		}

		// class UAction_UndyingCooldown_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_UndyingCooldown__Action_UndyingCooldown_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_UndyingCooldown_C, 0x0000);
		}

		// class UKismetProceduralMeshLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__ProceduralMeshComponent__KismetProceduralMeshLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetProceduralMeshLibrary, 0x0000);
		}

		// class UProceduralMeshComponent : public UMeshComponent
		TEST_METHOD(Class__ProceduralMeshComponent__ProceduralMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralMeshComponent, 0x0000);
		}

		// class UAction_AOE_Mod_Blowback_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_Blowback__Action_AOE_Mod_Blowback_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_Blowback_C, 0x0000);
		}

		// class UAction_StatusEffect_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_StatusEffect__Action_StatusEffect_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StatusEffect_C, 0x0000);
		}

		// class UAction_Mod_Undying_Revived_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Undying_Revived__Action_Mod_Undying_Revived_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Undying_Revived_C, 0x0000);
		}

		// class UAction_Mod_Undying_Regen_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Undying_Regen__Action_Mod_Undying_Regen_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Undying_Regen_C, 0x0000);
		}

		// class UAction_Debuff_Parasite_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Parasite__Action_Debuff_Parasite_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Parasite_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blade_Metal_Small_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blade_Metal_Small__ImpactEffect_Weapon_Blade_Metal_Small_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blade_Metal_Small_C, 0x0000);
		}

		// class UCameraShake_SemiAuto_Heavy_Firing_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_SemiAuto_Heavy_Firing__CameraShake_SemiAuto_Heavy_Firing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_SemiAuto_Heavy_Firing_C, 0x0000);
		}

		// class UArmorSkill_Harden_Action_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Harden_Action__ArmorSkill_Harden_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Harden_Action_C, 0x0000);
		}

		// class ATrinket_RingOfTheUnclean_C : public AItem_Trinket_TriggerOnEquip_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_RingOfTheUnclean__Trinket_RingOfTheUnclean_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_RingOfTheUnclean_C, 0x0000);
		}

		// class AQuest_OverworldPOI_Settlement_POI_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_5__Quest_OverworldPOI_Settlement_POI_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_Settlement_POI_C, 0x0000);
		}

		// class UWidget_PartyMemberChat_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_PartyMemberChat__Widget_PartyMemberChat_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_PartyMemberChat_C, 0x0000);
		}

		// class UWidget_StatusEffectStack_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatusEffectStack__Widget_StatusEffectStack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatusEffectStack_C, 0x0000);
		}

		// class AMod_RadioactiveVolley_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_RadioactiveVolley__Mod_RadioactiveVolley_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_RadioactiveVolley_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_Defiler_C : public AImpactEffect_Projectile_Bullet_Multiple_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_Defiler__ImpactEffect_Projectile_Bullet_Defiler_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_Defiler_C, 0x0000);
		}

		// class AWeapon_PrideOfTheIskal_Projectile_C : public ABP_Projectile_Stick_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_PrideOfTheIskal_Projectile__Weapon_PrideOfTheIskal_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_PrideOfTheIskal_Projectile_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_CurseOfTheGod_C : public AImpactEffect_Projectile_Bullet_Single_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_CurseOfTheGod__ImpactEffect_Projectile_Bullet_CurseOfTheGod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_CurseOfTheGod_C, 0x0000);
		}

		// class AWeapon_WorldsEdge_WaveProjectile_C : public AProjectileBox
		TEST_METHOD(BlueprintGeneratedClass__Weapon_WorldsEdge_WaveProjectile__Weapon_WorldsEdge_WaveProjectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_WorldsEdge_WaveProjectile_C, 0x0000);
		}

		// class UDamageType_Melee_Power_02_Shock_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_02_Shock__DamageType_Melee_Power_02_Shock_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_02_Shock_C, 0x0000);
		}

		// class UDamageType_DOT_Melee_Fire_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Melee_Fire__DamageType_DOT_Melee_Fire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Melee_Fire_C, 0x0000);
		}

		// class UDamage_Type_Corrosive_Quills_Mod_C : public UDamageType_Ranged_C
		TEST_METHOD(BlueprintGeneratedClass__Damage_Type_Corrosive_Quills_Mod__Damage_Type_Corrosive_Quills_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamage_Type_Corrosive_Quills_Mod_C, 0x0000);
		}

		// class UWeaponProfile_Mod_RattleWeed_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_RattleWeed__WeaponProfile_Mod_RattleWeed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_RattleWeed_C, 0x0000);
		}

		// class AMod_ExplosiveShot_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Mod_ExplosiveShot_Projectile__Mod_ExplosiveShot_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_ExplosiveShot_Projectile_C, 0x0000);
		}

		// class AImpactEffect_Player_Land_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Player_Land__ImpactEffect_Player_Land_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Player_Land_C, 0x0000);
		}

		// class AImpactEffect_Player_Handfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Player_Handfall__ImpactEffect_Player_Handfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Player_Handfall_C, 0x0000);
		}

		// class UDamageType_Explosion_Ranged_Power_02_FromPlayer_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Ranged_Power_02_FromPlayer__DamageType_Explosion_Ranged_Power_02_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Ranged_Power_02_FromPlayer_C, 0x0000);
		}

		// class UDamageType_Explosion_Corrosive_Power_02_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Corrosive_Power_02_FromPlayer_Mod__DamageType_Explosion_Corrosive_Power_02_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Corrosive_Power_02_FromPlayer_Mod_C, 0x0000);
		}

		// class UMovieSceneMediaSection : public UMovieSceneSection
		TEST_METHOD(Class__MediaCompositing__MovieSceneMediaSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMediaSection, 0x0000);
		}

		// class UMovieSceneMediaTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MediaCompositing__MovieSceneMediaTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMediaTrack, 0x0000);
		}

		// class UBP_RemnantSaveGame_C : public URemnantSaveGame
		TEST_METHOD(BlueprintGeneratedClass__BP_RemnantSaveGame__BP_RemnantSaveGame_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_RemnantSaveGame_C, 0x0000);
		}

		// class UCameraShake_Explosion_VeryLight_Impact_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Explosion_VeryLight_Impact__CameraShake_Explosion_VeryLight_Impact_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Explosion_VeryLight_Impact_C, 0x0000);
		}

		// class UCharacter_RiftWalker_Clone_Female_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_RiftWalker_Clone_Female_AnimBP__Character_RiftWalker_Clone_Female_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_RiftWalker_Clone_Female_AnimBP_C, 0x0000);
		}

		// class UEmote_Sad_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Sad__Emote_Sad_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Sad_C, 0x0000);
		}

		// class UEmote_Default_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Default__Emote_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Default_C, 0x0000);
		}

		// class UEventTreeNode_ShowMenu_C : public UEventTreeNode
		TEST_METHOD(BlueprintGeneratedClass__EventTreeNode_ShowMenu__EventTreeNode_ShowMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_ShowMenu_C, 0x0000);
		}

		// class USpeaker_AceCotterill_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_AceCotterill__Speaker_AceCotterill_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_AceCotterill_C, 0x0000);
		}

		// class UEventTreeNode_QuestReward_C : public UEventTreeNode
		TEST_METHOD(BlueprintGeneratedClass__EventTreeNode_QuestReward__EventTreeNode_QuestReward_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_QuestReward_C, 0x0000);
		}

		// class USpeaker_ReggieMalone_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_ReggieMalone__Speaker_ReggieMalone_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_ReggieMalone_C, 0x0000);
		}

		// class USpeaker_BoWard_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_BoWard__Speaker_BoWard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_BoWard_C, 0x0000);
		}

		// class USpeaker_DonRigs_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_DonRigs__Speaker_DonRigs_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_DonRigs_C, 0x0000);
		}

		// class UCameraShake_VerticalMed_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_VerticalMed__CameraShake_VerticalMed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_VerticalMed_C, 0x0000);
		}

		// class UWidget_InventoryTab_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InventoryTab__Widget_InventoryTab_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InventoryTab_C, 0x0000);
		}

		// class UWidget_RecipeList_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_RecipeList__Widget_RecipeList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_RecipeList_C, 0x0000);
		}

		// class AMiniMap_Tile_Support_Actor_C : public AMinimapThumbnail
		TEST_METHOD(BlueprintGeneratedClass__MiniMap_Tile_Support_Actor__MiniMap_Tile_Support_Actor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniMap_Tile_Support_Actor_C, 0x0000);
		}

		// class UWidget_FixedSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_FixedSetting__Widget_FixedSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_FixedSetting_C, 0x0000);
		}

		// class UWidget_BackgroundTraitSlot_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BackgroundTraitSlot__Widget_BackgroundTraitSlot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BackgroundTraitSlot_C, 0x0000);
		}

		// class UImpactDirection_Right_C : public UImpactDirection
		TEST_METHOD(BlueprintGeneratedClass__ImpactDirection_Right__ImpactDirection_Right_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImpactDirection_Right_C, 0x0000);
		}

		// class UImpactDirection_Left_C : public UImpactDirection
		TEST_METHOD(BlueprintGeneratedClass__ImpactDirection_Left__ImpactDirection_Left_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImpactDirection_Left_C, 0x0000);
		}

		// class UAction_ApplyFire_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_ApplyFire__Action_ApplyFire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_ApplyFire_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_32__City_Street_VISTA_04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_B_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_30__City_Street_VISTA_03_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_B_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_RapidFire_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_RapidFire__ImpactEffect_Projectile_Bullet_RapidFire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_RapidFire_C, 0x0000);
		}

		// class AMod_Flamethrower_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Flamethrower__Mod_Flamethrower_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Flamethrower_C, 0x0000);
		}

		// class ACharacter_Swamp_ElfQueen_CorrosivePuddle_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_ElfQueen_CorrosivePuddle__Character_Swamp_ElfQueen_CorrosivePuddle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_ElfQueen_CorrosivePuddle_C, 0x0000);
		}

		// class AMod_Banish_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Banish__Mod_Banish_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Banish_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_Repulsor_C : public AImpactEffect_Projectile_Bullet_Multiple_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_Repulsor__ImpactEffect_Projectile_Bullet_Repulsor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_Repulsor_C, 0x0000);
		}

		// class UDamageType_Ranged_Repulsor_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Repulsor__DamageType_Ranged_Repulsor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Repulsor_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_SporeLauncher_C : public AImpactEffect_Projectile_Bullet_Multiple_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_SporeLauncher__ImpactEffect_Projectile_Bullet_SporeLauncher_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_SporeLauncher_C, 0x0000);
		}

		// class UWeapon_Root_SporeLauncher_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Root_SporeLauncher_AnimsBP__Weapon_Root_SporeLauncher_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Root_SporeLauncher_AnimsBP_C, 0x0000);
		}

		// class UCharacter_Root_Rattleweed_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Root_Rattleweed__Character_Root_Rattleweed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Rattleweed_C, 0x0000);
		}

		// class ABP_Mod_HiveShot_ProjectileVisualization_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_HiveShot_ProjectileVisualization__BP_Mod_HiveShot_ProjectileVisualization_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_HiveShot_ProjectileVisualization_C, 0x0000);
		}

		// class ABP_Mod_SporeShot_ProjectileVisualization_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_SporeShot_ProjectileVisualization__BP_Mod_SporeShot_ProjectileVisualization_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_SporeShot_ProjectileVisualization_C, 0x0000);
		}

		// class ABP_Mod_Incinerator_ProjectileVisualization_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_Incinerator_ProjectileVisualization__BP_Mod_Incinerator_ProjectileVisualization_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_Incinerator_ProjectileVisualization_C, 0x0000);
		}

		// class UWeapon_Devastator_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Devastator_AnimsBP__Weapon_Devastator_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Devastator_AnimsBP_C, 0x0000);
		}

		// class AWeapon_Hatchet_C : public AWeapon_Melee_SkinnedBase_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Hatchet__Weapon_Hatchet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Hatchet_C, 0x0000);
		}

		// class UAction_Mod_SingleTarget_FireProjectile_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_SingleTarget_FireProjectile__Action_Mod_SingleTarget_FireProjectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_SingleTarget_FireProjectile_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_23__City_Street_VISTA_03_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Mod_Swarm_C : public AImpactEffect_Projectile_Bullet_Single_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Mod_Swarm__ImpactEffect_Projectile_Mod_Swarm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Mod_Swarm_C, 0x0000);
		}

		// class AMod_HiveShot_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_HiveShot__Mod_HiveShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_HiveShot_C, 0x0000);
		}

		// class AMod_Incinerator_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Incinerator_Projectile__Mod_Incinerator_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Incinerator_Projectile_C, 0x0000);
		}

		// class ATracer_Pan_EyeOfTheStorm_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Pan_EyeOfTheStorm__Tracer_Pan_EyeOfTheStorm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Pan_EyeOfTheStorm_C, 0x0000);
		}

		// class UDamageType_Ranged_Power_02_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Power_02__DamageType_Ranged_Power_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Power_02_C, 0x0000);
		}

		// class ABP_Projectile_Stick_Sphere_Base_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile_Stick_Sphere_Base__BP_Projectile_Stick_Sphere_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_Stick_Sphere_Base_C, 0x0000);
		}

		// class UTutorial_InGameMenu_Inventory_WeaponMod_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_InGameMenu_Inventory_WeaponMod__Tutorial_InGameMenu_Inventory_WeaponMod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_InGameMenu_Inventory_WeaponMod_C, 0x0000);
		}

		// class AConsumable_OrbOfUndoing_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_OrbOfUndoing__Consumable_OrbOfUndoing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_OrbOfUndoing_C, 0x0000);
		}

		// class ULevelVariantSets : public UObject
		TEST_METHOD(Class__VariantManagerContent__LevelVariantSets)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelVariantSets, 0x0000);
		}

		// class ALevelVariantSetsActor : public AActor
		TEST_METHOD(Class__VariantManagerContent__LevelVariantSetsActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelVariantSetsActor, 0x0000);
		}

		// class ULevelVariantSetsFunctionDirector : public UObject
		TEST_METHOD(Class__VariantManagerContent__LevelVariantSetsFunctionDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelVariantSetsFunctionDirector, 0x0000);
		}

		// class UPropertyValue : public UObject
		TEST_METHOD(Class__VariantManagerContent__PropertyValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValue, 0x0000);
		}

		// class UPropertyValueTransform : public UPropertyValue
		TEST_METHOD(Class__VariantManagerContent__PropertyValueTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValueTransform, 0x0000);
		}

		// class UPropertyValueVisibility : public UPropertyValue
		TEST_METHOD(Class__VariantManagerContent__PropertyValueVisibility)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValueVisibility, 0x0000);
		}

		// class UPropertyValueColor : public UPropertyValue
		TEST_METHOD(Class__VariantManagerContent__PropertyValueColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValueColor, 0x0000);
		}

		// class UPropertyValueMaterial : public UPropertyValue
		TEST_METHOD(Class__VariantManagerContent__PropertyValueMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValueMaterial, 0x0000);
		}

		// class UVariant : public UObject
		TEST_METHOD(Class__VariantManagerContent__Variant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariant, 0x0000);
		}

		// class UVariantObjectBinding : public UObject
		TEST_METHOD(Class__VariantManagerContent__VariantObjectBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariantObjectBinding, 0x0000);
		}

		// class UVariantSet : public UObject
		TEST_METHOD(Class__VariantManagerContent__VariantSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariantSet, 0x0000);
		}

		// class UDamageType_Melee_Power_02_Corrosive_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_02_Corrosive__DamageType_Melee_Power_02_Corrosive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_02_Corrosive_C, 0x0000);
		}

		// class UDamageType_Melee_Corrosive_Hammerhead_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Corrosive_Hammerhead__DamageType_Melee_Corrosive_Hammerhead_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Corrosive_Hammerhead_C, 0x0000);
		}

		// class UWidget_WorldSlot_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_WorldSlot__Widget_WorldSlot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_WorldSlot_C, 0x0000);
		}

		// class AMod_Beckon_Minion_Projectile_C : public AWasteland_Skull_Projectile_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Beckon_Minion_Projectile__Mod_Beckon_Minion_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Beckon_Minion_Projectile_C, 0x0000);
		}

		// class UWidget_TabButton_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TabButton__Widget_TabButton_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TabButton_C, 0x0000);
		}

		// class ACharacter_Tentacle_C : public AAICharacter
		TEST_METHOD(BlueprintGeneratedClass__Character_Tentacle__Character_Tentacle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Tentacle_C, 0x0000);
		}

		// class ACity_Street_TJ_Generic_02_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_4__City_Street_TJ_Generic_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_TJ_Generic_02_C, 0x0000);
		}

		// class AArmor_Head_Base_C : public AItem_Armor_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Base__Armor_Head_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Base_C, 0x0000);
		}

		// class AArmor_Legs_Default_C : public AArmor_Legs_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Default__Armor_Legs_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Default_C, 0x0000);
		}

		// class AArmor_Legs_Nude_C : public AArmor_Legs_Default_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Nude__Armor_Legs_Nude_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Nude_C, 0x0000);
		}

		// class AWeapon_Swamp_HiveCannon_C : public AWeapon_HandGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Swamp_HiveCannon__Weapon_Swamp_HiveCannon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Swamp_HiveCannon_C, 0x0000);
		}

		// class AWeapon_Swamp_GuardianAxe_C : public AWeapon_Hatchet_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Swamp_GuardianAxe__Weapon_Swamp_GuardianAxe_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Swamp_GuardianAxe_C, 0x0000);
		}

		// class UAction_Mod_Vampiric_C : public UAction_HealOverTime_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Vampiric__Action_Mod_Vampiric_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Vampiric_C, 0x0000);
		}

		// class AResource_Swamp_Hivestone_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_Hivestone__Resource_Swamp_Hivestone_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_Hivestone_C, 0x0000);
		}

		// class AWeapon_Pan_ScarOfTheJungleGod_C : public AWeapon_Fist_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Pan_ScarOfTheJungleGod__Weapon_Pan_ScarOfTheJungleGod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Pan_ScarOfTheJungleGod_C, 0x0000);
		}

		// class AWeapon_Root_PetrifiedMaul_C : public AWeapon_Hammer_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Root_PetrifiedMaul__Weapon_Root_PetrifiedMaul_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Root_PetrifiedMaul_C, 0x0000);
		}

		// class AWeapon_Rural_WorldsEdge_C : public AWeapon_Sword_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Rural_WorldsEdge__Weapon_Rural_WorldsEdge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Rural_WorldsEdge_C, 0x0000);
		}

		// class AResource_Wasteland_RadioactiveSkull_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_RadioactiveSkull__Resource_Wasteland_RadioactiveSkull_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_RadioactiveSkull_C, 0x0000);
		}

		// class AMod_Flamethrower_FirePuddle_C : public ABP_Aura_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Flamethrower_FirePuddle__Mod_Flamethrower_FirePuddle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Flamethrower_FirePuddle_C, 0x0000);
		}

		// class UCharacter_Wasteland_Annointed_TargetSelector_C : public UAICharacterNearbyTargetSelector
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Annointed_TargetSelector__Character_Wasteland_Annointed_TargetSelector_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Wasteland_Annointed_TargetSelector_C, 0x0000);
		}

		// class AMod_CorrosiveAura_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_CorrosiveAura__Mod_CorrosiveAura_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_CorrosiveAura_C, 0x0000);
		}

		// class AMod_BlinkToken_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_BlinkToken__Mod_BlinkToken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_BlinkToken_C, 0x0000);
		}

		// class AMod_ColdSpear_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_ColdSpear__Mod_ColdSpear_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_ColdSpear_C, 0x0000);
		}

		// class AResource_Special_LumeniteCrystal_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Special_LumeniteCrystal__Resource_Special_LumeniteCrystal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Special_LumeniteCrystal_C, 0x0000);
		}

		// class UBP_ActionBase_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__BP_ActionBase__BP_ActionBase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_ActionBase_C, 0x0000);
		}

		// class UCharacter_Wasteland_VeryGoodBoy_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Wasteland_VeryGoodBoy_AnimsBP__Character_Wasteland_VeryGoodBoy_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Wasteland_VeryGoodBoy_AnimsBP_C, 0x0000);
		}

		// class ACharacter_Wasteland_VeryGoodBoy_Minion_C : public ACharacter_Wasteland_Hound_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_VeryGoodBoy_Minion__Character_Wasteland_VeryGoodBoy_Minion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_VeryGoodBoy_Minion_C, 0x0000);
		}

		// class UWidget_Recipe_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Recipe__Widget_Recipe_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Recipe_C, 0x0000);
		}

		// class UWidget_Ingredients_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Ingredients__Widget_Ingredients_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Ingredients_C, 0x0000);
		}

		// class UWidget_StatusInfo_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatusInfo__Widget_StatusInfo_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatusInfo_C, 0x0000);
		}

		// class UWidget_Trait_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Trait__Widget_Trait_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Trait_C, 0x0000);
		}

		// class UCharacterMod_Reinforcements_C : public UCharacterMod_Base_C
		TEST_METHOD(BlueprintGeneratedClass__CharacterMod_Reinforcements__CharacterMod_Reinforcements_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMod_Reinforcements_C, 0x0000);
		}

		// class UCharacterMod_Root_Enchanter_C : public UCharacterMod_Base_C
		TEST_METHOD(BlueprintGeneratedClass__CharacterMod_Root_Enchanter__CharacterMod_Root_Enchanter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMod_Root_Enchanter_C, 0x0000);
		}

		// class UCharacterMod_Bruiser_C : public UCharacterMod_Base_C
		TEST_METHOD(BlueprintGeneratedClass__CharacterMod_Bruiser__CharacterMod_Bruiser_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMod_Bruiser_C, 0x0000);
		}

		// class UAction_AOE_Mod_RiftWalker_C : public UAction_AOE_ForceImpulse_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_RiftWalker__Action_AOE_Mod_RiftWalker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_RiftWalker_C, 0x0000);
		}

		// class ABP_BreakableActor_C : public ADamageableActor
		TEST_METHOD(BlueprintGeneratedClass__BP_BreakableActor__BP_BreakableActor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BreakableActor_C, 0x0000);
		}

		// class UCameraShake_FullAuto_Light_Firing_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_FullAuto_Light_Firing__CameraShake_FullAuto_Light_Firing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_FullAuto_Light_Firing_C, 0x0000);
		}

		// class ACharacter_Root_Priest_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Priest__Character_Root_Priest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Priest_C, 0x0000);
		}

		// class UWidget_ItemInfo_Default_C : public UWidget_ItemInfo_Base_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemInfo_Default__Widget_ItemInfo_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemInfo_Default_C, 0x0000);
		}

		// class UDamageType_Ranged_Radiation_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Radiation__DamageType_Ranged_Radiation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Radiation_C, 0x0000);
		}

		// class UAction_Mod_WildfireShot_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_WildfireShot__Action_Mod_WildfireShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_WildfireShot_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Launcher_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Launcher__ImpactEffect_Projectile_Launcher_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Launcher_C, 0x0000);
		}

		// class AMod_StormCaller_Bolt_C : public ABP_StormCaller_Bolt_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_StormCaller_Bolt__Mod_StormCaller_Bolt_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_StormCaller_Bolt_C, 0x0000);
		}

		// class AMod_Blizzard_Icicle_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Blizzard_Icicle_Projectile__Mod_Blizzard_Icicle_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Blizzard_Icicle_Projectile_C, 0x0000);
		}

		// class UDamageType_Ranged_Shock_EyeOfTheStorm_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Shock_EyeOfTheStorm__DamageType_Ranged_Shock_EyeOfTheStorm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Shock_EyeOfTheStorm_C, 0x0000);
		}

		// class AWeapon_Devastator_Projectile_C : public ABP_Projectile_Stick_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Devastator_Projectile__Weapon_Devastator_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Devastator_Projectile_C, 0x0000);
		}

		// class ABP_Mod_FrozenMist_ProjectileVisualization_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_FrozenMist_ProjectileVisualization__BP_Mod_FrozenMist_ProjectileVisualization_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_FrozenMist_ProjectileVisualization_C, 0x0000);
		}

		// class UAction_Debuff_Corrosive_Stacking_OnEnemy_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Corrosive_Stacking_OnEnemy__Action_Debuff_Corrosive_Stacking_OnEnemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Corrosive_Stacking_OnEnemy_C, 0x0000);
		}

		// class UTutorial_CheckpointTown_Survival_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_CheckpointTown_Survival__Tutorial_CheckpointTown_Survival_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_CheckpointTown_Survival_C, 0x0000);
		}

		// class UTutorial_CheckpointTown_AdventureMode_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_CheckpointTown_AdventureMode__Tutorial_CheckpointTown_AdventureMode_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_CheckpointTown_AdventureMode_C, 0x0000);
		}

		// class ABp_DialogueStage_C : public ADialogStage
		TEST_METHOD(BlueprintGeneratedClass__Bp_DialogueStage__Bp_DialogueStage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABp_DialogueStage_C, 0x0000);
		}

		// class UWidget_SelectQuestItem_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_SelectQuestItem__Widget_SelectQuestItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_SelectQuestItem_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_E_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_E__BP_RandomBuilding_4x4_Side2_E_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_E_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_N_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_N__BP_RandomBuilding_4x4_Side2_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_N_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_H_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_H__BP_RandomBuilding_4x4_Side1_H_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_H_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x8_Side1_D_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x8_Side1_D__BP_RandomBuilding_4x8_Side1_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x8_Side1_D_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_J_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_J__BP_RandomBuilding_4x4_Side1_J_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_J_C, 0x0000);
		}

		// class UMod_HuntersMark_Buff_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_HuntersMark_Buff__Mod_HuntersMark_Buff_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMod_HuntersMark_Buff_C, 0x0000);
		}

		// class AInteractive_LootContainer_C : public AInteractive_LootContainer_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_LootContainer__Interactive_LootContainer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_LootContainer_C, 0x0000);
		}

		// class UMod_HuntersMark_Aura_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_HuntersMark_Aura__Mod_HuntersMark_Aura_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMod_HuntersMark_Aura_C, 0x0000);
		}

		// class ABP_City_PlywoodTable_01a_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_PlywoodTable_01a__BP_City_PlywoodTable_01a_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_PlywoodTable_01a_C, 0x0000);
		}

		// class ABP_City_WoodCrate_Medium_01_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_WoodCrate_Medium_01__BP_City_WoodCrate_Medium_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_WoodCrate_Medium_01_C, 0x0000);
		}

		// class ABP_Blocker_Spline_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Blocker_Spline__BP_Blocker_Spline_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Blocker_Spline_C, 0x0000);
		}

		// class ABP_PhysicsActor_Fan_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Fan__BP_PhysicsActor_Fan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Fan_C, 0x0000);
		}

		// class ABP_PhysicsActor_PaintCan_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_PaintCan__BP_PhysicsActor_PaintCan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_PaintCan_C, 0x0000);
		}

		// class ABP_PhysicsActor_Spool_01a_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Spool_01a__BP_PhysicsActor_Spool_01a_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Spool_01a_C, 0x0000);
		}

		// class ABP_PhysicsActor_Tire_B_C : public ABP_PhysicsActor_Tire_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Tire_B__BP_PhysicsActor_Tire_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Tire_B_C, 0x0000);
		}

		// class ABP_PhysicsActor_Tire_C_C : public ABP_PhysicsActor_Tire_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Tire_C__BP_PhysicsActor_Tire_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Tire_C_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_HiveCannon_C : public AImpactEffect_Projectile_Bullet_Single_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_HiveCannon__ImpactEffect_Projectile_Bullet_HiveCannon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_HiveCannon_C, 0x0000);
		}

		// class AWeapon_LongGun_Base_C : public AWeapon_Gun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_LongGun_Base__Weapon_LongGun_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_LongGun_Base_C, 0x0000);
		}

		// class AWeapon_HandGun_Base_C : public AWeapon_Gun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_HandGun_Base__Weapon_HandGun_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_HandGun_Base_C, 0x0000);
		}

		// class UCamera_Vault_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Vault__Camera_Vault_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Vault_C, 0x0000);
		}

		// class UWidget_MiniMap_Tile_C : public URemnantMiniMapWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_Tile__Widget_MiniMap_Tile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_Tile_C, 0x0000);
		}

		// class ABP_PhysicsActor_Tire_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Tire__BP_PhysicsActor_Tire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Tire_C, 0x0000);
		}

		// class UWidget_DialogueOption_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_DialogueOption__Widget_DialogueOption_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_DialogueOption_C, 0x0000);
		}

		// class UWidget_InventoryNotification_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InventoryNotification__Widget_InventoryNotification_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InventoryNotification_C, 0x0000);
		}

		// class UWidget_ZoneEntering_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ZoneEntering__Widget_ZoneEntering_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ZoneEntering_C, 0x0000);
		}

		// class UWidget_Hud_Survival_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Hud_Survival__Widget_Hud_Survival_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Hud_Survival_C, 0x0000);
		}

		// class ACharacter_RiftWalker_Clone_Male_C : public ACharacter_RiftWalker_Clone_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Character_RiftWalker_Clone_Male__Character_RiftWalker_Clone_Male_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_RiftWalker_Clone_Male_C, 0x0000);
		}

		// class ACharacter_RiftWalker_Clone_Female_C : public ACharacter_RiftWalker_Clone_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Character_RiftWalker_Clone_Female__Character_RiftWalker_Clone_Female_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_RiftWalker_Clone_Female_C, 0x0000);
		}

		// class UChaosSolver : public UObject
		TEST_METHOD(Class__ChaosSolverEngine__ChaosSolver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChaosSolver, 0x0000);
		}

		// class AChaosSolverActor : public AActor
		TEST_METHOD(Class__ChaosSolverEngine__ChaosSolverActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AChaosSolverActor, 0x0000);
		}

		// class AGeometryCollectionActor : public AActor
		TEST_METHOD(Class__GeometryCollectionEngine__GeometryCollectionActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeometryCollectionActor, 0x0000);
		}

		// class UGeometryCollectionCache : public UObject
		TEST_METHOD(Class__GeometryCollectionEngine__GeometryCollectionCache)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCollectionCache, 0x0000);
		}

		// class UGeometryCollectionComponent : public UMeshComponent
		TEST_METHOD(Class__GeometryCollectionEngine__GeometryCollectionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCollectionComponent, 0x0000);
		}

		// class AGeometryCollectionDebugDrawActor : public AActor
		TEST_METHOD(Class__GeometryCollectionEngine__GeometryCollectionDebugDrawActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeometryCollectionDebugDrawActor, 0x0000);
		}

		// class UGeometryCollectionDebugDrawComponent : public UMeshComponent
		TEST_METHOD(Class__GeometryCollectionEngine__GeometryCollectionDebugDrawComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCollectionDebugDrawComponent, 0x0000);
		}

		// class UGeometryCollection : public UObject
		TEST_METHOD(Class__GeometryCollectionEngine__GeometryCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCollection, 0x0000);
		}

		// class AGeometryCollectionRenderLevelSetActor : public AActor
		TEST_METHOD(Class__GeometryCollectionEngine__GeometryCollectionRenderLevelSetActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeometryCollectionRenderLevelSetActor, 0x0000);
		}

		// class UStaticMeshSimulationComponent : public UActorComponent
		TEST_METHOD(Class__GeometryCollectionEngine__StaticMeshSimulationComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMeshSimulationComponent, 0x0000);
		}

		// class UBPI_TriggerObject_C : public UInterface
		TEST_METHOD(BlueprintGeneratedClass__BPI_TriggerObject__BPI_TriggerObject_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBPI_TriggerObject_C, 0x0000);
		}

		// class UAction_HealthReduction_SoulEmber_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_HealthReduction_SoulEmber__Action_HealthReduction_SoulEmber_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_HealthReduction_SoulEmber_C, 0x0000);
		}

		// class UWidget_InspectableHUD_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InspectableHUD__Widget_InspectableHUD_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InspectableHUD_C, 0x0000);
		}

		// class UWidget_QuestCompleteNotification_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestCompleteNotification__Widget_QuestCompleteNotification_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestCompleteNotification_C, 0x0000);
		}

		// class UWidget_FadeOut_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_FadeOut__Widget_FadeOut_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_FadeOut_C, 0x0000);
		}

		// class UNavArea_VaultOver_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_VaultOver__NavArea_VaultOver_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_VaultOver_C, 0x0000);
		}

		// class UWeaponProfile_Mod_RadioactiveVolley_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_RadioactiveVolley__WeaponProfile_Mod_RadioactiveVolley_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_RadioactiveVolley_C, 0x0000);
		}

		// class ACharacter_Base_AIController_C : public AAIControllerGunfire
		TEST_METHOD(BlueprintGeneratedClass__Character_Base_AIController__Character_Base_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Base_AIController_C, 0x0000);
		}

		// class UAction_Trinket_StormAmulet_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Trinket_StormAmulet__Action_Trinket_StormAmulet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Trinket_StormAmulet_C, 0x0000);
		}

		// class UPlayStateEffect_Dialog_C : public UPlayStateEffect
		TEST_METHOD(BlueprintGeneratedClass__PlayStateEffect_Dialog__PlayStateEffect_Dialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_Dialog_C, 0x0000);
		}

		// class UAction_AOE_Mod_Seeker_C : public UAction_AOE_ForceImpulse_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_Seeker__Action_AOE_Mod_Seeker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_Seeker_C, 0x0000);
		}

		// class UOverlays : public UObject
		TEST_METHOD(Class__Overlay__Overlays)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOverlays, 0x0000);
		}

		// class UBasicOverlays : public UOverlays
		TEST_METHOD(Class__Overlay__BasicOverlays)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBasicOverlays, 0x0000);
		}

		// class ULocalizedOverlays : public UOverlays
		TEST_METHOD(Class__Overlay__LocalizedOverlays)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalizedOverlays, 0x0000);
		}

		// class ABP_Glass_A_Breakable_I_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_A_Breakable_I__BP_Glass_A_Breakable_I_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_A_Breakable_I_C, 0x0000);
		}

		// class ABP_City_Roadblock_B_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Roadblock_B_Breakable_A__BP_City_Roadblock_B_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Roadblock_B_Breakable_A_C, 0x0000);
		}

		// class UArmorSkill_Juggernaut_Action_DisplayStacks_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Juggernaut_Action_DisplayStacks__ArmorSkill_Juggernaut_Action_DisplayStacks_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Juggernaut_Action_DisplayStacks_C, 0x0000);
		}

		// class ABP_City_Roadblock_A_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Roadblock_A_Breakable_A__BP_City_Roadblock_A_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Roadblock_A_Breakable_A_C, 0x0000);
		}

		// class ADialog_NetWait_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_NetWait__Dialog_NetWait_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_NetWait_C, 0x0000);
		}

		// class UWidget_Notifications_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Notifications__Widget_Notifications_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Notifications_C, 0x0000);
		}

		// class ABP_PhysicsActor_Bucket_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Bucket__BP_PhysicsActor_Bucket_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Bucket_C, 0x0000);
		}

		// class ACharacter_Swamp_Wisp_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_Wisp_AIController__Character_Swamp_Wisp_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_Wisp_AIController_C, 0x0000);
		}

		// class ACharacter_Wasteland_Hound_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Hound_AIController__Character_Wasteland_Hound_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_Hound_AIController_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blunt_Stone_Small_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blunt_Stone_Small__ImpactEffect_Weapon_Blunt_Stone_Small_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blunt_Stone_Small_C, 0x0000);
		}

		// class ADialog_OkDialogAlt_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_OkDialogAlt__Dialog_OkDialogAlt_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_OkDialogAlt_C, 0x0000);
		}

		// class ADialog_Radial_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Radial__Dialog_Radial_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Radial_C, 0x0000);
		}

		// class ADialog_WorldMenu_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_WorldMenu__Dialog_WorldMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_WorldMenu_C, 0x0000);
		}

		// class ABP_Item_C : public AItem
		TEST_METHOD(BlueprintGeneratedClass__BP_Item__BP_Item_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Item_C, 0x0000);
		}

		// class UBP_LODFilter_City_C : public ULODVolumeFilter
		TEST_METHOD(BlueprintGeneratedClass__BP_LODFilter_City__BP_LODFilter_City_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_LODFilter_City_C, 0x0000);
		}

		// class UWidget_ResolutionUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ResolutionUserSetting__Widget_ResolutionUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ResolutionUserSetting_C, 0x0000);
		}

		// class ADialog_KeepSettings_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_KeepSettings__Dialog_KeepSettings_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_KeepSettings_C, 0x0000);
		}

		// class ADialog_InputConflictDialog_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_InputConflictDialog__Dialog_InputConflictDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_InputConflictDialog_C, 0x0000);
		}

		// class UItemType_LongGun_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_LongGun__ItemType_LongGun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_LongGun_C, 0x0000);
		}

		// class UItemType_Legs_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Legs__ItemType_Legs_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Legs_C, 0x0000);
		}

		// class UWeaponProfile_EyeOfTheStorm_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_EyeOfTheStorm__WeaponProfile_EyeOfTheStorm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_EyeOfTheStorm_C, 0x0000);
		}

		// class UWidget_MiniMap_Ping_C : public URemnantMiniMapWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_Ping__Widget_MiniMap_Ping_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_Ping_C, 0x0000);
		}

		// class UWidget_AdvancedStats_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_AdvancedStats__Widget_AdvancedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_AdvancedStats_C, 0x0000);
		}

		// class ASpawnPoint_AmbientSpawn_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_AmbientSpawn__SpawnPoint_AmbientSpawn_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_AmbientSpawn_C, 0x0000);
		}

		// class ABP_PhysicsActor_Lube_A_C : public ABP_PhysicsActor_GasCan_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Lube_A__BP_PhysicsActor_Lube_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Lube_A_C, 0x0000);
		}

		// class UWidget_Inventory_SkinList_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Inventory_SkinList__Widget_Inventory_SkinList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Inventory_SkinList_C, 0x0000);
		}

		// class AQuest_Fuse_C : public ABP_Quest_Item_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Fuse__Quest_Fuse_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Fuse_C, 0x0000);
		}

		// class AAmmo_Base_C : public ABP_Item_C
		TEST_METHOD(BlueprintGeneratedClass__Ammo_Base__Ammo_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmmo_Base_C, 0x0000);
		}

		// class ABP_Projectile_GroundTarget_Base_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile_GroundTarget_Base__BP_Projectile_GroundTarget_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_GroundTarget_Base_C, 0x0000);
		}

		// class ASpawnPoint_Emerge_Ground_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Emerge_Ground__SpawnPoint_Emerge_Ground_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Emerge_Ground_C, 0x0000);
		}

		// class ASpawnPoint_PlantOutside_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_PlantOutside__SpawnPoint_PlantOutside_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_PlantOutside_C, 0x0000);
		}

		// class UWidget_KeyInput_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_KeyInput__Widget_KeyInput_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_KeyInput_C, 0x0000);
		}

		// class AInteractive_ArmorRack_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_ArmorRack__Interactive_ArmorRack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_ArmorRack_C, 0x0000);
		}

		// class ABP_QuestTrigger_C : public AQuestTrigger
		TEST_METHOD(BlueprintGeneratedClass__BP_QuestTrigger__BP_QuestTrigger_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_QuestTrigger_C, 0x0000);
		}

		// class ABP_PhysicsActor_Boot_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Boot__BP_PhysicsActor_Boot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Boot_C, 0x0000);
		}

		// class UWidget_ItemStatMiniHorizontal_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatMiniHorizontal__Widget_ItemStatMiniHorizontal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatMiniHorizontal_C, 0x0000);
		}

		// class UWidget_ItemStatPrimary_ROF_C : public UWidget_ItemStatPrimary_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatPrimary_ROF__Widget_ItemStatPrimary_ROF_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatPrimary_ROF_C, 0x0000);
		}

		// class UCamera_GoodBoy_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_GoodBoy__Camera_GoodBoy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_GoodBoy_C, 0x0000);
		}

		// class UAction_Mod_GravityCoreShot_AOE_C : public UAction_AOE_ForceImpulse_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_GravityCoreShot_AOE__Action_Mod_GravityCoreShot_AOE_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_GravityCoreShot_AOE_C, 0x0000);
		}

		// class UWidget_OptionsLanguage_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_OptionsLanguage__Widget_OptionsLanguage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_OptionsLanguage_C, 0x0000);
		}

		// class ATracer_Ruin_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Ruin__Tracer_Ruin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Ruin_C, 0x0000);
		}

		// class UWidget_LanguageUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_LanguageUserSetting__Widget_LanguageUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_LanguageUserSetting_C, 0x0000);
		}

		// class UWidget_ControllerDiagram_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ControllerDiagram__Widget_ControllerDiagram_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ControllerDiagram_C, 0x0000);
		}

		// class UWidget_OptionsList_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_OptionsList__Widget_OptionsList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_OptionsList_C, 0x0000);
		}

		// class UAward_Armor_Legs_Akari_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Akari_Skin__Award_Armor_Legs_Akari_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Akari_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Scavenger_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Scavenger_Skin__Award_Armor_Head_Scavenger_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Scavenger_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Leto_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Leto_Skin__Award_Armor_Head_Leto_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Leto_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Hunter_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Hunter_Skin__Award_Armor_Head_Hunter_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Hunter_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Drifter_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Drifter_Skin__Award_Armor_Head_Drifter_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Drifter_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Carapace_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Carapace_Skin__Award_Armor_Head_Carapace_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Carapace_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Leto_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Leto_Skin__Award_Armor_Body_Leto_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Leto_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Labyrinth_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Labyrinth_Skin__Award_Armor_Body_Labyrinth_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Labyrinth_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Bandit_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Bandit_Skin__Award_Armor_Body_Bandit_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Bandit_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Akari_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Akari_Skin__Award_Armor_Body_Akari_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Akari_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Hunter_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Hunter_Skin__Award_Armor_Legs_Hunter_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Hunter_Skin_C, 0x0000);
		}

		// class UWidget_CheckpointOption_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_CheckpointOption__Widget_CheckpointOption_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_CheckpointOption_C, 0x0000);
		}

		// class UWidget_BossHealthBars_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BossHealthBars__Widget_BossHealthBars_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BossHealthBars_C, 0x0000);
		}

		// class ARemnantRangedWeaponMod_C : public ARemnantWeaponMod
		TEST_METHOD(BlueprintGeneratedClass__RemnantRangedWeaponMod__RemnantRangedWeaponMod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantRangedWeaponMod_C, 0x0000);
		}

		// class AResource_Pan_TempestHeartString_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_TempestHeartString__Resource_Pan_TempestHeartString_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_TempestHeartString_C, 0x0000);
		}

		// class AResource_Atoll_DreamersMana_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Atoll_DreamersMana__Resource_Atoll_DreamersMana_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Atoll_DreamersMana_C, 0x0000);
		}

		// class ABP_DreamerEventRegionBarrier_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_DreamerEventRegionBarrier__BP_DreamerEventRegionBarrier_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_DreamerEventRegionBarrier_C, 0x0000);
		}

		// class ABP_WaterDrips_Strip_01_C : public ABP_WaterDrips_01_C
		TEST_METHOD(BlueprintGeneratedClass__BP_WaterDrips_Strip_01__BP_WaterDrips_Strip_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_WaterDrips_Strip_01_C, 0x0000);
		}

		// class AQuest_Campaign_Ward13_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Campaign_Ward13__Quest_Campaign_Ward13_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Campaign_Ward13_C, 0x0000);
		}

		// class URole_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Role__Role_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URole_C, 0x0000);
		}

		// class UEventTreeNode_Fade_C : public UEventTreeNode
		TEST_METHOD(BlueprintGeneratedClass__EventTreeNode_Fade__EventTreeNode_Fade_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_Fade_C, 0x0000);
		}

		// class ACharacter_Swamp_SlimeHulk_Tentacle_Wave_C : public ACharacterGunfire
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_SlimeHulk_Tentacle_Wave__Character_Swamp_SlimeHulk_Tentacle_Wave_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_SlimeHulk_Tentacle_Wave_C, 0x0000);
		}

		// class ABP_Water_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Water__BP_Water_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Water_C, 0x0000);
		}

		// class ACharacter_Swamp_SlimeHulk_Projectile_C : public ABP_Projectile_Stick_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_SlimeHulk_Projectile__Character_Swamp_SlimeHulk_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_SlimeHulk_Projectile_C, 0x0000);
		}

		// class UTrait_Catalyst_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Catalyst__Trait_Catalyst_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Catalyst_C, 0x0000);
		}

		// class ABP_Swamp_Fatty_HidingPot_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Swamp_Fatty_HidingPot__BP_Swamp_Fatty_HidingPot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Swamp_Fatty_HidingPot_C, 0x0000);
		}

		// class UTrait_Glutton_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Glutton__Trait_Glutton_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Glutton_C, 0x0000);
		}

		// class UEmote_Give_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Give__Emote_Give_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Give_C, 0x0000);
		}

		// class ABP_TotemFather_Switch_C : public ADamageableActor
		TEST_METHOD(BlueprintGeneratedClass__BP_TotemFather_Switch__BP_TotemFather_Switch_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_TotemFather_Switch_C, 0x0000);
		}

		// class AQuest_Event_KeepersRing_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_KeepersRing__Quest_Event_KeepersRing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_KeepersRing_C, 0x0000);
		}

		// class UZoneDef_Jungle_Village01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Jungle_Village01__ZoneDef_Jungle_Village01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Jungle_Village01_C, 0x0000);
		}

		// class AInteractive_Bell_Handler_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Bell_Handler__Interactive_Bell_Handler_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Bell_Handler_C, 0x0000);
		}

		// class AQuest_Siege_TheRisen_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Siege_TheRisen__Quest_Siege_TheRisen_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Siege_TheRisen_C, 0x0000);
		}

		// class UAction_Debuff_CleanRoom_C : public UAction_DOT_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_CleanRoom__Action_Debuff_CleanRoom_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_CleanRoom_C, 0x0000);
		}

		// class AQuest_MiniBoss_Sentinel_C : public AQuest_Dungeon_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_MiniBoss_Sentinel__Quest_MiniBoss_Sentinel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_MiniBoss_Sentinel_C, 0x0000);
		}

		// class UEventTreeNode_ForcePlayerIntoEventRegion_C : public UEventTreeNode
		TEST_METHOD(BlueprintGeneratedClass__EventTreeNode_ForcePlayerIntoEventRegion__EventTreeNode_ForcePlayerIntoEventRegion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_ForcePlayerIntoEventRegion_C, 0x0000);
		}

		// class UTrait_WorldWalker_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_WorldWalker__Trait_WorldWalker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_WorldWalker_C, 0x0000);
		}

		// class UZoneDef_Wasteland_Overworld01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Wasteland_Overworld01__ZoneDef_Wasteland_Overworld01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Wasteland_Overworld01_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_L_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_L__BP_RandomBuilding_4x4_Side1_L_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_L_C, 0x0000);
		}

		// class ABP_PhysicsActor_Folder_01_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Folder_01__BP_PhysicsActor_Folder_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Folder_01_C, 0x0000);
		}

		// class ABP_BurningBarrel_A_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_BurningBarrel_A__BP_BurningBarrel_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BurningBarrel_A_C, 0x0000);
		}

		// class ABP_PhysicsActor_Toolbox_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Toolbox__BP_PhysicsActor_Toolbox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Toolbox_C, 0x0000);
		}

		// class ABP_PhysicsActor_GasContainer_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_GasContainer__BP_PhysicsActor_GasContainer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_GasContainer_C, 0x0000);
		}

		// class ABP_PhysicsActor_Book_06_C : public ABP_PhysicsActor_Book_01_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Book_06__BP_PhysicsActor_Book_06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Book_06_C, 0x0000);
		}

		// class ABP_PhysicsActor_Ashtray_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Ashtray__BP_PhysicsActor_Ashtray_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Ashtray_C, 0x0000);
		}

		// class ABP_City_Market_Rack_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Market_Rack_A__BP_City_Market_Rack_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Market_Rack_A_C, 0x0000);
		}

		// class ASpawnPoint_Item_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Item__SpawnPoint_Item_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Item_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_28__City_Street_VISTA_03_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C_C, 0x0000);
		}

		// class UAIPOIType_ChampPatrol_C : public UAIPOIType
		TEST_METHOD(BlueprintGeneratedClass__AIPOIType_ChampPatrol__AIPOIType_ChampPatrol_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPOIType_ChampPatrol_C, 0x0000);
		}

		// class UAction_Root_Bomb_AoE_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Root_Bomb_AoE__Action_Root_Bomb_AoE_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Root_Bomb_AoE_C, 0x0000);
		}

		// class UJsonUtilitiesDummyObject : public UObject
		TEST_METHOD(Class__JsonUtilities__JsonUtilitiesDummyObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UJsonUtilitiesDummyObject, 0x0000);
		}

		// class UAction_Character_Wasteland_Sentinel_Damage_C : public UAction_Character_Root_Screamer_Damage_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Wasteland_Sentinel_Damage__Action_Character_Wasteland_Sentinel_Damage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Wasteland_Sentinel_Damage_C, 0x0000);
		}

		// class AResource_City_ShrapnelShard_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_ShrapnelShard__Resource_City_ShrapnelShard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_ShrapnelShard_C, 0x0000);
		}

		// class AResource_City_Shadewood_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_Shadewood__Resource_City_Shadewood_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_Shadewood_C, 0x0000);
		}

		// class AWeapon_Wasteland_Ruin_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Wasteland_Ruin__Weapon_Wasteland_Ruin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Wasteland_Ruin_C, 0x0000);
		}

		// class UDamageType_Explosion_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion__DamageType_Explosion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_C, 0x0000);
		}

		// class UDamageClass_Ranged_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Ranged__DamageClass_Ranged_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Ranged_C, 0x0000);
		}

		// class UAward_Armor_Legs_Cultist_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Cultist_Skin_PreOrder__Award_Armor_Legs_Cultist_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Cultist_Skin_PreOrder_C, 0x0000);
		}

		// class UAward_Armor_Head_Scrapper_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Scrapper_Skin_PreOrder__Award_Armor_Head_Scrapper_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Scrapper_Skin_PreOrder_C, 0x0000);
		}

		// class UAward_Armor_Body_Hunter_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Hunter_Skin_PreOrder__Award_Armor_Body_Hunter_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Hunter_Skin_PreOrder_C, 0x0000);
		}

		// class AArmor_Body_Nude_C : public AArmor_Body_Default_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Nude__Armor_Body_Nude_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Nude_C, 0x0000);
		}

		// class AArmor_Body_Adventurer_C : public AArmor_Body_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Adventurer__Armor_Body_Adventurer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Adventurer_C, 0x0000);
		}

		// class UWeapon_RepeaterPistol_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_RepeaterPistol_AnimsBP__Weapon_RepeaterPistol_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_RepeaterPistol_AnimsBP_C, 0x0000);
		}

		// class UDamageClass_Shock_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Shock__DamageClass_Shock_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Shock_C, 0x0000);
		}

		// class UWeaponProfile_Shotgun_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Shotgun__WeaponProfile_Shotgun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Shotgun_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blunt_Stone_Medium_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blunt_Stone_Medium__ImpactEffect_Weapon_Blunt_Stone_Medium_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blunt_Stone_Medium_C, 0x0000);
		}

		// class UAction_Debuff_Corrosive_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Corrosive__Action_Debuff_Corrosive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Corrosive_C, 0x0000);
		}

		// class UAction_DOT_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_DOT__Action_DOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_DOT_C, 0x0000);
		}

		// class UDamageType_Melee_Bleed_Power_01_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Bleed_Power_01__DamageType_Melee_Bleed_Power_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Bleed_Power_01_C, 0x0000);
		}

		// class UCameraShake_GravityCore_Pull_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_GravityCore_Pull__CameraShake_GravityCore_Pull_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_GravityCore_Pull_C, 0x0000);
		}

		// class UAction_Wasteland_Stalker_Interactive_Damage_Kill_C : public UAction_Interactive_Damage_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Wasteland_Stalker_Interactive_Damage_Kill__Action_Wasteland_Stalker_Interactive_Damage_Kill_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Wasteland_Stalker_Interactive_Damage_Kill_C, 0x0000);
		}

		// class UTrait_Teamwork_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Teamwork__Trait_Teamwork_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Teamwork_C, 0x0000);
		}

		// class UBP_RemnantPingManager_C : public URemnantPingManager
		TEST_METHOD(BlueprintGeneratedClass__BP_RemnantPingManager__BP_RemnantPingManager_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_RemnantPingManager_C, 0x0000);
		}

		// class UTrait_Scavenger_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Scavenger__Trait_Scavenger_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Scavenger_C, 0x0000);
		}

		// class UTrait_RapidStrike_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_RapidStrike__Trait_RapidStrike_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_RapidStrike_C, 0x0000);
		}

		// class UDamageType_DOT_Root_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Root_FromPlayer_Mod__DamageType_DOT_Root_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Root_FromPlayer_Mod_C, 0x0000);
		}

		// class UAction_DFA_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_DFA__Action_DFA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_DFA_C, 0x0000);
		}

		// class UAction_Aura_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Aura__Action_Aura_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Aura_C, 0x0000);
		}

		// class UCharacter_Wasteland_Hound_TargetSelector_C : public UCharacter_Wasteland_Annointed_TargetSelector_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Hound_TargetSelector__Character_Wasteland_Hound_TargetSelector_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Wasteland_Hound_TargetSelector_C, 0x0000);
		}

		// class UAction_Mod_StormCaller_DFA_C : public UAction_DFA_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_StormCaller_DFA__Action_Mod_StormCaller_DFA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_StormCaller_DFA_C, 0x0000);
		}

		// class UDamageType_Ranged_Frost_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Frost__DamageType_Ranged_Frost_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Frost_C, 0x0000);
		}

		// class UDamageType_Fire_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Fire_Mod__DamageType_Fire_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Fire_Mod_C, 0x0000);
		}

		// class UWeaponProfile_Submachinegun_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Submachinegun__WeaponProfile_Submachinegun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Submachinegun_C, 0x0000);
		}

		// class AConsumable_HeavyWaterElixir_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_HeavyWaterElixir__Consumable_HeavyWaterElixir_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_HeavyWaterElixir_C, 0x0000);
		}

		// class AConsumable_EtherealOrb_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_EtherealOrb__Consumable_EtherealOrb_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_EtherealOrb_C, 0x0000);
		}

		// class ACharacter_Wasteland_Beckon_Minion_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Beckon_Minion_AIController__Character_Wasteland_Beckon_Minion_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_Beckon_Minion_AIController_C, 0x0000);
		}

		// class ACharacter_Wasteland_Skull_Base_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Skull_Base__Character_Wasteland_Skull_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_Skull_Base_C, 0x0000);
		}

		// class ATrinket_BrutalMark_C : public AItem_Trinket_TriggerOnEquip_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_BrutalMark__Trinket_BrutalMark_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_BrutalMark_C, 0x0000);
		}

		// class ABP_Cloud_Mod_FrozenMist_C : public ABP_Aura_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Cloud_Mod_FrozenMist__BP_Cloud_Mod_FrozenMist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Cloud_Mod_FrozenMist_C, 0x0000);
		}

		// class AArmor_Body_Base_C : public AItem_Armor_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Base__Armor_Body_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Base_C, 0x0000);
		}

		// class AArmor_Body_Default_C : public AArmor_Body_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Default__Armor_Body_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Default_C, 0x0000);
		}

		// class AWeapon_Pan_EyeOfTheStorm_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Pan_EyeOfTheStorm__Weapon_Pan_EyeOfTheStorm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Pan_EyeOfTheStorm_C, 0x0000);
		}

		// class AWeapon_Snow_Alternator_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Snow_Alternator__Weapon_Snow_Alternator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Snow_Alternator_C, 0x0000);
		}

		// class AWeapon_Root_Smolder_C : public AWeapon_Sword_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Root_Smolder__Weapon_Root_Smolder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Root_Smolder_C, 0x0000);
		}

		// class AMod_Beckon_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Beckon__Mod_Beckon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Beckon_C, 0x0000);
		}

		// class AResource_Swamp_SwarmTusk_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_SwarmTusk__Resource_Swamp_SwarmTusk_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_SwarmTusk_C, 0x0000);
		}

		// class AResource_Swamp_BarbedSinew_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_BarbedSinew__Resource_Swamp_BarbedSinew_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_BarbedSinew_C, 0x0000);
		}

		// class AResource_Snow_GlacialScepter_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Snow_GlacialScepter__Resource_Snow_GlacialScepter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Snow_GlacialScepter_C, 0x0000);
		}

		// class AMod_FrozenMist_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_FrozenMist__Mod_FrozenMist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_FrozenMist_C, 0x0000);
		}

		// class AResource_Pan_BlinkSpearShard_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_BlinkSpearShard__Resource_Pan_BlinkSpearShard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_BlinkSpearShard_C, 0x0000);
		}

		// class ACharacter_Wasteland_Skull_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Skull_AIController__Character_Wasteland_Skull_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_Skull_AIController_C, 0x0000);
		}

		// class UInteractive_Fusebox_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Interactive_Fusebox_AnimBP__Interactive_Fusebox_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractive_Fusebox_AnimBP_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Mod_TentacleShot_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Mod_TentacleShot__ImpactEffect_Projectile_Mod_TentacleShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Mod_TentacleShot_C, 0x0000);
		}

		// class UWidget_ItemStatCustomLeft_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatCustomLeft__Widget_ItemStatCustomLeft_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatCustomLeft_C, 0x0000);
		}

		// class UAction_HealOverTime_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_HealOverTime__Action_HealOverTime_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_HealOverTime_C, 0x0000);
		}

		// class AInteractive_City_BacktrackDoor_C : public AInteractive_Door_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_City_BacktrackDoor__Interactive_City_BacktrackDoor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_City_BacktrackDoor_C, 0x0000);
		}

		// class ABP_PhysicsActor_GasCan_C_C : public ABP_PhysicsActor_GasCan_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_GasCan_C__BP_PhysicsActor_GasCan_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_GasCan_C_C, 0x0000);
		}

		// class ABP_PhysicsActor_Lube_C_C : public ABP_PhysicsActor_Lube_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Lube_C__BP_PhysicsActor_Lube_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Lube_C_C, 0x0000);
		}

		// class UCamera_Sit_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Sit__Camera_Sit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Sit_C, 0x0000);
		}

		// class UCamera_Mod_Burst_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Mod_Burst__Camera_Mod_Burst_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Mod_Burst_C, 0x0000);
		}

		// class UCamera_Emote_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Emote__Camera_Emote_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Emote_C, 0x0000);
		}

		// class UCamera_Dead_Detached_Fixed_C : public UStationarySpectatorCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Dead_Detached_Fixed__Camera_Dead_Detached_Fixed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Dead_Detached_Fixed_C, 0x0000);
		}

		// class UCamera_Dead_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Dead__Camera_Dead_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Dead_C, 0x0000);
		}

		// class UCamera_Crouch_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Crouch__Camera_Crouch_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Crouch_C, 0x0000);
		}

		// class UItemType_AmmoBox_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_AmmoBox__ItemType_AmmoBox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_AmmoBox_C, 0x0000);
		}

		// class ABP_VeilOfTheBlackTear_Shield_C : public ABP_BreakableActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_VeilOfTheBlackTear_Shield__BP_VeilOfTheBlackTear_Shield_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_VeilOfTheBlackTear_Shield_C, 0x0000);
		}

		// class UWidget_MiniMap_Overview_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_Overview__Widget_MiniMap_Overview_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_Overview_C, 0x0000);
		}

		// class UPlayStateEffect_LoadingScreen_C : public UPlayStateEffect
		TEST_METHOD(BlueprintGeneratedClass__PlayStateEffect_LoadingScreen__PlayStateEffect_LoadingScreen_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_LoadingScreen_C, 0x0000);
		}

		// class UFaction_NPC_C : public UFaction
		TEST_METHOD(BlueprintGeneratedClass__Faction_NPC__Faction_NPC_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaction_NPC_C, 0x0000);
		}

		// class AImpactEffect_Weapon_COJ_C : public AImpactEffect_Weapon_Blade_Metal_Large_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_COJ__ImpactEffect_Weapon_COJ_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_COJ_C, 0x0000);
		}

		// class UWeaponProfile_Mod_HiveShot_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_HiveShot__WeaponProfile_Mod_HiveShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_HiveShot_C, 0x0000);
		}

		// class UWeaponProfile_Spitfire_Primary_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Spitfire_Primary__WeaponProfile_Spitfire_Primary_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Spitfire_Primary_C, 0x0000);
		}

		// class ACharacter_Wasteland_IronSentinel_Turret_C : public AAICharacter
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_IronSentinel_Turret__Character_Wasteland_IronSentinel_Turret_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_IronSentinel_Turret_C, 0x0000);
		}

		// class ASpawnPoint_Campfire_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Campfire__SpawnPoint_Campfire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Campfire_C, 0x0000);
		}

		// class UAction_Consumable_EtherealOrb_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_EtherealOrb__Action_Consumable_EtherealOrb_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_EtherealOrb_C, 0x0000);
		}

		// class UAction_List_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_list__Action_List_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_List_C, 0x0000);
		}

		// class AInteractive_ZoneDoor_Generic_C : public AInteractive_ZoneDoor_Default_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_ZoneDoor_Generic__Interactive_ZoneDoor_Generic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_ZoneDoor_Generic_C, 0x0000);
		}

		// class ABP_PhysicsActor_LunchBox_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_LunchBox__BP_PhysicsActor_LunchBox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_LunchBox_C, 0x0000);
		}

		// class UAction_Fire_Projectile_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Fire_Projectile__Action_Fire_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Fire_Projectile_C, 0x0000);
		}

		// class UCamera_Crouch_Aim_Extend_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Crouch_Aim_Extend__Camera_Crouch_Aim_Extend_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Crouch_Aim_Extend_C, 0x0000);
		}

		// class AInteractive_ZoneDoor_Manhole_C : public AInteractive_ZoneDoor_Default_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_ZoneDoor_Manhole__Interactive_ZoneDoor_Manhole_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_ZoneDoor_Manhole_C, 0x0000);
		}

		// class ABP_OfficeRetro_Chair_B_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_OfficeRetro_Chair_B_Breakable_A__BP_OfficeRetro_Chair_B_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_OfficeRetro_Chair_B_Breakable_A_C, 0x0000);
		}

		// class UBPI_ModMinion_C : public UInterface
		TEST_METHOD(BlueprintGeneratedClass__BPI_ModMinion__BPI_ModMinion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBPI_ModMinion_C, 0x0000);
		}

		// class AResource_Rare_GalvanizedIron_C : public AResource_Material_Iron_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Rare_GalvanizedIron__Resource_Rare_GalvanizedIron_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Rare_GalvanizedIron_C, 0x0000);
		}

		// class AResource_Wasteland_HoundChoker_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_HoundChoker__Resource_Wasteland_HoundChoker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_HoundChoker_C, 0x0000);
		}

		// class ASpawnPoint_Emerge_Airduct_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Emerge_Airduct__SpawnPoint_Emerge_Airduct_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Emerge_Airduct_C, 0x0000);
		}

		// class AInteractive_TeleportLocation_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_TeleportLocation__Interactive_TeleportLocation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_TeleportLocation_C, 0x0000);
		}

		// class UItemType_ArmorMod_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_ArmorMod__ItemType_ArmorMod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_ArmorMod_C, 0x0000);
		}

		// class UDamageType_Explosion_Power_02_FromPlayer_Summon_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Power_02_FromPlayer_Summon__DamageType_Explosion_Power_02_FromPlayer_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Power_02_FromPlayer_Summon_C, 0x0000);
		}

		// class UWeapon_Wasteland_ParticleAccelerator_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Wasteland_ParticleAccelerator_AnimsBP__Weapon_Wasteland_ParticleAccelerator_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Wasteland_ParticleAccelerator_AnimsBP_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blunt_Stone_Large_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blunt_Stone_Large__ImpactEffect_Weapon_Blunt_Stone_Large_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blunt_Stone_Large_C, 0x0000);
		}

		// class UTutorial_CheckpointTown_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_CheckpointTown__Tutorial_CheckpointTown_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_CheckpointTown_C, 0x0000);
		}

		// class AWeapon_RepeaterPistol_C : public AWeapon_HandGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_RepeaterPistol__Weapon_RepeaterPistol_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_RepeaterPistol_C, 0x0000);
		}

		// class UAction_Character_Root_Priest_ApplyShield_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Priest_ApplyShield__Action_Character_Root_Priest_ApplyShield_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Priest_ApplyShield_C, 0x0000);
		}

		// class UAction_Mod_SongOfSwords_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_SongOfSwords__Action_Mod_SongOfSwords_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_SongOfSwords_C, 0x0000);
		}

		// class UCameraShake_Heavy_Short_Full_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Heavy_Short_Full__CameraShake_Heavy_Short_Full_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Heavy_Short_Full_C, 0x0000);
		}

		// class UDamageType_DOT_Radiation_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Radiation__DamageType_DOT_Radiation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Radiation_C, 0x0000);
		}

		// class ABP_PhysicsActor_GasCan_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_GasCan__BP_PhysicsActor_GasCan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_GasCan_C, 0x0000);
		}

		// class ABP_PhysicsActor_PropaneTank_C_C : public ABP_PhysicsActor_PropaneTank_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_PropaneTank_C__BP_PhysicsActor_PropaneTank_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_PropaneTank_C_C, 0x0000);
		}

		// class ABP_PhysicsActor_FileHolder_A_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_FileHolder_A__BP_PhysicsActor_FileHolder_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_FileHolder_A_C, 0x0000);
		}

		// class ABP_PhysicsActor_Telephone_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Telephone__BP_PhysicsActor_Telephone_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Telephone_C, 0x0000);
		}

		// class UDmgTypeBP_Environmental_C : public UDamageType
		TEST_METHOD(BlueprintGeneratedClass__DmgTypeBP_Environmental__DmgTypeBP_Environmental_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDmgTypeBP_Environmental_C, 0x0000);
		}

		// class UFaction_Neutral_C : public UFaction
		TEST_METHOD(BlueprintGeneratedClass__Faction_Neutral__Faction_Neutral_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaction_Neutral_C, 0x0000);
		}

		// class ADialog_BuySellConfirm_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_BuySellConfirm__Dialog_BuySellConfirm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_BuySellConfirm_C, 0x0000);
		}

		// class UCombatClass_Swarm_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_Swarm__CombatClass_Swarm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_Swarm_C, 0x0000);
		}

		// class UBPI_Cryptolith_C : public UInterface
		TEST_METHOD(BlueprintGeneratedClass__BPI_Cryptolith__BPI_Cryptolith_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBPI_Cryptolith_C, 0x0000);
		}

		// class UAward_Trinket_BrightSteelRing_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Trinket_BrightSteelRing__Award_Trinket_BrightSteelRing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Trinket_BrightSteelRing_C, 0x0000);
		}

		// class UAward_Armor_Legs_Twisted_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Twisted_Skin__Award_Armor_Legs_Twisted_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Twisted_Skin_C, 0x0000);
		}

		// class UTrait_Swiftness_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Swiftness__Trait_Swiftness_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Swiftness_C, 0x0000);
		}

		// class AQuest_Event_Simulacrum_Wasteland_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_Simulacrum_Wasteland__Quest_Event_Simulacrum_Wasteland_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_Simulacrum_Wasteland_C, 0x0000);
		}

		// class AQuest_Event_LeechEmber_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_LeechEmber__Quest_Event_LeechEmber_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_LeechEmber_C, 0x0000);
		}

		// class UBP_VocalRange_Dragon_Shout_C : public UDialogVocalRange
		TEST_METHOD(BlueprintGeneratedClass__BP_VocalRange_Dragon_Shout__BP_VocalRange_Dragon_Shout_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_VocalRange_Dragon_Shout_C, 0x0000);
		}

		// class UUndyingKing_Emote_Angry_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__UndyingKing_Emote_Angry__UndyingKing_Emote_Angry_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUndyingKing_Emote_Angry_C, 0x0000);
		}

		// class AQuest_LabyrinthTower_C : public AQuest_POI_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_LabyrinthTower__Quest_LabyrinthTower_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_LabyrinthTower_C, 0x0000);
		}

		// class AQuest_POI_Boss_C : public AQuest_POI_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_POI_Boss__Quest_POI_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_POI_Boss_C, 0x0000);
		}

		// class AQuest_Church_Shockwave_KillEnemies_C : public ABP_Shockwave_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Church_Shockwave_KillEnemies__Quest_Church_Shockwave_KillEnemies_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Church_Shockwave_KillEnemies_C, 0x0000);
		}

		// class UTrait_BarkSkin_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_BarkSkin__Trait_BarkSkin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_BarkSkin_C, 0x0000);
		}

		// class AQuest_SmallD_HuntersHideout_C : public AQuest_Dungeon_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_SmallD_HuntersHideout__Quest_SmallD_HuntersHideout_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_SmallD_HuntersHideout_C, 0x0000);
		}

		// class AQuest_SmallD_HuntersHideout_Key_C : public ABP_Quest_Item_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_SmallD_HuntersHideout_Key__Quest_SmallD_HuntersHideout_Key_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_SmallD_HuntersHideout_Key_C, 0x0000);
		}

		// class AQuest_Event_Simulacrum_City_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_Simulacrum_City__Quest_Event_Simulacrum_City_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_Simulacrum_City_C, 0x0000);
		}

		// class UEventTreeNode_TriggerNamedObjects_C : public UEventTreeNode
		TEST_METHOD(BlueprintGeneratedClass__EventTreeNode_TriggerNamedObjects__EventTreeNode_TriggerNamedObjects_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_TriggerNamedObjects_C, 0x0000);
		}

		// class UZoneDef_City_Subway_Medium_Broken_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_City_Subway_Medium_Broken__ZoneDef_City_Subway_Medium_Broken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_City_Subway_Medium_Broken_C, 0x0000);
		}

		// class AQuest_Event_MothersRing_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_MothersRing__Quest_Event_MothersRing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_MothersRing_C, 0x0000);
		}

		// class UZoneDef_City_ResourcesDefault_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_City_ResourcesDefault__ZoneDef_City_ResourcesDefault_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_City_ResourcesDefault_C, 0x0000);
		}

		// class AInteractive_Dragon_Crystal_Survival_C : public AInteractive_DragonCrystal_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Dragon_Crystal_Survival__Interactive_Dragon_Crystal_Survival_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Dragon_Crystal_Survival_C, 0x0000);
		}

		// class AInteractive_Campfire_C : public AInteractive_Checkpoint_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Campfire__Interactive_Campfire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Campfire_C, 0x0000);
		}

		// class AInteractive_Campfire_SpawnPoint_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Campfire_SpawnPoint__Interactive_Campfire_SpawnPoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Campfire_SpawnPoint_C, 0x0000);
		}

		// class AQuest_Base_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Base__Quest_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Base_C, 0x0000);
		}

		// class ABP_Inspectable_Recorder_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Inspectable_Recorder__BP_Inspectable_Recorder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Inspectable_Recorder_C, 0x0000);
		}

		// class UTrait_Exploiter_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Exploiter__Trait_Exploiter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Exploiter_C, 0x0000);
		}

		// class AArmor_Legs_Cultist_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Cultist_PreOrder__Armor_Legs_Cultist_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Cultist_PreOrder_C, 0x0000);
		}

		// class AQuest_Event_StoneOfBalance_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_StoneOfBalance__Quest_Event_StoneOfBalance_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_StoneOfBalance_C, 0x0000);
		}

		// class UCharacter_Boss_ComputedStats_C : public UCharacter_Base_ComputedStats_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Boss_ComputedStats__Character_Boss_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Boss_ComputedStats_C, 0x0000);
		}

		// class USpeaker_LabyrinthKeeper_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_LabyrinthKeeper__Speaker_LabyrinthKeeper_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_LabyrinthKeeper_C, 0x0000);
		}

		// class UEmote_Yes_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Yes__Emote_Yes_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Yes_C, 0x0000);
		}

		// class AQuest_Boss_RootDragon_C : public AQuest_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Boss_RootDragon__Quest_Boss_RootDragon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Boss_RootDragon_C, 0x0000);
		}

		// class UAchievementBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__OnlineSubsystemUtils__AchievementBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementBlueprintLibrary, 0x0000);
		}

		// class UAchievementQueryCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__AchievementQueryCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementQueryCallbackProxy, 0x0000);
		}

		// class UAchievementWriteCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__AchievementWriteCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementWriteCallbackProxy, 0x0000);
		}

		// class UConnectionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__ConnectionCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConnectionCallbackProxy, 0x0000);
		}

		// class UCreateSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__CreateSessionCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCreateSessionCallbackProxy, 0x0000);
		}

		// class UDestroySessionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__DestroySessionCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDestroySessionCallbackProxy, 0x0000);
		}

		// class UEndMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__EndMatchCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEndMatchCallbackProxy, 0x0000);
		}

		// class UEndTurnCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__EndTurnCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEndTurnCallbackProxy, 0x0000);
		}

		// class UFindSessionsCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__FindSessionsCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFindSessionsCallbackProxy, 0x0000);
		}

		// class UFindTurnBasedMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__FindTurnBasedMatchCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFindTurnBasedMatchCallbackProxy, 0x0000);
		}

		// class UInAppPurchaseCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__InAppPurchaseCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInAppPurchaseCallbackProxy, 0x0000);
		}

		// class UInAppPurchaseQueryCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__InAppPurchaseQueryCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInAppPurchaseQueryCallbackProxy, 0x0000);
		}

		// class UInAppPurchaseRestoreCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__InAppPurchaseRestoreCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInAppPurchaseRestoreCallbackProxy, 0x0000);
		}

		// class UIpConnection : public UNetConnection
		TEST_METHOD(Class__OnlineSubsystemUtils__IpConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIpConnection, 0x0000);
		}

		// class UIpNetDriver : public UNetDriver
		TEST_METHOD(Class__OnlineSubsystemUtils__IpNetDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIpNetDriver, 0x0000);
		}

		// class UJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__JoinSessionCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UJoinSessionCallbackProxy, 0x0000);
		}

		// class ULeaderboardBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__OnlineSubsystemUtils__LeaderboardBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULeaderboardBlueprintLibrary, 0x0000);
		}

		// class ULeaderboardFlushCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__LeaderboardFlushCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULeaderboardFlushCallbackProxy, 0x0000);
		}

		// class ULeaderboardQueryCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__LeaderboardQueryCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULeaderboardQueryCallbackProxy, 0x0000);
		}

		// class ULogoutCallbackProxy : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__OnlineSubsystemUtils__LogoutCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULogoutCallbackProxy, 0x0000);
		}

		// class AOnlineBeacon : public AActor
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeacon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeacon, 0x0000);
		}

		// class AOnlineBeaconClient : public AOnlineBeacon
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeaconClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeaconClient, 0x0000);
		}

		// class AOnlineBeaconHost : public AOnlineBeacon
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeaconHost)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeaconHost, 0x0000);
		}

		// class AOnlineBeaconHostObject : public AActor
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeaconHostObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeaconHostObject, 0x0000);
		}

		// class UOnlineEngineInterfaceImpl : public UOnlineEngineInterface
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineEngineInterfaceImpl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineEngineInterfaceImpl, 0x0000);
		}

		// class UOnlinePIESettings : public UDeveloperSettings
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlinePIESettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlinePIESettings, 0x0000);
		}

		// class UOnlineSessionClient : public UOnlineSession
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineSessionClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineSessionClient, 0x0000);
		}

		// class APartyBeaconClient : public AOnlineBeaconClient
		TEST_METHOD(Class__OnlineSubsystemUtils__PartyBeaconClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APartyBeaconClient, 0x0000);
		}

		// class APartyBeaconHost : public AOnlineBeaconHostObject
		TEST_METHOD(Class__OnlineSubsystemUtils__PartyBeaconHost)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APartyBeaconHost, 0x0000);
		}

		// class UPartyBeaconState : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__PartyBeaconState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPartyBeaconState, 0x0000);
		}

		// class UQuitMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__QuitMatchCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuitMatchCallbackProxy, 0x0000);
		}

		// class UShowLoginUICallbackProxy : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__OnlineSubsystemUtils__ShowLoginUICallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShowLoginUICallbackProxy, 0x0000);
		}

		// class ATestBeaconClient : public AOnlineBeaconClient
		TEST_METHOD(Class__OnlineSubsystemUtils__TestBeaconClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATestBeaconClient, 0x0000);
		}

		// class ATestBeaconHost : public AOnlineBeaconHostObject
		TEST_METHOD(Class__OnlineSubsystemUtils__TestBeaconHost)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATestBeaconHost, 0x0000);
		}

		// class UTurnBasedBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__OnlineSubsystemUtils__TurnBasedBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTurnBasedBlueprintLibrary, 0x0000);
		}

		// class UVoipListenerSynthComponent : public USynthComponent
		TEST_METHOD(Class__OnlineSubsystemUtils__VoipListenerSynthComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVoipListenerSynthComponent, 0x0000);
		}

		// class USynthComponent : public USceneComponent
		TEST_METHOD(Class__AudioMixer__SynthComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USynthComponent, 0x0000);
		}

		// class UAudioGenerator : public UObject
		TEST_METHOD(Class__AudioMixer__AudioGenerator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioGenerator, 0x0000);
		}

		// class UAudioMixerBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AudioMixer__AudioMixerBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioMixerBlueprintLibrary, 0x0000);
		}

		// class USubmixEffectDynamicsProcessorPreset : public USoundEffectSubmixPreset
		TEST_METHOD(Class__AudioMixer__SubmixEffectDynamicsProcessorPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubmixEffectDynamicsProcessorPreset, 0x0000);
		}

		// class USubmixEffectSubmixEQPreset : public USoundEffectSubmixPreset
		TEST_METHOD(Class__AudioMixer__SubmixEffectSubmixEQPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubmixEffectSubmixEQPreset, 0x0000);
		}

		// class USubmixEffectReverbPreset : public USoundEffectSubmixPreset
		TEST_METHOD(Class__AudioMixer__SubmixEffectReverbPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubmixEffectReverbPreset, 0x0000);
		}

		// class USubmixEffectReverbFastPreset : public USoundEffectSubmixPreset
		TEST_METHOD(Class__AudioMixer__SubmixEffectReverbFastPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubmixEffectReverbFastPreset, 0x0000);
		}

		// class USynthSound : public USoundWaveProcedural
		TEST_METHOD(Class__AudioMixer__SynthSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USynthSound, 0x0000);
		}

		// class UAnimationBudgetBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AnimationBudgetAllocator__AnimationBudgetBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationBudgetBlueprintLibrary, 0x0000);
		}

		// class USkeletalMeshComponentBudgeted : public USkeletalMeshComponent
		TEST_METHOD(Class__AnimationBudgetAllocator__SkeletalMeshComponentBudgeted)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshComponentBudgeted, 0x0000);
		}

		// class ACharacter_Root_Brute_Parent_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Brute_Parent__Character_Root_Brute_Parent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Brute_Parent_C, 0x0000);
		}

		// class UNavArea : public UNavAreaBase
		TEST_METHOD(Class__NavigationSystem__NavArea)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea, 0x0000);
		}

		// class ANavMeshBoundsVolume : public AVolume
		TEST_METHOD(Class__NavigationSystem__NavMeshBoundsVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavMeshBoundsVolume, 0x0000);
		}

		// class UNavigationSystemV1 : public UNavigationSystemBase
		TEST_METHOD(Class__NavigationSystem__NavigationSystemV1)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemV1, 0x0000);
		}

		// class UNavRelevantComponent : public UActorComponent
		TEST_METHOD(Class__NavigationSystem__NavRelevantComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavRelevantComponent, 0x0000);
		}

		// class UNavLinkCustomComponent : public UNavRelevantComponent
		TEST_METHOD(Class__NavigationSystem__NavLinkCustomComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkCustomComponent, 0x0000);
		}

		// class UNavigationQueryFilter : public UObject
		TEST_METHOD(Class__NavigationSystem__NavigationQueryFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationQueryFilter, 0x0000);
		}

		// class ANavigationData : public AActor
		TEST_METHOD(Class__NavigationSystem__NavigationData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationData, 0x0000);
		}

		// class AAbstractNavData : public ANavigationData
		TEST_METHOD(Class__NavigationSystem__AbstractNavData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAbstractNavData, 0x0000);
		}

		// class UCrowdManagerBase : public UObject
		TEST_METHOD(Class__NavigationSystem__CrowdManagerBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdManagerBase, 0x0000);
		}

		// class UNavArea_Default : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_Default)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Default, 0x0000);
		}

		// class UNavArea_LowHeight : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_LowHeight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_LowHeight, 0x0000);
		}

		// class UNavArea_Null : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_Null)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Null, 0x0000);
		}

		// class UNavArea_Obstacle : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_Obstacle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Obstacle, 0x0000);
		}

		// class UNavAreaMeta : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavAreaMeta)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAreaMeta, 0x0000);
		}

		// class UNavAreaMeta_SwitchByAgent : public UNavAreaMeta
		TEST_METHOD(Class__NavigationSystem__NavAreaMeta_SwitchByAgent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAreaMeta_SwitchByAgent, 0x0000);
		}

		// class UNavCollision : public UNavCollisionBase
		TEST_METHOD(Class__NavigationSystem__NavCollision)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavCollision, 0x0000);
		}

		// class ANavigationGraph : public ANavigationData
		TEST_METHOD(Class__NavigationSystem__NavigationGraph)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationGraph, 0x0000);
		}

		// class ANavigationGraphNode : public AActor
		TEST_METHOD(Class__NavigationSystem__NavigationGraphNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationGraphNode, 0x0000);
		}

		// class UNavigationGraphNodeComponent : public USceneComponent
		TEST_METHOD(Class__NavigationSystem__NavigationGraphNodeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationGraphNodeComponent, 0x0000);
		}

		// class UNavigationInvokerComponent : public UActorComponent
		TEST_METHOD(Class__NavigationSystem__NavigationInvokerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationInvokerComponent, 0x0000);
		}

		// class UNavigationPath : public UObject
		TEST_METHOD(Class__NavigationSystem__NavigationPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationPath, 0x0000);
		}

		// class UNavigationPathGenerator : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavigationPathGenerator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationPathGenerator, 0x0000);
		}

		// class UNavigationSystemModuleConfig : public UNavigationSystemConfig
		TEST_METHOD(Class__NavigationSystem__NavigationSystemModuleConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemModuleConfig, 0x0000);
		}

		// class ANavigationTestingActor : public AActor
		TEST_METHOD(Class__NavigationSystem__NavigationTestingActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationTestingActor, 0x0000);
		}

		// class UNavLinkComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavLinkComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkComponent, 0x0000);
		}

		// class UNavLinkCustomInterface : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavLinkCustomInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkCustomInterface, 0x0000);
		}

		// class UNavLinkHostInterface : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavLinkHostInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkHostInterface, 0x0000);
		}

		// class UNavLinkRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavLinkRenderingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkRenderingComponent, 0x0000);
		}

		// class UNavLinkTrivial : public UNavLinkDefinition
		TEST_METHOD(Class__NavigationSystem__NavLinkTrivial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkTrivial, 0x0000);
		}

		// class UNavMeshRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavMeshRenderingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavMeshRenderingComponent, 0x0000);
		}

		// class UNavModifierComponent : public UNavRelevantComponent
		TEST_METHOD(Class__NavigationSystem__NavModifierComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavModifierComponent, 0x0000);
		}

		// class ANavModifierVolume : public AVolume
		TEST_METHOD(Class__NavigationSystem__NavModifierVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavModifierVolume, 0x0000);
		}

		// class UNavNodeInterface : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavNodeInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavNodeInterface, 0x0000);
		}

		// class ANavSystemConfigOverride : public AActor
		TEST_METHOD(Class__NavigationSystem__NavSystemConfigOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavSystemConfigOverride, 0x0000);
		}

		// class UNavTestRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavTestRenderingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavTestRenderingComponent, 0x0000);
		}

		// class URecastFilter_UseDefaultArea : public UNavigationQueryFilter
		TEST_METHOD(Class__NavigationSystem__RecastFilter_UseDefaultArea)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URecastFilter_UseDefaultArea, 0x0000);
		}

		// class ARecastNavMesh : public ANavigationData
		TEST_METHOD(Class__NavigationSystem__RecastNavMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARecastNavMesh, 0x0000);
		}

		// class URecastNavMeshDataChunk : public UNavigationDataChunk
		TEST_METHOD(Class__NavigationSystem__RecastNavMeshDataChunk)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URecastNavMeshDataChunk, 0x0000);
		}

		// class ABP_Root_Wraith_Hellfire_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Root_Wraith_Hellfire__BP_Root_Wraith_Hellfire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Root_Wraith_Hellfire_C, 0x0000);
		}

		// class UVisual : public UObject
		TEST_METHOD(Class__UMG__Visual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisual, 0x0000);
		}

		// class UWidget : public UVisual
		TEST_METHOD(Class__UMG__Widget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget, 0x0000);
		}

		// class UUserWidget : public UWidget
		TEST_METHOD(Class__UMG__UserWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserWidget, 0x0000);
		}

		// class UWidgetComponent : public UMeshComponent
		TEST_METHOD(Class__UMG__WidgetComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetComponent, 0x0000);
		}

		// class UImage : public UWidget
		TEST_METHOD(Class__UMG__Image)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImage, 0x0000);
		}

		// class UPanelWidget : public UWidget
		TEST_METHOD(Class__UMG__PanelWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPanelWidget, 0x0000);
		}

		// class UCanvasPanel : public UPanelWidget
		TEST_METHOD(Class__UMG__CanvasPanel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvasPanel, 0x0000);
		}

		// class UPanelSlot : public UVisual
		TEST_METHOD(Class__UMG__PanelSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPanelSlot, 0x0000);
		}

		// class UContentWidget : public UPanelWidget
		TEST_METHOD(Class__UMG__ContentWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UContentWidget, 0x0000);
		}

		// class UCanvasPanelSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__CanvasPanelSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvasPanelSlot, 0x0000);
		}

		// class UAsyncTaskDownloadImage : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__UMG__AsyncTaskDownloadImage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncTaskDownloadImage, 0x0000);
		}

		// class UBackgroundBlur : public UContentWidget
		TEST_METHOD(Class__UMG__BackgroundBlur)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBackgroundBlur, 0x0000);
		}

		// class UBackgroundBlurSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__BackgroundBlurSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBackgroundBlurSlot, 0x0000);
		}

		// class UPropertyBinding : public UObject
		TEST_METHOD(Class__UMG__PropertyBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyBinding, 0x0000);
		}

		// class UBoolBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__BoolBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoolBinding, 0x0000);
		}

		// class UBorder : public UContentWidget
		TEST_METHOD(Class__UMG__Border)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBorder, 0x0000);
		}

		// class UBorderSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__BorderSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBorderSlot, 0x0000);
		}

		// class UBrushBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__BrushBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrushBinding, 0x0000);
		}

		// class UButton : public UContentWidget
		TEST_METHOD(Class__UMG__Button)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButton, 0x0000);
		}

		// class UButtonSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__ButtonSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButtonSlot, 0x0000);
		}

		// class UCheckBox : public UContentWidget
		TEST_METHOD(Class__UMG__CheckBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckBox, 0x0000);
		}

		// class UCheckedStateBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__CheckedStateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckedStateBinding, 0x0000);
		}

		// class UCircularThrobber : public UWidget
		TEST_METHOD(Class__UMG__CircularThrobber)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCircularThrobber, 0x0000);
		}

		// class UColorBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__ColorBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UColorBinding, 0x0000);
		}

		// class UComboBox : public UWidget
		TEST_METHOD(Class__UMG__ComboBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboBox, 0x0000);
		}

		// class UComboBoxString : public UWidget
		TEST_METHOD(Class__UMG__ComboBoxString)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboBoxString, 0x0000);
		}

		// class UDragDropOperation : public UObject
		TEST_METHOD(Class__UMG__DragDropOperation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDragDropOperation, 0x0000);
		}

		// class UDynamicEntryBox : public UWidget
		TEST_METHOD(Class__UMG__DynamicEntryBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDynamicEntryBox, 0x0000);
		}

		// class UEditableText : public UWidget
		TEST_METHOD(Class__UMG__EditableText)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableText, 0x0000);
		}

		// class UEditableTextBox : public UWidget
		TEST_METHOD(Class__UMG__EditableTextBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableTextBox, 0x0000);
		}

		// class UExpandableArea : public UWidget
		TEST_METHOD(Class__UMG__ExpandableArea)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UExpandableArea, 0x0000);
		}

		// class UFloatBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__FloatBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFloatBinding, 0x0000);
		}

		// class UGridPanel : public UPanelWidget
		TEST_METHOD(Class__UMG__GridPanel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGridPanel, 0x0000);
		}

		// class UGridSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__GridSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGridSlot, 0x0000);
		}

		// class UHorizontalBox : public UPanelWidget
		TEST_METHOD(Class__UMG__HorizontalBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHorizontalBox, 0x0000);
		}

		// class UHorizontalBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__HorizontalBoxSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHorizontalBoxSlot, 0x0000);
		}

		// class UInputKeySelector : public UWidget
		TEST_METHOD(Class__UMG__InputKeySelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputKeySelector, 0x0000);
		}

		// class UInt32Binding : public UPropertyBinding
		TEST_METHOD(Class__UMG__Int32Binding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt32Binding, 0x0000);
		}

		// class UInvalidationBox : public UContentWidget
		TEST_METHOD(Class__UMG__InvalidationBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInvalidationBox, 0x0000);
		}

		// class UNativeUserListEntry : public UInterface
		TEST_METHOD(Class__UMG__NativeUserListEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNativeUserListEntry, 0x0000);
		}

		// class UUserListEntry : public UNativeUserListEntry
		TEST_METHOD(Class__UMG__UserListEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserListEntry, 0x0000);
		}

		// class UUserObjectListEntry : public UUserListEntry
		TEST_METHOD(Class__UMG__UserObjectListEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserObjectListEntry, 0x0000);
		}

		// class UListViewBase : public UWidget
		TEST_METHOD(Class__UMG__ListViewBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UListViewBase, 0x0000);
		}

		// class UListView : public UListViewBase
		TEST_METHOD(Class__UMG__ListView)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UListView, 0x0000);
		}

		// class UListViewDesignerPreviewItem : public UObject
		TEST_METHOD(Class__UMG__ListViewDesignerPreviewItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UListViewDesignerPreviewItem, 0x0000);
		}

		// class UMenuAnchor : public UContentWidget
		TEST_METHOD(Class__UMG__MenuAnchor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMenuAnchor, 0x0000);
		}

		// class UMouseCursorBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__MouseCursorBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMouseCursorBinding, 0x0000);
		}

		// class UMovieScene2DTransformSection : public UMovieSceneSection
		TEST_METHOD(Class__UMG__MovieScene2DTransformSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene2DTransformSection, 0x0000);
		}

		// class UMovieScene2DTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__UMG__MovieScene2DTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene2DTransformTrack, 0x0000);
		}

		// class UMovieSceneMarginSection : public UMovieSceneSection
		TEST_METHOD(Class__UMG__MovieSceneMarginSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMarginSection, 0x0000);
		}

		// class UMovieSceneMarginTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__UMG__MovieSceneMarginTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMarginTrack, 0x0000);
		}

		// class UMovieSceneWidgetMaterialTrack : public UMovieSceneMaterialTrack
		TEST_METHOD(Class__UMG__MovieSceneWidgetMaterialTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneWidgetMaterialTrack, 0x0000);
		}

		// class UTextLayoutWidget : public UWidget
		TEST_METHOD(Class__UMG__TextLayoutWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextLayoutWidget, 0x0000);
		}

		// class UMultiLineEditableText : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__MultiLineEditableText)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMultiLineEditableText, 0x0000);
		}

		// class UMultiLineEditableTextBox : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__MultiLineEditableTextBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMultiLineEditableTextBox, 0x0000);
		}

		// class UNamedSlot : public UContentWidget
		TEST_METHOD(Class__UMG__NamedSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedSlot, 0x0000);
		}

		// class UNamedSlotInterface : public UInterface
		TEST_METHOD(Class__UMG__NamedSlotInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedSlotInterface, 0x0000);
		}

		// class UNativeWidgetHost : public UWidget
		TEST_METHOD(Class__UMG__NativeWidgetHost)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNativeWidgetHost, 0x0000);
		}

		// class UOverlay : public UPanelWidget
		TEST_METHOD(Class__UMG__Overlay)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOverlay, 0x0000);
		}

		// class UOverlaySlot : public UPanelSlot
		TEST_METHOD(Class__UMG__OverlaySlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOverlaySlot, 0x0000);
		}

		// class UProgressBar : public UWidget
		TEST_METHOD(Class__UMG__ProgressBar)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProgressBar, 0x0000);
		}

		// class URetainerBox : public UContentWidget
		TEST_METHOD(Class__UMG__RetainerBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URetainerBox, 0x0000);
		}

		// class URichTextBlock : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__RichTextBlock)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URichTextBlock, 0x0000);
		}

		// class URichTextBlockDecorator : public UObject
		TEST_METHOD(Class__UMG__RichTextBlockDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URichTextBlockDecorator, 0x0000);
		}

		// class URichTextBlockImageDecorator : public URichTextBlockDecorator
		TEST_METHOD(Class__UMG__RichTextBlockImageDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URichTextBlockImageDecorator, 0x0000);
		}

		// class USafeZone : public UContentWidget
		TEST_METHOD(Class__UMG__SafeZone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USafeZone, 0x0000);
		}

		// class USafeZoneSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__SafeZoneSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USafeZoneSlot, 0x0000);
		}

		// class UScaleBox : public UContentWidget
		TEST_METHOD(Class__UMG__ScaleBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScaleBox, 0x0000);
		}

		// class UScaleBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__ScaleBoxSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScaleBoxSlot, 0x0000);
		}

		// class UScrollBar : public UWidget
		TEST_METHOD(Class__UMG__ScrollBar)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBar, 0x0000);
		}

		// class UScrollBox : public UPanelWidget
		TEST_METHOD(Class__UMG__ScrollBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBox, 0x0000);
		}

		// class UScrollBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__ScrollBoxSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBoxSlot, 0x0000);
		}

		// class USizeBox : public UContentWidget
		TEST_METHOD(Class__UMG__SizeBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USizeBox, 0x0000);
		}

		// class USizeBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__SizeBoxSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USizeBoxSlot, 0x0000);
		}

		// class USlateBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__UMG__SlateBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateBlueprintLibrary, 0x0000);
		}

		// class USlateVectorArtData : public UObject
		TEST_METHOD(Class__UMG__SlateVectorArtData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateVectorArtData, 0x0000);
		}

		// class USlider : public UWidget
		TEST_METHOD(Class__UMG__Slider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlider, 0x0000);
		}

		// class USpacer : public UWidget
		TEST_METHOD(Class__UMG__Spacer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpacer, 0x0000);
		}

		// class USpinBox : public UWidget
		TEST_METHOD(Class__UMG__SpinBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpinBox, 0x0000);
		}

		// class UTextBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__TextBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBinding, 0x0000);
		}

		// class UTextBlock : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__TextBlock)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBlock, 0x0000);
		}

		// class UThrobber : public UWidget
		TEST_METHOD(Class__UMG__Throbber)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UThrobber, 0x0000);
		}

		// class UTileView : public UListView
		TEST_METHOD(Class__UMG__TileView)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTileView, 0x0000);
		}

		// class UTreeView : public UListView
		TEST_METHOD(Class__UMG__TreeView)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTreeView, 0x0000);
		}

		// class UUMGSequencePlayer : public UObject
		TEST_METHOD(Class__UMG__UMGSequencePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUMGSequencePlayer, 0x0000);
		}

		// class UUniformGridPanel : public UPanelWidget
		TEST_METHOD(Class__UMG__UniformGridPanel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniformGridPanel, 0x0000);
		}

		// class UUniformGridSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__UniformGridSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniformGridSlot, 0x0000);
		}

		// class UVerticalBox : public UPanelWidget
		TEST_METHOD(Class__UMG__VerticalBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVerticalBox, 0x0000);
		}

		// class UVerticalBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__VerticalBoxSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVerticalBoxSlot, 0x0000);
		}

		// class UViewport : public UContentWidget
		TEST_METHOD(Class__UMG__Viewport)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UViewport, 0x0000);
		}

		// class UVisibilityBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__VisibilityBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisibilityBinding, 0x0000);
		}

		// class UWidgetAnimation : public UMovieSceneSequence
		TEST_METHOD(Class__UMG__WidgetAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetAnimation, 0x0000);
		}

		// class UWidgetAnimationDelegateBinding : public UDynamicBlueprintBinding
		TEST_METHOD(Class__UMG__WidgetAnimationDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetAnimationDelegateBinding, 0x0000);
		}

		// class UWidgetBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__WidgetBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetBinding, 0x0000);
		}

		// class UWidgetBlueprintGeneratedClass : public UBlueprintGeneratedClass
		TEST_METHOD(Class__UMG__WidgetBlueprintGeneratedClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetBlueprintGeneratedClass, 0x0000);
		}

		// class UWidgetBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__UMG__WidgetBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetBlueprintLibrary, 0x0000);
		}

		// class UWidgetInteractionComponent : public USceneComponent
		TEST_METHOD(Class__UMG__WidgetInteractionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetInteractionComponent, 0x0000);
		}

		// class UWidgetLayoutLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__UMG__WidgetLayoutLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetLayoutLibrary, 0x0000);
		}

		// class UWidgetNavigation : public UObject
		TEST_METHOD(Class__UMG__WidgetNavigation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetNavigation, 0x0000);
		}

		// class UWidgetSwitcher : public UPanelWidget
		TEST_METHOD(Class__UMG__WidgetSwitcher)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetSwitcher, 0x0000);
		}

		// class UWidgetSwitcherSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__WidgetSwitcherSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetSwitcherSlot, 0x0000);
		}

		// class UWidgetTree : public UObject
		TEST_METHOD(Class__UMG__WidgetTree)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetTree, 0x0000);
		}

		// class UWindowTitleBarArea : public UContentWidget
		TEST_METHOD(Class__UMG__WindowTitleBarArea)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWindowTitleBarArea, 0x0000);
		}

		// class UWindowTitleBarAreaSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__WindowTitleBarAreaSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWindowTitleBarAreaSlot, 0x0000);
		}

		// class UWrapBox : public UPanelWidget
		TEST_METHOD(Class__UMG__WrapBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWrapBox, 0x0000);
		}

		// class UWrapBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__WrapBoxSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWrapBoxSlot, 0x0000);
		}

		// class UCombatClass_Brute_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_Brute__CombatClass_Brute_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_Brute_C, 0x0000);
		}

		// class UInputCoreTypes : public UObject
		TEST_METHOD(Class__InputCore__InputCoreTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputCoreTypes, 0x0000);
		}

		// class ACharacter_Root_Brute_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Brute_AIController__Character_Root_Brute_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Brute_AIController_C, 0x0000);
		}

		// class AImpactEffect_Creature_Large_Footfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Large_Footfall__ImpactEffect_Creature_Large_Footfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Large_Footfall_C, 0x0000);
		}

		// class AConsumable_Adrenaline_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_Adrenaline__Consumable_Adrenaline_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_Adrenaline_C, 0x0000);
		}

		// class UWidget_YesNoDialog_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_YesNoDialog__Widget_YesNoDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_YesNoDialog_C, 0x0000);
		}

		// class ACity_Street_CRN_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_11__City_Street_CRN_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_CRN_03_C, 0x0000);
		}

		// class AImpactEffect_Projectile_SeedCaller_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_SeedCaller__ImpactEffect_Projectile_SeedCaller_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_SeedCaller_C, 0x0000);
		}

		// class UControlPointMeshComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Landscape__ControlPointMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UControlPointMeshComponent, 0x0000);
		}

		// class ALandscapeProxy : public AActor
		TEST_METHOD(Class__Landscape__LandscapeProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeProxy, 0x0000);
		}

		// class ALandscape : public ALandscapeProxy
		TEST_METHOD(Class__Landscape__Landscape)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscape, 0x0000);
		}

		// class ALandscapeBlueprintCustomBrush : public AActor
		TEST_METHOD(Class__Landscape__LandscapeBlueprintCustomBrush)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeBlueprintCustomBrush, 0x0000);
		}

		// class ALandscapeBlueprintCustomSimulationBrush : public ALandscapeBlueprintCustomBrush
		TEST_METHOD(Class__Landscape__LandscapeBlueprintCustomSimulationBrush)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeBlueprintCustomSimulationBrush, 0x0000);
		}

		// class ULandscapeComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeComponent, 0x0000);
		}

		// class ALandscapeGizmoActor : public AActor
		TEST_METHOD(Class__Landscape__LandscapeGizmoActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeGizmoActor, 0x0000);
		}

		// class ALandscapeGizmoActiveActor : public ALandscapeGizmoActor
		TEST_METHOD(Class__Landscape__LandscapeGizmoActiveActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeGizmoActiveActor, 0x0000);
		}

		// class ULandscapeGizmoRenderComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeGizmoRenderComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeGizmoRenderComponent, 0x0000);
		}

		// class ULandscapeGrassType : public UObject
		TEST_METHOD(Class__Landscape__LandscapeGrassType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeGrassType, 0x0000);
		}

		// class ULandscapeHeightfieldCollisionComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeHeightfieldCollisionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeHeightfieldCollisionComponent, 0x0000);
		}

		// class ULandscapeInfo : public UObject
		TEST_METHOD(Class__Landscape__LandscapeInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeInfo, 0x0000);
		}

		// class ULandscapeInfoMap : public UObject
		TEST_METHOD(Class__Landscape__LandscapeInfoMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeInfoMap, 0x0000);
		}

		// class ULandscapeLayerInfoObject : public UObject
		TEST_METHOD(Class__Landscape__LandscapeLayerInfoObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeLayerInfoObject, 0x0000);
		}

		// class ULandscapeMaterialInstanceConstant : public UMaterialInstanceConstant
		TEST_METHOD(Class__Landscape__LandscapeMaterialInstanceConstant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeMaterialInstanceConstant, 0x0000);
		}

		// class ULandscapeMeshCollisionComponent : public ULandscapeHeightfieldCollisionComponent
		TEST_METHOD(Class__Landscape__LandscapeMeshCollisionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeMeshCollisionComponent, 0x0000);
		}

		// class ALandscapeMeshProxyActor : public AActor
		TEST_METHOD(Class__Landscape__LandscapeMeshProxyActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeMeshProxyActor, 0x0000);
		}

		// class ULandscapeMeshProxyComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Landscape__LandscapeMeshProxyComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeMeshProxyComponent, 0x0000);
		}

		// class ULandscapeSplinesComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeSplinesComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeSplinesComponent, 0x0000);
		}

		// class ULandscapeSplineControlPoint : public UObject
		TEST_METHOD(Class__Landscape__LandscapeSplineControlPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeSplineControlPoint, 0x0000);
		}

		// class ULandscapeSplineSegment : public UObject
		TEST_METHOD(Class__Landscape__LandscapeSplineSegment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeSplineSegment, 0x0000);
		}

		// class ALandscapeStreamingProxy : public ALandscapeProxy
		TEST_METHOD(Class__Landscape__LandscapeStreamingProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeStreamingProxy, 0x0000);
		}

		// class UMaterialExpressionLandscapeGrassOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeGrassOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeGrassOutput, 0x0000);
		}

		// class UMaterialExpressionLandscapeLayerBlend : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerBlend, 0x0000);
		}

		// class UMaterialExpressionLandscapeLayerCoords : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerCoords)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerCoords, 0x0000);
		}

		// class UMaterialExpressionLandscapeLayerSample : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerSample)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerSample, 0x0000);
		}

		// class UMaterialExpressionLandscapeLayerSwitch : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerSwitch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerSwitch, 0x0000);
		}

		// class UMaterialExpressionLandscapeLayerWeight : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerWeight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerWeight, 0x0000);
		}

		// class UMaterialExpressionLandscapeVisibilityMask : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeVisibilityMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeVisibilityMask, 0x0000);
		}

		// class UFixedFrameRateCustomTimeStep : public UEngineCustomTimeStep
		TEST_METHOD(Class__TimeManagement__FixedFrameRateCustomTimeStep)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFixedFrameRateCustomTimeStep, 0x0000);
		}

		// class UTimeManagementBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__TimeManagement__TimeManagementBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeManagementBlueprintLibrary, 0x0000);
		}

		// class UTimeSynchronizationSource : public UObject
		TEST_METHOD(Class__TimeManagement__TimeSynchronizationSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeSynchronizationSource, 0x0000);
		}

		// class UMovieSceneSignedObject : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneSignedObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSignedObject, 0x0000);
		}

		// class UMovieSceneSection : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieSceneSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSection, 0x0000);
		}

		// class UMovieSceneTrack : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieSceneTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneTrack, 0x0000);
		}

		// class UMovieSceneNameableTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieScene__MovieSceneNameableTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneNameableTrack, 0x0000);
		}

		// class UMovieSceneSequence : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieSceneSequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSequence, 0x0000);
		}

		// class UMovieSceneSequencePlayer : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneSequencePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSequencePlayer, 0x0000);
		}

		// class UMovieScenePlaybackClient : public UInterface
		TEST_METHOD(Class__MovieScene__MovieScenePlaybackClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScenePlaybackClient, 0x0000);
		}

		// class UMovieScene : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieScene)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene, 0x0000);
		}

		// class UMovieSceneBindingOverrides : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneBindingOverrides)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBindingOverrides, 0x0000);
		}

		// class UMovieSceneBindingOwnerInterface : public UInterface
		TEST_METHOD(Class__MovieScene__MovieSceneBindingOwnerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBindingOwnerInterface, 0x0000);
		}

		// class UMovieSceneBuiltInEasingFunction : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneBuiltInEasingFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBuiltInEasingFunction, 0x0000);
		}

		// class UMovieSceneEasingExternalCurve : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneEasingExternalCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEasingExternalCurve, 0x0000);
		}

		// class UMovieSceneEasingFunction : public UInterface
		TEST_METHOD(Class__MovieScene__MovieSceneEasingFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEasingFunction, 0x0000);
		}

		// class UMovieSceneFolder : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneFolder)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFolder, 0x0000);
		}

		// class UMovieSceneKeyProxy : public UInterface
		TEST_METHOD(Class__MovieScene__MovieSceneKeyProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneKeyProxy, 0x0000);
		}

		// class UMovieSceneSubSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieScene__MovieSceneSubSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSubSection, 0x0000);
		}

		// class UMovieSceneSubTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieScene__MovieSceneSubTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSubTrack, 0x0000);
		}

		// class UTestMovieSceneTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieScene__TestMovieSceneTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTestMovieSceneTrack, 0x0000);
		}

		// class UTestMovieSceneSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieScene__TestMovieSceneSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTestMovieSceneSection, 0x0000);
		}

		// class UTestMovieSceneSequence : public UMovieSceneSequence
		TEST_METHOD(Class__MovieScene__TestMovieSceneSequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTestMovieSceneSequence, 0x0000);
		}

		// class UWidget_BinaryUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BinaryUserSetting__Widget_BinaryUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BinaryUserSetting_C, 0x0000);
		}

		// class UBlueprintGameplayTagLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__GameplayTags__BlueprintGameplayTagLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintGameplayTagLibrary, 0x0000);
		}

		// class UGameplayTagAssetInterface : public UInterface
		TEST_METHOD(Class__GameplayTags__GameplayTagAssetInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagAssetInterface, 0x0000);
		}

		// class UEditableGameplayTagQuery : public UObject
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQuery)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQuery, 0x0000);
		}

		// class UEditableGameplayTagQueryExpression : public UObject
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression, 0x0000);
		}

		// class UEditableGameplayTagQueryExpression_AnyTagsMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AnyTagsMatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AnyTagsMatch, 0x0000);
		}

		// class UEditableGameplayTagQueryExpression_AllTagsMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AllTagsMatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AllTagsMatch, 0x0000);
		}

		// class UEditableGameplayTagQueryExpression_NoTagsMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_NoTagsMatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_NoTagsMatch, 0x0000);
		}

		// class UEditableGameplayTagQueryExpression_AnyExprMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AnyExprMatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AnyExprMatch, 0x0000);
		}

		// class UEditableGameplayTagQueryExpression_AllExprMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AllExprMatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AllExprMatch, 0x0000);
		}

		// class UEditableGameplayTagQueryExpression_NoExprMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_NoExprMatch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_NoExprMatch, 0x0000);
		}

		// class UGameplayTagsManager : public UObject
		TEST_METHOD(Class__GameplayTags__GameplayTagsManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsManager, 0x0000);
		}

		// class UGameplayTagsList : public UObject
		TEST_METHOD(Class__GameplayTags__GameplayTagsList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsList, 0x0000);
		}

		// class URestrictedGameplayTagsList : public UObject
		TEST_METHOD(Class__GameplayTags__RestrictedGameplayTagsList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URestrictedGameplayTagsList, 0x0000);
		}

		// class UGameplayTagsSettings : public UGameplayTagsList
		TEST_METHOD(Class__GameplayTags__GameplayTagsSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsSettings, 0x0000);
		}

		// class UGameplayTagsDeveloperSettings : public UObject
		TEST_METHOD(Class__GameplayTags__GameplayTagsDeveloperSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsDeveloperSettings, 0x0000);
		}

		// class UAction_Character_Wasteland_Sentinel_Sound_Awareness_C : public UAction_Sound_Awareness_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Wasteland_Sentinel_Sound_Awareness__Action_Character_Wasteland_Sentinel_Sound_Awareness_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Wasteland_Sentinel_Sound_Awareness_C, 0x0000);
		}

		// class UAction_Consumable_FrenzyDust_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_FrenzyDust__Action_Consumable_FrenzyDust_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_FrenzyDust_C, 0x0000);
		}

		// class ACharacter_Root_Broken_Weak_C : public ACharacter_Root_Broken_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Broken_Weak__Character_Root_Broken_Weak_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Broken_Weak_C, 0x0000);
		}

		// class ACharacter_Root_Wraith_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Wraith__Character_Root_Wraith_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Wraith_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_03_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_03__BP_City_Corpse_Vingette_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_03_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_06_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_06__BP_City_Corpse_Vingette_06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_06_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_07_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_07__BP_City_Corpse_Vingette_07_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_07_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_20__City_Street_VISTA_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C, 0x0000);
		}

		// class AMod_StormCaller_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_StormCaller__Mod_StormCaller_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_StormCaller_C, 0x0000);
		}

		// class AMod_SongOfSwords_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_SongOfSwords__Mod_SongOfSwords_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_SongOfSwords_C, 0x0000);
		}

		// class AMod_FlickerCloak_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_FlickerCloak__Mod_FlickerCloak_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_FlickerCloak_C, 0x0000);
		}

		// class AMod_ExplosiveShot_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_ExplosiveShot__Mod_ExplosiveShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_ExplosiveShot_C, 0x0000);
		}

		// class URemnantEntitlement_C : public UEntitlementComponent
		TEST_METHOD(BlueprintGeneratedClass__RemnantEntitlement__RemnantEntitlement_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantEntitlement_C, 0x0000);
		}

		// class AMod_FanOfKnives_C : public ARangedWeapon_Mod_Action_MultiTarget_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_FanOfKnives__Mod_FanOfKnives_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_FanOfKnives_C, 0x0000);
		}

		// class AResource_Wasteland_ThermalGeode_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_ThermalGeode__Resource_Wasteland_ThermalGeode_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_ThermalGeode_C, 0x0000);
		}

		// class AResource_Wasteland_StoneOfTheGuardian_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_StoneOfTheGuardian__Resource_Wasteland_StoneOfTheGuardian_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_StoneOfTheGuardian_C, 0x0000);
		}

		// class AWeapon_Swamp_Devastator_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Swamp_Devastator__Weapon_Swamp_Devastator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Swamp_Devastator_C, 0x0000);
		}

		// class AWeapon_Swamp_ButchersFlail_C : public AWeapon_Flail_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Swamp_ButchersFlail__Weapon_Swamp_ButchersFlail_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Swamp_ButchersFlail_C, 0x0000);
		}

		// class UDamageType_Explosion_Power_03_FromPlayer_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Power_03_FromPlayer__DamageType_Explosion_Power_03_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Power_03_FromPlayer_C, 0x0000);
		}

		// class UDamageType_Explosion_Corrosive_Power_02_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Corrosive_Power_02__DamageType_Explosion_Corrosive_Power_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Corrosive_Power_02_C, 0x0000);
		}

		// class UDamageClass_Melee_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Melee__DamageClass_Melee_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Melee_C, 0x0000);
		}

		// class UAward_Mod_VeryGoodBoy_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Mod_VeryGoodBoy__Award_Mod_VeryGoodBoy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Mod_VeryGoodBoy_C, 0x0000);
		}

		// class UAward_Armor_Legs_Scrapper_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Scrapper_Skin_PreOrder__Award_Armor_Legs_Scrapper_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Scrapper_Skin_PreOrder_C, 0x0000);
		}

		// class UAward_Armor_Legs_Hunter_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Hunter_Skin_PreOrder__Award_Armor_Legs_Hunter_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Hunter_Skin_PreOrder_C, 0x0000);
		}

		// class UAward_Armor_Head_Hunter_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Hunter_Skin_PreOrder__Award_Armor_Head_Hunter_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Hunter_Skin_PreOrder_C, 0x0000);
		}

		// class AInteractive_Waypoint_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Waypoint__Interactive_Waypoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Waypoint_C, 0x0000);
		}

		// class AInteractive_ZoneDoor_Default_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_ZoneDoor_Default__Interactive_ZoneDoor_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_ZoneDoor_Default_C, 0x0000);
		}

		// class ABP_EventRegionBarrier_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_EventRegionBarrier__BP_EventRegionBarrier_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_EventRegionBarrier_C, 0x0000);
		}

		// class UAction_GodMode_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_GodMode__Action_GodMode_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_GodMode_C, 0x0000);
		}

		// class UWidget_PartyChat_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_PartyChat__Widget_PartyChat_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_PartyChat_C, 0x0000);
		}

		// class UWidget_Buffs_C : public UWIdget_StatusBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Buffs__Widget_Buffs_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Buffs_C, 0x0000);
		}

		// class ABP_Quest_Item_Base_C : public ABP_Item_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Quest_Item_Base__BP_Quest_Item_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Quest_Item_Base_C, 0x0000);
		}

		// class UBP_RemnantTrait_C : public UTrait
		TEST_METHOD(BlueprintGeneratedClass__BP_RemnantTrait__BP_RemnantTrait_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_RemnantTrait_C, 0x0000);
		}

		// class UCamera_Wounded_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Wounded__Camera_Wounded_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Wounded_C, 0x0000);
		}

		// class UCamera_Waypoint_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Waypoint__Camera_Waypoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Waypoint_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_Single_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_Single__ImpactEffect_Projectile_Bullet_Single_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_Single_C, 0x0000);
		}

		// class AWeapon_Gun_Base_C : public ARemnantRangedWeapon
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Gun_Base__Weapon_Gun_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Gun_Base_C, 0x0000);
		}

		// class UWidget_Ping_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Ping__Widget_Ping_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Ping_C, 0x0000);
		}

		// class UWidget_CheckpointMenu_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_CheckpointMenu__Widget_CheckpointMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_CheckpointMenu_C, 0x0000);
		}

		// class UDamageClass_Root_FromPlayer_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Root_FromPlayer__DamageClass_Root_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Root_FromPlayer_C, 0x0000);
		}

		// class UDamageClass_Fire_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Fire__DamageClass_Fire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Fire_C, 0x0000);
		}

		// class ALevelScriptActorGunfire : public ALevelScriptActor
		TEST_METHOD(Class__GunfireSaveSystem__LevelScriptActorGunfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelScriptActorGunfire, 0x0000);
		}

		// class UPersistenceCallbackProxy : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__GunfireSaveSystem__PersistenceCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPersistenceCallbackProxy, 0x0000);
		}

		// class UCommitSaveWithResultCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__CommitSaveWithResultCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCommitSaveWithResultCallbackProxy, 0x0000);
		}

		// class ULoadSaveCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__LoadSaveCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULoadSaveCallbackProxy, 0x0000);
		}

		// class ULoadProfileSaveCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__LoadProfileSaveCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULoadProfileSaveCallbackProxy, 0x0000);
		}

		// class UReadSaveCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__ReadSaveCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReadSaveCallbackProxy, 0x0000);
		}

		// class UHasSaveCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__HasSaveCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasSaveCallbackProxy, 0x0000);
		}

		// class UDeleteSaveCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__DeleteSaveCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeleteSaveCallbackProxy, 0x0000);
		}

		// class UDeleteProfileSaveCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__DeleteProfileSaveCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeleteProfileSaveCallbackProxy, 0x0000);
		}

		// class UHasProfileBackupCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__HasProfileBackupCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasProfileBackupCallbackProxy, 0x0000);
		}

		// class URestoreProfileBackupCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__RestoreProfileBackupCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URestoreProfileBackupCallbackProxy, 0x0000);
		}

		// class UHasSlotBackupCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__HasSlotBackupCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHasSlotBackupCallbackProxy, 0x0000);
		}

		// class URestoreSlotBackupCallbackProxy : public UPersistenceCallbackProxy
		TEST_METHOD(Class__GunfireSaveSystem__RestoreSlotBackupCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URestoreSlotBackupCallbackProxy, 0x0000);
		}

		// class UPersistenceBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__GunfireSaveSystem__PersistenceBlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPersistenceBlueprintFunctionLibrary, 0x0000);
		}

		// class UPersistenceComponent : public UActorComponent
		TEST_METHOD(Class__GunfireSaveSystem__PersistenceComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPersistenceComponent, 0x0000);
		}

		// class UPersistenceContainer : public UObject
		TEST_METHOD(Class__GunfireSaveSystem__PersistenceContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPersistenceContainer, 0x0000);
		}

		// class UPersistenceSettings : public UObject
		TEST_METHOD(Class__GunfireSaveSystem__PersistenceSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPersistenceSettings, 0x0000);
		}

		// class UGunfireSaveSystemSettings : public UDeveloperSettings
		TEST_METHOD(Class__GunfireSaveSystem__GunfireSaveSystemSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGunfireSaveSystemSettings, 0x0000);
		}

		// class UPersistenceManager : public UGameInstanceSubsystem
		TEST_METHOD(Class__GunfireSaveSystem__PersistenceManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPersistenceManager, 0x0000);
		}

		// class USaveGamePersistence : public USaveGame
		TEST_METHOD(Class__GunfireSaveSystem__SaveGamePersistence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USaveGamePersistence, 0x0000);
		}

		// class USaveGameProfile : public USaveGamePersistence
		TEST_METHOD(Class__GunfireSaveSystem__SaveGameProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USaveGameProfile, 0x0000);
		}

		// class USaveGameWorld : public USaveGamePersistence
		TEST_METHOD(Class__GunfireSaveSystem__SaveGameWorld)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USaveGameWorld, 0x0000);
		}

		// class UDatasmithObjectTemplate : public UObject
		TEST_METHOD(Class__DatasmithContent__DatasmithObjectTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithObjectTemplate, 0x0000);
		}

		// class UDatasmithActorTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithActorTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithActorTemplate, 0x0000);
		}

		// class ADatasmithAreaLightActor : public AActor
		TEST_METHOD(Class__DatasmithContent__DatasmithAreaLightActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADatasmithAreaLightActor, 0x0000);
		}

		// class UDatasmithAreaLightActorTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithAreaLightActorTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithAreaLightActorTemplate, 0x0000);
		}

		// class UDatasmithAssetImportData : public UAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithAssetImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithAssetImportData, 0x0000);
		}

		// class UDatasmithStaticMeshImportData : public UDatasmithAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshImportData, 0x0000);
		}

		// class UDatasmithStaticMeshCADImportData : public UDatasmithStaticMeshImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshCADImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshCADImportData, 0x0000);
		}

		// class UDatasmithSceneImportData : public UAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSceneImportData, 0x0000);
		}

		// class UDatasmithCADImportSceneData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithCADImportSceneData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithCADImportSceneData, 0x0000);
		}

		// class UDatasmithMDLSceneImportData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithMDLSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithMDLSceneImportData, 0x0000);
		}

		// class UDatasmithGLTFSceneImportData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithGLTFSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithGLTFSceneImportData, 0x0000);
		}

		// class UDatasmithStaticMeshGLTFImportData : public UDatasmithStaticMeshImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshGLTFImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshGLTFImportData, 0x0000);
		}

		// class UDatasmithDeltaGenAssetImportData : public UDatasmithAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithDeltaGenAssetImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithDeltaGenAssetImportData, 0x0000);
		}

		// class UDatasmithDeltaGenSceneImportData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithDeltaGenSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithDeltaGenSceneImportData, 0x0000);
		}

		// class UDatasmithVREDAssetImportData : public UDatasmithAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithVREDAssetImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithVREDAssetImportData, 0x0000);
		}

		// class UDatasmithVREDSceneImportData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithVREDSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithVREDSceneImportData, 0x0000);
		}

		// class UDatasmithAssetUserData : public UAssetUserData
		TEST_METHOD(Class__DatasmithContent__DatasmithAssetUserData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithAssetUserData, 0x0000);
		}

		// class UDatasmithCineCameraActorTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithCineCameraActorTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithCineCameraActorTemplate, 0x0000);
		}

		// class UDatasmithCineCameraComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithCineCameraComponentTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithCineCameraComponentTemplate, 0x0000);
		}

		// class UDatasmithContentBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__DatasmithContent__DatasmithContentBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithContentBlueprintLibrary, 0x0000);
		}

		// class UDatasmithImportOptions : public UObject
		TEST_METHOD(Class__DatasmithContent__DatasmithImportOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithImportOptions, 0x0000);
		}

		// class UDatasmithLandscapeTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithLandscapeTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithLandscapeTemplate, 0x0000);
		}

		// class UDatasmithLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithLightComponentTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithLightComponentTemplate, 0x0000);
		}

		// class UDatasmithMaterialInstanceTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithMaterialInstanceTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithMaterialInstanceTemplate, 0x0000);
		}

		// class UDatasmithPointLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithPointLightComponentTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithPointLightComponentTemplate, 0x0000);
		}

		// class UDatasmithPostProcessVolumeTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithPostProcessVolumeTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithPostProcessVolumeTemplate, 0x0000);
		}

		// class UDatasmithScene : public UObject
		TEST_METHOD(Class__DatasmithContent__DatasmithScene)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithScene, 0x0000);
		}

		// class ADatasmithSceneActor : public AActor
		TEST_METHOD(Class__DatasmithContent__DatasmithSceneActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADatasmithSceneActor, 0x0000);
		}

		// class UDatasmithSceneComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithSceneComponentTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSceneComponentTemplate, 0x0000);
		}

		// class UDatasmithSkyLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithSkyLightComponentTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSkyLightComponentTemplate, 0x0000);
		}

		// class UDatasmithSpotLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithSpotLightComponentTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSpotLightComponentTemplate, 0x0000);
		}

		// class UDatasmithStaticMeshComponentTemplate : public UDatasmithSceneComponentTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshComponentTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshComponentTemplate, 0x0000);
		}

		// class UDatasmithStaticMeshTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshTemplate, 0x0000);
		}

		// class ASpawnPoint_QuestSpecial1_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_QuestSpecial1__SpawnPoint_QuestSpecial1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_QuestSpecial1_C, 0x0000);
		}

		// class ASpawnPoint_CorpseVignetteLoot01_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_CorpseVignetteLoot01__SpawnPoint_CorpseVignetteLoot01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_CorpseVignetteLoot01_C, 0x0000);
		}

		// class UArmorSkill_Reciprocity_C : public UArmorSkill_TriggerOnHit_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Reciprocity__ArmorSkill_Reciprocity_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Reciprocity_C, 0x0000);
		}

		// class ABP_Projectile_Box_Base_C : public AProjectileBox
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile_Box_Base__BP_Projectile_Box_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_Box_Base_C, 0x0000);
		}

		// class ABP_Character_Root_Broken_Axe_Projectile_C : public ABP_Projectile_Box_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Character_Root_Broken_Axe_Projectile__BP_Character_Root_Broken_Axe_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Character_Root_Broken_Axe_Projectile_C, 0x0000);
		}

		// class ABP_Character_Root_Broken_Axe_Projectile_L_C : public ABP_Projectile_Box_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Character_Root_Broken_Axe_Projectile_L__BP_Character_Root_Broken_Axe_Projectile_L_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Character_Root_Broken_Axe_Projectile_L_C, 0x0000);
		}

		// class ACharacter_Root_Splitter_ChampionClone_C : public ACharacter_Root_Splitter_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Splitter_ChampionClone__Character_Root_Splitter_ChampionClone_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Splitter_ChampionClone_C, 0x0000);
		}

		// class ARangedWeapon_Mod_WeaponMode_C : public ARemnantRangedWeaponMod_C
		TEST_METHOD(BlueprintGeneratedClass__RangedWeapon_Mod_WeaponMode__RangedWeapon_Mod_WeaponMode_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARangedWeapon_Mod_WeaponMode_C, 0x0000);
		}

		// class AMod_GravityCoreShot_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Mod_GravityCoreShot_Projectile__Mod_GravityCoreShot_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_GravityCoreShot_Projectile_C, 0x0000);
		}

		// class UActorSequence : public UMovieSceneSequence
		TEST_METHOD(Class__ActorSequence__ActorSequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorSequence, 0x0000);
		}

		// class UActorSequenceComponent : public UActorComponent
		TEST_METHOD(Class__ActorSequence__ActorSequenceComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorSequenceComponent, 0x0000);
		}

		// class UActorSequencePlayer : public UMovieSceneSequencePlayer
		TEST_METHOD(Class__ActorSequence__ActorSequencePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorSequencePlayer, 0x0000);
		}

		// class UAction_AOE_Attack_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Attack__Action_AOE_Attack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Attack_C, 0x0000);
		}

		// class UAction_Deathwish_BaseBuff_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Deathwish_BaseBuff__Action_Deathwish_BaseBuff_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Deathwish_BaseBuff_C, 0x0000);
		}

		// class UAction_Apply_Root_Rot_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Apply_Root_Rot__Action_Apply_Root_Rot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Apply_Root_Rot_C, 0x0000);
		}

		// class UAction_FlickerCloakCooldown_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_FlickerCloakCooldown__Action_FlickerCloakCooldown_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_FlickerCloakCooldown_C, 0x0000);
		}

		// class UWeaponAffinities_C : public UWeaponAffinities
		TEST_METHOD(BlueprintGeneratedClass__WeaponAffinities__WeaponAffinities_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponAffinities_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blade_Metal_Medium_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blade_Metal_Medium__ImpactEffect_Weapon_Blade_Metal_Medium_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blade_Metal_Medium_C, 0x0000);
		}

		// class UAction_Consumable_Adrenaline_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_Adrenaline__Action_Consumable_Adrenaline_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_Adrenaline_C, 0x0000);
		}

		// class ATracer_Default_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Default__Tracer_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Default_C, 0x0000);
		}

		// class UArmorSkill_Regrowth_Action_StatsStacking_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Regrowth_Action_StatsStacking__ArmorSkill_Regrowth_Action_StatsStacking_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Regrowth_Action_StatsStacking_C, 0x0000);
		}

		// class UArmorSkill_Reciprocity_Action_Offense_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Reciprocity_Action_Offense__ArmorSkill_Reciprocity_Action_Offense_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Reciprocity_Action_Offense_C, 0x0000);
		}

		// class UWidget_Player_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Player__Widget_Player_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Player_C, 0x0000);
		}

		// class AQuest_HowlingKey_C : public ABP_Quest_Item_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_HowlingKey__Quest_HowlingKey_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_HowlingKey_C, 0x0000);
		}

		// class UAction_Interactive_Damage_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Interactive_Damage__Action_Interactive_Damage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Interactive_Damage_C, 0x0000);
		}

		// class ARootWraith_Projectile_C : public ABP_Projectile_Stick_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__RootWraith_Projectile__RootWraith_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARootWraith_Projectile_C, 0x0000);
		}

		// class AWeapon_Root_Bow_C : public ARangedWeapon
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Root_Bow__Weapon_Root_Bow_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Root_Bow_C, 0x0000);
		}

		// class UCharacter_Root_Wraith_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Root_Wraith_AnimsBP__Character_Root_Wraith_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Wraith_AnimsBP_C, 0x0000);
		}

		// class UImpactDirection_Down_C : public UImpactDirection
		TEST_METHOD(BlueprintGeneratedClass__ImpactDirection_Down__ImpactDirection_Down_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImpactDirection_Down_C, 0x0000);
		}

		// class UImpactDirection_Up_C : public UImpactDirection
		TEST_METHOD(BlueprintGeneratedClass__ImpactDirection_Up__ImpactDirection_Up_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImpactDirection_Up_C, 0x0000);
		}

		// class ACity_Street_STR_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_3__City_Street_STR_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_STR_03_C, 0x0000);
		}

		// class AConsumable_LiquidEscape_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_LiquidEscape__Consumable_LiquidEscape_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_LiquidEscape_C, 0x0000);
		}

		// class APlayer_PerfectDodge_Trail_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Player_PerfectDodge_Trail__Player_PerfectDodge_Trail_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayer_PerfectDodge_Trail_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_21__City_Street_VISTA_04_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_26__City_Street_VISTA_04_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C_C, 0x0000);
		}

		// class UAction_AOE_Mod_UnstableQuills_ProjectileExplosion_C : public UAction_AOE_ForceImpulse_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_UnstableQuills_ProjectileExplosion__Action_AOE_Mod_UnstableQuills_ProjectileExplosion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_UnstableQuills_ProjectileExplosion_C, 0x0000);
		}

		// class UAction_Buff_Movement_RiftWalker_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Buff_Movement_RiftWalker__Action_Buff_Movement_RiftWalker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Buff_Movement_RiftWalker_C, 0x0000);
		}

		// class UNavArea_Jump_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_Jump__NavArea_Jump_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Jump_C, 0x0000);
		}

		// class UNavArea_DoorLocked_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_DoorLocked__NavArea_DoorLocked_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_DoorLocked_C, 0x0000);
		}

		// class UNavArea_DoorDefault_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_DoorDefault__NavArea_DoorDefault_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_DoorDefault_C, 0x0000);
		}

		// class UDamageType_Physical_Power_01_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Physical_Power_01_Mod__DamageType_Physical_Power_01_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Physical_Power_01_Mod_C, 0x0000);
		}

		// class ABP_Projectile_Homing_Base_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile_Homing_Base__BP_Projectile_Homing_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_Homing_Base_C, 0x0000);
		}

		// class ABP_BlinkIndicator_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_BlinkIndicator__BP_BlinkIndicator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BlinkIndicator_C, 0x0000);
		}

		// class AMod_FrozenMist_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Mod_FrozenMist_Projectile__Mod_FrozenMist_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_FrozenMist_Projectile_C, 0x0000);
		}

		// class AProjectile_Mod_Swarm_C : public ABP_Projectile_Homing_MultiTarget_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Mod_Swarm__Projectile_Mod_Swarm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Mod_Swarm_C, 0x0000);
		}

		// class UAction_Mod_MultiTarget_FireProjectiles_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_MultiTarget_FireProjectiles__Action_Mod_MultiTarget_FireProjectiles_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_MultiTarget_FireProjectiles_C, 0x0000);
		}

		// class UAction_Mod_HowlersImmunity_Activate_C : public UAction_Aura_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_HowlersImmunity_Activate__Action_Mod_HowlersImmunity_Activate_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_HowlersImmunity_Activate_C, 0x0000);
		}

		// class ABP_Wasteland_Sludge_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Wasteland_Sludge__BP_Wasteland_Sludge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Wasteland_Sludge_C, 0x0000);
		}

		// class UWeapon_Root_Spitfire_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Root_Spitfire_AnimsBP__Weapon_Root_Spitfire_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Root_Spitfire_AnimsBP_C, 0x0000);
		}

		// class UCharacter_Swamp_ElfQueen_ExplosiveBug_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Swamp_ElfQueen_ExplosiveBug_AnimBP__Character_Swamp_ElfQueen_ExplosiveBug_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Swamp_ElfQueen_ExplosiveBug_AnimBP_C, 0x0000);
		}

		// class UCharacterMod_Tough_C : public UCharacterMod_Base_C
		TEST_METHOD(BlueprintGeneratedClass__CharacterMod_Tough__CharacterMod_Tough_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMod_Tough_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blade_Smolder_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blade_Smolder__ImpactEffect_Weapon_Blade_Smolder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blade_Smolder_C, 0x0000);
		}

		// class UDamageType_Melee_Fire_Smolder_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Fire_Smolder__DamageType_Melee_Fire_Smolder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Fire_Smolder_C, 0x0000);
		}

		// class UCharacterMod_Regenerate_C : public UCharacterMod_Base_C
		TEST_METHOD(BlueprintGeneratedClass__CharacterMod_Regenerate__CharacterMod_Regenerate_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMod_Regenerate_C, 0x0000);
		}

		// class UWeapon_Snow_Alternator_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Snow_Alternator_AnimsBP__Weapon_Snow_Alternator_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Snow_Alternator_AnimsBP_C, 0x0000);
		}

		// class AMod_StaticFieldShot_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_StaticFieldShot__Mod_StaticFieldShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_StaticFieldShot_C, 0x0000);
		}

		// class AWeapon_Flail_C : public AWeapon_Melee_SkinnedBase_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Flail__Weapon_Flail_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Flail_C, 0x0000);
		}

		// class AImpactEffect_Weapon_ButchersFlail_C : public AImpactEffect_Weapon_Blunt_Stone_Large_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_ButchersFlail__ImpactEffect_Weapon_ButchersFlail_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_ButchersFlail_C, 0x0000);
		}

		// class ABP_Mod_ExplosiveShot_ProjectileVisualization_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_ExplosiveShot_ProjectileVisualization__BP_Mod_ExplosiveShot_ProjectileVisualization_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_ExplosiveShot_ProjectileVisualization_C, 0x0000);
		}

		// class AMod_Blizzard_StormCloud_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Mod_Blizzard_StormCloud__Mod_Blizzard_StormCloud_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Blizzard_StormCloud_C, 0x0000);
		}

		// class UAction_InvulnerableToMonsters_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_InvulnerableToMonsters__Action_InvulnerableToMonsters_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_InvulnerableToMonsters_C, 0x0000);
		}

		// class UWeaponProfile_PrideOfTheIskal_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_PrideOfTheIskal__WeaponProfile_PrideOfTheIskal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_PrideOfTheIskal_C, 0x0000);
		}

		// class UWidget_InventoryList_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InventoryList__Widget_InventoryList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InventoryList_C, 0x0000);
		}

		// class UWidget_InventoryItem_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InventoryItem__Widget_InventoryItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InventoryItem_C, 0x0000);
		}

		// class UAnimSharingStateInstance : public UAnimInstance
		TEST_METHOD(Class__AnimationSharing__AnimSharingStateInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSharingStateInstance, 0x0000);
		}

		// class UAnimSharingTransitionInstance : public UAnimInstance
		TEST_METHOD(Class__AnimationSharing__AnimSharingTransitionInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSharingTransitionInstance, 0x0000);
		}

		// class UAnimSharingAdditiveInstance : public UAnimInstance
		TEST_METHOD(Class__AnimationSharing__AnimSharingAdditiveInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSharingAdditiveInstance, 0x0000);
		}

		// class UAnimSharingInstance : public UObject
		TEST_METHOD(Class__AnimationSharing__AnimSharingInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSharingInstance, 0x0000);
		}

		// class UAnimationSharingManager : public UObject
		TEST_METHOD(Class__AnimationSharing__AnimationSharingManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationSharingManager, 0x0000);
		}

		// class UAnimationSharingSetup : public UObject
		TEST_METHOD(Class__AnimationSharing__AnimationSharingSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationSharingSetup, 0x0000);
		}

		// class UAnimationSharingStateProcessor : public UObject
		TEST_METHOD(Class__AnimationSharing__AnimationSharingStateProcessor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationSharingStateProcessor, 0x0000);
		}

		// class UWidget_QuestNotification_RewardItem_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification_RewardItem__Widget_QuestNotification_RewardItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_RewardItem_C, 0x0000);
		}

		// class UWidget_QuestNotification_RewardExperience_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification_RewardExperience__Widget_QuestNotification_RewardExperience_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_RewardExperience_C, 0x0000);
		}

		// class UWidget_QuestNotification_Objective_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification_Objective__Widget_QuestNotification_Objective_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_Objective_C, 0x0000);
		}

		// class AConsumable_Spiceroot_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_Spiceroot__Consumable_Spiceroot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_Spiceroot_C, 0x0000);
		}

		// class ADialog_TravelMenu_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_TravelMenu__Dialog_TravelMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_TravelMenu_C, 0x0000);
		}

		// class UTutorial_Checkpoint_Upgrading_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_Checkpoint_Upgrading__Tutorial_Checkpoint_Upgrading_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_Checkpoint_Upgrading_C, 0x0000);
		}

		// class UWidget_PartyMember_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_PartyMember__Widget_PartyMember_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_PartyMember_C, 0x0000);
		}

		// class UTutorial_Checkpoint_Consumables_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_Checkpoint_Consumables__Tutorial_Checkpoint_Consumables_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_Checkpoint_Consumables_C, 0x0000);
		}

		// class UWeaponProfile_Mod_ExplosiveShot_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_ExplosiveShot__WeaponProfile_Mod_ExplosiveShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_ExplosiveShot_C, 0x0000);
		}

		// class UGeometryCache : public UObject
		TEST_METHOD(Class__GeometryCache__GeometryCache)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCache, 0x0000);
		}

		// class AGeometryCacheActor : public AActor
		TEST_METHOD(Class__GeometryCache__GeometryCacheActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeometryCacheActor, 0x0000);
		}

		// class UGeometryCacheCodecBase : public UObject
		TEST_METHOD(Class__GeometryCache__GeometryCacheCodecBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheCodecBase, 0x0000);
		}

		// class UGeometryCacheCodecRaw : public UGeometryCacheCodecBase
		TEST_METHOD(Class__GeometryCache__GeometryCacheCodecRaw)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheCodecRaw, 0x0000);
		}

		// class UGeometryCacheCodecV1 : public UGeometryCacheCodecBase
		TEST_METHOD(Class__GeometryCache__GeometryCacheCodecV1)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheCodecV1, 0x0000);
		}

		// class UGeometryCacheComponent : public UMeshComponent
		TEST_METHOD(Class__GeometryCache__GeometryCacheComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheComponent, 0x0000);
		}

		// class UGeometryCacheTrack : public UObject
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack, 0x0000);
		}

		// class UGeometryCacheTrack_FlipbookAnimation : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack_FlipbookAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack_FlipbookAnimation, 0x0000);
		}

		// class UGeometryCacheTrackStreamable : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrackStreamable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrackStreamable, 0x0000);
		}

		// class UGeometryCacheTrack_TransformAnimation : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack_TransformAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack_TransformAnimation, 0x0000);
		}

		// class UGeometryCacheTrack_TransformGroupAnimation : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack_TransformGroupAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack_TransformGroupAnimation, 0x0000);
		}

		// class UMovieSceneGeometryCacheSection : public UMovieSceneSection
		TEST_METHOD(Class__GeometryCacheTracks__MovieSceneGeometryCacheSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneGeometryCacheSection, 0x0000);
		}

		// class UMovieSceneGeometryCacheTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__GeometryCacheTracks__MovieSceneGeometryCacheTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneGeometryCacheTrack, 0x0000);
		}

		// class UWeaponProfile_CurseOfTheJungleGod_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_CurseOfTheJungleGod__WeaponProfile_CurseOfTheJungleGod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_CurseOfTheJungleGod_C, 0x0000);
		}

		// class ACableActor : public AActor
		TEST_METHOD(Class__CableComponent__CableActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACableActor, 0x0000);
		}

		// class UCableComponent : public UMeshComponent
		TEST_METHOD(Class__CableComponent__CableComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCableComponent, 0x0000);
		}

		// class UWidget_DifficultyTab_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_DifficultyTab__Widget_DifficultyTab_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_DifficultyTab_C, 0x0000);
		}

		// class UWidget_Crafting_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Crafting__Widget_Crafting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Crafting_C, 0x0000);
		}

		// class UWidget_MaterialsQuestsMiscs_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MaterialsQuestsMiscs__Widget_MaterialsQuestsMiscs_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MaterialsQuestsMiscs_C, 0x0000);
		}

		// class UWidget_StatsBar_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatsBar__Widget_StatsBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatsBar_C, 0x0000);
		}

		// class UWidget_Inspectable_NavButtons_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Inspectable_NavButtons__Widget_Inspectable_NavButtons_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Inspectable_NavButtons_C, 0x0000);
		}

		// class UWidget_Subtitle_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Subtitle__Widget_Subtitle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Subtitle_C, 0x0000);
		}

		// class UAction_Buff_PetTheDog_DamageBoost_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Buff_PetTheDog_DamageBoost__Action_Buff_PetTheDog_DamageBoost_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Buff_PetTheDog_DamageBoost_C, 0x0000);
		}

		// class UWidget_BuySellUpgrade_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BuySellUpgrade__Widget_BuySellUpgrade_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BuySellUpgrade_C, 0x0000);
		}

		// class ACity_Subway_Entrance_POI_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_2__City_Subway_Entrance_POI_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Subway_Entrance_POI_C, 0x0000);
		}

		// class UTutorial_InGameMenu_Crafting_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_InGameMenu_Crafting__Tutorial_InGameMenu_Crafting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_InGameMenu_Crafting_C, 0x0000);
		}

		// class UWidget_Emotes_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Emotes__Widget_Emotes_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Emotes_C, 0x0000);
		}

		// class UArmorSkill_Challenger_C : public UArmorSkill_Base_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Challenger__ArmorSkill_Challenger_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Challenger_C, 0x0000);
		}

		// class AAura_Mod_HiveShot_InsectCloud_C : public ABP_Aura_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Aura_Mod_HiveShot_InsectCloud__Aura_Mod_HiveShot_InsectCloud_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAura_Mod_HiveShot_InsectCloud_C, 0x0000);
		}

		// class ASpawnPoint_Emerge_Pipes_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Emerge_Pipes__SpawnPoint_Emerge_Pipes_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Emerge_Pipes_C, 0x0000);
		}

		// class AWeapon_Snow_ChainBlade_C : public AWeapon_Flail_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Snow_ChainBlade__Weapon_Snow_ChainBlade_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Snow_ChainBlade_C, 0x0000);
		}

		// class AResource_Snow_ColdCell_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Snow_ColdCell__Resource_Snow_ColdCell_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Snow_ColdCell_C, 0x0000);
		}

		// class AResource_Rural_RootNeoplasm_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Rural_RootNeoplasm__Resource_Rural_RootNeoplasm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Rural_RootNeoplasm_C, 0x0000);
		}

		// class AWeapon_Pan_CurseOfTheJungleGod_C : public AWeapon_HandGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Pan_CurseOfTheJungleGod__Weapon_Pan_CurseOfTheJungleGod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Pan_CurseOfTheJungleGod_C, 0x0000);
		}

		// class ACity_Street_CRN_Generic_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_6__City_Street_CRN_Generic_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_CRN_Generic_03_C, 0x0000);
		}

		// class AWeapon_Root_Spitfire_C : public AWeapon_Submachinegun_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Root_Spitfire__Weapon_Root_Spitfire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Root_Spitfire_C, 0x0000);
		}

		// class AMod_VeilOfTheBlackTear_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_VeilOfTheBlackTear__Mod_VeilOfTheBlackTear_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_VeilOfTheBlackTear_C, 0x0000);
		}

		// class AMod_IronSentinel_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_IronSentinel__Mod_IronSentinel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_IronSentinel_C, 0x0000);
		}

		// class AResource_Swamp_SlimeVessel_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_SlimeVessel__Resource_Swamp_SlimeVessel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_SlimeVessel_C, 0x0000);
		}

		// class AResource_Snow_JackalsIvory_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Snow_JackalsIvory__Resource_Snow_JackalsIvory_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Snow_JackalsIvory_C, 0x0000);
		}

		// class AMod_Blizzard_C : public ARangedWeapon_Mod_Action_MultiTarget_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Blizzard__Mod_Blizzard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Blizzard_C, 0x0000);
		}

		// class ACity_Street_END_Transition_PocketDungeon_01_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_7__City_Street_END_Transition_PocketDungeon_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_END_Transition_PocketDungeon_01_C, 0x0000);
		}

		// class AResource_Rare_ForgedIron_C : public AResource_Material_Iron_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Rare_ForgedIron__Resource_Rare_ForgedIron_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Rare_ForgedIron_C, 0x0000);
		}

		// class UDamageType_DOT_Frost_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Frost_Mod__DamageType_DOT_Frost_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Frost_Mod_C, 0x0000);
		}

		// class ACharacter_Wasteland_Hound_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Hound__Character_Wasteland_Hound_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_Hound_C, 0x0000);
		}

		// class UWidget_TravelTabButton_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TravelTabButton__Widget_TravelTabButton_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TravelTabButton_C, 0x0000);
		}

		// class UWidget_UpgradeConfirm_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_UpgradeConfirm__Widget_UpgradeConfirm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_UpgradeConfirm_C, 0x0000);
		}

		// class UAction_StatusEffect_Instant_Corrosive_C : public UAction_StatusEffect_Instant_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StatusEffect_Instant_Corrosive__Action_StatusEffect_Instant_Corrosive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StatusEffect_Instant_Corrosive_C, 0x0000);
		}

		// class UWidget_CraftConfirm_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_CraftConfirm__Widget_CraftConfirm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_CraftConfirm_C, 0x0000);
		}

		// class UAction_StatusEffect_Instant_C : public UAction_StatusEffect_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StatusEffect_Instant__Action_StatusEffect_Instant_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StatusEffect_Instant_C, 0x0000);
		}

		// class UAction_StatusEffect_Instant_Radiation_C : public UAction_StatusEffect_Instant_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StatusEffect_Instant_Radiation__Action_StatusEffect_Instant_Radiation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StatusEffect_Instant_Radiation_C, 0x0000);
		}

		// class UWidget_Craft_ItemCard_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Craft_ItemCard__Widget_Craft_ItemCard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Craft_ItemCard_C, 0x0000);
		}

		// class UInteractive_Book_AnimBP2_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Interactive_Book_AnimBP2__Interactive_Book_AnimBP2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractive_Book_AnimBP2_C, 0x0000);
		}

		// class UWidgetPing_Actor_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__WidgetPing_Actor__WidgetPing_Actor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetPing_Actor_C, 0x0000);
		}

		// class UAction_StaticField_AOE_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StaticField_AOE__Action_StaticField_AOE_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StaticField_AOE_C, 0x0000);
		}

		// class UEmote_Talk_01_Medium_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Talk_01_Medium__Emote_Talk_01_Medium_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Talk_01_Medium_C, 0x0000);
		}

		// class ATracer_Pan_Boss_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Pan_Boss__Tracer_Pan_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Pan_Boss_C, 0x0000);
		}

		// class UWidget_TraitStat_Minor_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TraitStat_Minor__Widget_TraitStat_Minor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TraitStat_Minor_C, 0x0000);
		}

		// class UWidget_TutorialPagePip_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TutorialPagePip__Widget_TutorialPagePip_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TutorialPagePip_C, 0x0000);
		}

		// class UWidget_Inspectable_Info_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Inspectable_Info__Widget_Inspectable_Info_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Inspectable_Info_C, 0x0000);
		}

		// class UAction_Buff_DurationMod_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Buff_DurationMod__Action_Buff_DurationMod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Buff_DurationMod_C, 0x0000);
		}

		// class UWidget_OptionsSaveExit_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_OptionsSaveExit__Widget_OptionsSaveExit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_OptionsSaveExit_C, 0x0000);
		}

		// class ABP_Mod_Banish_Footprint_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_Banish_Footprint__BP_Mod_Banish_Footprint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_Banish_Footprint_C, 0x0000);
		}

		// class UAction_Mod_HiveShot_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_HiveShot__Action_Mod_HiveShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_HiveShot_C, 0x0000);
		}

		// class UAnimCustomInstance : public UAnimInstance
		TEST_METHOD(Class__AnimGraphRuntime__AnimCustomInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCustomInstance, 0x0000);
		}

		// class UAnimNotify_PlayMontageNotify : public UAnimNotify
		TEST_METHOD(Class__AnimGraphRuntime__AnimNotify_PlayMontageNotify)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayMontageNotify, 0x0000);
		}

		// class UAnimNotify_PlayMontageNotifyWindow : public UAnimNotifyState
		TEST_METHOD(Class__AnimGraphRuntime__AnimNotify_PlayMontageNotifyWindow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayMontageNotifyWindow, 0x0000);
		}

		// class UAnimSequencerInstance : public UAnimCustomInstance
		TEST_METHOD(Class__AnimGraphRuntime__AnimSequencerInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSequencerInstance, 0x0000);
		}

		// class UKismetAnimationLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AnimGraphRuntime__KismetAnimationLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetAnimationLibrary, 0x0000);
		}

		// class UPlayMontageCallbackProxy : public UObject
		TEST_METHOD(Class__AnimGraphRuntime__PlayMontageCallbackProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayMontageCallbackProxy, 0x0000);
		}

		// class UWidget_DragonHearts_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_DragonHearts__Widget_DragonHearts_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_DragonHearts_C, 0x0000);
		}

		// class ACharacter_Swamp_ElfQueen_Bug_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_ElfQueen_Bug__Character_Swamp_ElfQueen_Bug_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_ElfQueen_Bug_C, 0x0000);
		}

		// class ACharacter_Swamp_ElfQueen_Bug_Explosive_C : public ACharacter_Swamp_ElfQueen_Bug_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_ElfQueen_Bug_Explosive__Character_Swamp_ElfQueen_Bug_Explosive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_ElfQueen_Bug_Explosive_C, 0x0000);
		}

		// class AMod_StaticFieldShot_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Mod_StaticFieldShot_Projectile__Mod_StaticFieldShot_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_StaticFieldShot_Projectile_C, 0x0000);
		}

		// class ACharacter_Root_Priest_Basic_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Priest_Basic_Projectile__Character_Root_Priest_Basic_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Priest_Basic_Projectile_C, 0x0000);
		}

		// class AWasteland_Skull_Champion_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Wasteland_Skull_Champion_Projectile__Wasteland_Skull_Champion_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWasteland_Skull_Champion_Projectile_C, 0x0000);
		}

		// class UWidget_RadialItem_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_RadialItem__Widget_RadialItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_RadialItem_C, 0x0000);
		}

		// class UWidget_Window_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Window__Widget_Window_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Window_C, 0x0000);
		}

		// class UWidget_Debug_Properties_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Debug_Properties__Widget_Debug_Properties_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Debug_Properties_C, 0x0000);
		}

		// class UAction_Shield_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Shield__Action_Shield_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Shield_C, 0x0000);
		}

		// class UMod_FlickerCloak_Action_C : public UAction_Shield_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_FlickerCloak_Action__Mod_FlickerCloak_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMod_FlickerCloak_Action_C, 0x0000);
		}

		// class AInteractive_Book_C : public ABP_Inspectable_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Book__Interactive_Book_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Book_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_12__City_Street_VISTA_04_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C_C, 0x0000);
		}

		// class UWidget_MiniMap_Door_C : public URemnantMiniMapWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_Door__Widget_MiniMap_Door_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_Door_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_14__City_Street_VISTA_03_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C_C, 0x0000);
		}

		// class UWidget_ItemStatSkill_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatSkill__Widget_ItemStatSkill_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatSkill_C, 0x0000);
		}

		// class UWidget_ItemStatPrimary_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatPrimary__Widget_ItemStatPrimary_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatPrimary_C, 0x0000);
		}

		// class UNPCDialogueComponent_C : public UDialogComponent
		TEST_METHOD(BlueprintGeneratedClass__NPCDialogueComponent__NPCDialogueComponent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNPCDialogueComponent_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_I_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_I__BP_RandomBuilding_4x4_Side2_I_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_I_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_P_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_P__BP_RandomBuilding_4x4_Side2_P_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_P_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_N_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_N__BP_RandomBuilding_4x4_Side1_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_N_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_P_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_P__BP_RandomBuilding_4x4_Side1_P_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_P_C, 0x0000);
		}

		// class AInteractive_LootContainer_Base_C : public ALootContainer
		TEST_METHOD(BlueprintGeneratedClass__Interactive_LootContainer_Base__Interactive_LootContainer_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_LootContainer_Base_C, 0x0000);
		}

		// class UInspectStats_RangedWeapon_C : public UStats
		TEST_METHOD(BlueprintGeneratedClass__InspectStats_RangedWeapon__InspectStats_RangedWeapon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectStats_RangedWeapon_C, 0x0000);
		}

		// class AInteractive_LootContainer_Lockers_B_C : public AInteractive_LootContainer_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_LootContainer_Lockers_B__Interactive_LootContainer_Lockers_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_LootContainer_Lockers_B_C, 0x0000);
		}

		// class ABP_City_Box2_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Box2__BP_City_Box2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Box2_C, 0x0000);
		}

		// class ABP_City_Crate_B_Open_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Crate_B_Open__BP_City_Crate_B_Open_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Crate_B_Open_C, 0x0000);
		}

		// class ATracer_Defiler_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Defiler__Tracer_Defiler_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Defiler_C, 0x0000);
		}

		// class AProjectile_Mod_RadioactiveVolley_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Mod_RadioactiveVolley__Projectile_Mod_RadioactiveVolley_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Mod_RadioactiveVolley_C, 0x0000);
		}

		// class ABP_LODVolume_City_C : public ABP_LODVolume_C
		TEST_METHOD(BlueprintGeneratedClass__BP_LODVolume_City__BP_LODVolume_City_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_LODVolume_City_C, 0x0000);
		}

		// class ABP_Root_Base_C : public ASplineBase
		TEST_METHOD(BlueprintGeneratedClass__BP_Root_Base__BP_Root_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Root_Base_C, 0x0000);
		}

		// class ABP_PhysicsActor_Pan03_C : public ABP_PhysicsActor_Pan01_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Pan03__BP_PhysicsActor_Pan03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Pan03_C, 0x0000);
		}

		// class ABP_Glass_A_Breakable_G_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_A_Breakable_G__BP_Glass_A_Breakable_G_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_A_Breakable_G_C, 0x0000);
		}

		// class UWidget_Waypoint_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Waypoint__Widget_Waypoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Waypoint_C, 0x0000);
		}

		// class AConsumable_AmmoBox_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_AmmoBox__Consumable_AmmoBox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_AmmoBox_C, 0x0000);
		}

		// class AConsumable_OilskinTonic_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_OilskinTonic__Consumable_OilskinTonic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_OilskinTonic_C, 0x0000);
		}

		// class UDamageClass_Frost_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Frost__DamageClass_Frost_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Frost_C, 0x0000);
		}

		// class UCamera_Dead_Detached_C : public UPlatformCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Dead_Detached__Camera_Dead_Detached_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Dead_Detached_C, 0x0000);
		}

		// class UVault_GroundCheckParams_C : public UGroundCheckParams
		TEST_METHOD(BlueprintGeneratedClass__Vault_GroundCheckParams__Vault_GroundCheckParams_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVault_GroundCheckParams_C, 0x0000);
		}

		// class ULadder_GroundCheckParams_C : public UGroundCheckParams
		TEST_METHOD(BlueprintGeneratedClass__Ladder_GroundCheckParams__Ladder_GroundCheckParams_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULadder_GroundCheckParams_C, 0x0000);
		}

		// class UWeaponProfile_Mod_FlameThrower_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_FlameThrower__WeaponProfile_Mod_FlameThrower_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_FlameThrower_C, 0x0000);
		}

		// class AMod_FlameThrower_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Mod_FlameThrower_Projectile__Mod_FlameThrower_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_FlameThrower_Projectile_C, 0x0000);
		}

		// class UWidget_EncounterGroup_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_EncounterGroup__Widget_EncounterGroup_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_EncounterGroup_C, 0x0000);
		}

		// class UWidget_Fade_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Fade__Widget_Fade_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Fade_C, 0x0000);
		}

		// class UPlayStateEffect_FadeHUD_C : public UPlayStateEffect
		TEST_METHOD(BlueprintGeneratedClass__PlayStateEffect_FadeHUD__PlayStateEffect_FadeHUD_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_FadeHUD_C, 0x0000);
		}

		// class UWidget_WorldMenuDialog_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_WorldMenuDialog__Widget_WorldMenuDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_WorldMenuDialog_C, 0x0000);
		}

		// class UGDKNetDriver : public UIpNetDriver
		TEST_METHOD(Class__OnlineSubsystemGDK__GDKNetDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGDKNetDriver, 0x0000);
		}

		// class UUdpMessagingSettings : public UObject
		TEST_METHOD(Class__UdpMessaging__UdpMessagingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUdpMessagingSettings, 0x0000);
		}

		// class UWidget_Cinematic_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Cinematic__Widget_Cinematic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Cinematic_C, 0x0000);
		}

		// class ABP_PathPoint_C : public AAIPathPoint
		TEST_METHOD(BlueprintGeneratedClass__BP_PathPoint__BP_PathPoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PathPoint_C, 0x0000);
		}

		// class UPlayStateEffect_WorldReset_C : public UPlayStateEffect
		TEST_METHOD(BlueprintGeneratedClass__PlayStateEffect_WorldReset__PlayStateEffect_WorldReset_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_WorldReset_C, 0x0000);
		}

		// class UCombatClass_Summon_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_Summon__CombatClass_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_Summon_C, 0x0000);
		}

		// class ASpawnPoint_Quest_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Quest__SpawnPoint_Quest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Quest_C, 0x0000);
		}

		// class UBP_AssetCache_C : public UAssetCache
		TEST_METHOD(BlueprintGeneratedClass__BP_AssetCache__BP_AssetCache_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AssetCache_C, 0x0000);
		}

		// class UWidget_ButtonEx_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ButtonEx__Widget_ButtonEx_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ButtonEx_C, 0x0000);
		}

		// class ABP_City_Pallet_B_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Pallet_B_Breakable_A__BP_City_Pallet_B_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Pallet_B_Breakable_A_C, 0x0000);
		}

		// class UAction_Trinket_VulcansDetonator_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Trinket_VulcansDetonator__Action_Trinket_VulcansDetonator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Trinket_VulcansDetonator_C, 0x0000);
		}

		// class UBP_RemnantGameInstance_C : public URemnantGameInstance
		TEST_METHOD(BlueprintGeneratedClass__BP_RemnantGameInstance__BP_RemnantGameInstance_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_RemnantGameInstance_C, 0x0000);
		}

		// class ABP_Pallet_A_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Pallet_A_Breakable_A__BP_Pallet_A_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Pallet_A_Breakable_A_C, 0x0000);
		}

		// class ABP_RandomMapActor_SubwayBarrier_A_C : public ABP_RandomMapActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomMapActor_SubwayBarrier_A__BP_RandomMapActor_SubwayBarrier_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomMapActor_SubwayBarrier_A_C, 0x0000);
		}

		// class ABP_City_Crate_B_Broken_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Crate_B_Broken__BP_City_Crate_B_Broken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Crate_B_Broken_C, 0x0000);
		}

		// class UWidget_Radial_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Radial__Widget_Radial_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Radial_C, 0x0000);
		}

		// class UWidget_TravelCountdown_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TravelCountdown__Widget_TravelCountdown_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TravelCountdown_C, 0x0000);
		}

		// class ADialog_UpgradeConfirm_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_UpgradeConfirm__Dialog_UpgradeConfirm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_UpgradeConfirm_C, 0x0000);
		}

		// class UWidget_KeybindUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_KeybindUserSetting__Widget_KeybindUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_KeybindUserSetting_C, 0x0000);
		}

		// class ACharacter_Rattleweed_C : public AAICharacter
		TEST_METHOD(BlueprintGeneratedClass__Character_Rattleweed__Character_Rattleweed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Rattleweed_C, 0x0000);
		}

		// class UAction_Spawn_EncounterList_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Spawn_EncounterList__Action_Spawn_EncounterList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Spawn_EncounterList_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Default_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Default__ImpactEffect_Weapon_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Default_C, 0x0000);
		}

		// class ASpawnPoint_MinorPOI_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_MinorPOI__SpawnPoint_MinorPOI_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_MinorPOI_C, 0x0000);
		}

		// class UWeaponProfile_Devastator_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Devastator__WeaponProfile_Devastator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Devastator_C, 0x0000);
		}

		// class UWidget_UserWidget_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_UserWidget__Widget_UserWidget_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_UserWidget_C, 0x0000);
		}

		// class UAction_Consumable_Spiceroot_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_Spiceroot__Action_Consumable_Spiceroot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_Spiceroot_C, 0x0000);
		}

		// class UCameraShake_Light_Short_Full_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Light_Short_Full__CameraShake_Light_Short_Full_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Light_Short_Full_C, 0x0000);
		}

		// class ACharacter_Root_Broken_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Broken__Character_Root_Broken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Broken_C, 0x0000);
		}

		// class AQuest_Ward13_C : public AQuest_RootQuest_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Ward13__Quest_Ward13_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Ward13_C, 0x0000);
		}

		// class ABP_PhysicsActor_C : public APhysicsActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor__BP_PhysicsActor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_C, 0x0000);
		}

		// class ABP_City_Office_Chair_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Office_Chair_A__BP_City_Office_Chair_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Office_Chair_A_C, 0x0000);
		}

		// class UWeaponProfile_Mod_IronSentinel_Turret_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_IronSentinel_Turret__WeaponProfile_Mod_IronSentinel_Turret_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_IronSentinel_Turret_C, 0x0000);
		}

		// class UWidget_ItemStatBar_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatBar__Widget_ItemStatBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatBar_C, 0x0000);
		}

		// class UWidget_ItemStat_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStat__Widget_ItemStat_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStat_C, 0x0000);
		}

		// class UAction_AOE_Mod_ColdSpear_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_ColdSpear__Action_AOE_Mod_ColdSpear_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_ColdSpear_C, 0x0000);
		}

		// class UWidget_SettingDivider_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_SettingDivider__Widget_SettingDivider_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_SettingDivider_C, 0x0000);
		}

		// class UWidget_CVDUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_CVDUserSetting__Widget_CVDUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_CVDUserSetting_C, 0x0000);
		}

		// class UAction_Mod_Undying_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Undying__Action_Mod_Undying_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Undying_C, 0x0000);
		}

		// class UAward_Armor_Head_Adventurer_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Adventurer__Award_Armor_Head_Adventurer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Adventurer_C, 0x0000);
		}

		// class AResource_Special_GlowingFragment_C : public AItem_AccountCurrency_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Special_GlowingFragment__Resource_Special_GlowingFragment_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Special_GlowingFragment_C, 0x0000);
		}

		// class ABP_Glass_A_Breakable_J_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_A_Breakable_J__BP_Glass_A_Breakable_J_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_A_Breakable_J_C, 0x0000);
		}

		// class ABP_Glass_Breakable_D_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_Breakable_D__BP_Glass_Breakable_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_Breakable_D_C, 0x0000);
		}

		// class ABP_Glass_Breakable_E_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_Breakable_E__BP_Glass_Breakable_E_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_Breakable_E_C, 0x0000);
		}

		// class ABP_City_OfficeRetro_Shelf_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeRetro_Shelf_A__BP_City_OfficeRetro_Shelf_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeRetro_Shelf_A_C, 0x0000);
		}

		// class ABP_City_OfficeTable_C_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeTable_C__BP_City_OfficeTable_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeTable_C_C, 0x0000);
		}

		// class AMod_SporeShot_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_SporeShot__Mod_SporeShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_SporeShot_C, 0x0000);
		}

		// class AMod_GravityCoreShot_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_GravityCoreShot__Mod_GravityCoreShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_GravityCoreShot_C, 0x0000);
		}

		// class AACV_TileSet_City_C : public AAudioCustomVolume
		TEST_METHOD(BlueprintGeneratedClass__ACV_TileSet_City__ACV_TileSet_City_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AACV_TileSet_City_C, 0x0000);
		}

		// class ABP_TOD_Modifier_C : public AZoneRegion
		TEST_METHOD(BlueprintGeneratedClass__BP_TOD_Modifier__BP_TOD_Modifier_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_TOD_Modifier_C, 0x0000);
		}

		// class AResource_Rare_Iron_C : public AResource_Material_Iron_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Rare_Iron__Resource_Rare_Iron_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Rare_Iron_C, 0x0000);
		}

		// class AResource_Rare_HardenedIron_C : public AResource_Material_Iron_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Rare_HardenedIron__Resource_Rare_HardenedIron_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Rare_HardenedIron_C, 0x0000);
		}

		// class UAction_Consumable_PristineEssence_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_PristineEssence__Action_Consumable_PristineEssence_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_PristineEssence_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_I_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_I__BP_RandomBuilding_4x4_Side1_I_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_I_C, 0x0000);
		}

		// class UWidget_GunfireCredits_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_GunfireCredits__Widget_GunfireCredits_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_GunfireCredits_C, 0x0000);
		}

		// class UCreditsRoller_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__CreditsRoller__CreditsRoller_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCreditsRoller_C, 0x0000);
		}

		// class UAction_Debuff_NightmareRealm_C : public UAction_DOT_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_NightmareRealm__Action_Debuff_NightmareRealm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_NightmareRealm_C, 0x0000);
		}

		// class USpeaker_ElfQueen_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_ElfQueen__Speaker_ElfQueen_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_ElfQueen_C, 0x0000);
		}

		// class AQuest_Event_RazorStone_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_RazorStone__Quest_Event_RazorStone_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_RazorStone_C, 0x0000);
		}

		// class AQuest_Event_TraitBook_Swamp_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_TraitBook_Swamp__Quest_Event_TraitBook_Swamp_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_TraitBook_Swamp_C, 0x0000);
		}

		// class AQuest_BP_Water_SlimeHulk_C : public ABP_Water_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_BP_Water_SlimeHulk__Quest_BP_Water_SlimeHulk_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_BP_Water_SlimeHulk_C, 0x0000);
		}

		// class ACharacter_Swamp_SlimeHulk_Float_Projectile_C : public ADamageableActor
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_SlimeHulk_Float_Projectile__Character_Swamp_SlimeHulk_Float_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_SlimeHulk_Float_Projectile_C, 0x0000);
		}

		// class UTrait_Executioner_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Executioner__Trait_Executioner_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Executioner_C, 0x0000);
		}

		// class ALoreItem_Journal_Ford_Hideout_C : public ALoreItem
		TEST_METHOD(BlueprintGeneratedClass__LoreItem_Journal_Ford_Hideout__LoreItem_Journal_Ford_Hideout_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALoreItem_Journal_Ford_Hideout_C, 0x0000);
		}

		// class ALoreItem_Note_Ford_Goodbye_C : public ALoreItem
		TEST_METHOD(BlueprintGeneratedClass__LoreItem_Note_Ford_Goodbye__LoreItem_Note_Ford_Goodbye_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALoreItem_Note_Ford_Goodbye_C, 0x0000);
		}

		// class ALoreItem_Note_Nadine_C : public ALoreItem
		TEST_METHOD(BlueprintGeneratedClass__LoreItem_Note_Nadine__LoreItem_Note_Nadine_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALoreItem_Note_Nadine_C, 0x0000);
		}

		// class UZoneDef_City_Streets_Ambushers_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_City_Streets_Ambushers__ZoneDef_City_Streets_Ambushers_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_City_Streets_Ambushers_C, 0x0000);
		}

		// class ABP_Quality_Spec_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Quality_Spec__BP_Quality_Spec_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Quality_Spec_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_G_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_G__BP_RandomBuilding_4x4_Side1_G_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_G_C, 0x0000);
		}

		// class AAmbientSpawnRegion_Primary_C : public AAmbientSpawnRegion
		TEST_METHOD(BlueprintGeneratedClass__AmbientSpawnRegion_Primary__AmbientSpawnRegion_Primary_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmbientSpawnRegion_Primary_C, 0x0000);
		}

		// class AAmbientSpawnRegion_Secondary_C : public AAmbientSpawnRegion
		TEST_METHOD(BlueprintGeneratedClass__AmbientSpawnRegion_Secondary__AmbientSpawnRegion_Secondary_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmbientSpawnRegion_Secondary_C, 0x0000);
		}

		// class AInteractive_Door_Base_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Door_Base__Interactive_Door_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Door_Base_C, 0x0000);
		}

		// class UACLStatsDumpCommandlet : public UCommandlet
		TEST_METHOD(Class__ACLPlugin__ACLStatsDumpCommandlet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UACLStatsDumpCommandlet, 0x0000);
		}

		// class UAnimCompress_ACLBase : public UAnimCompress
		TEST_METHOD(Class__ACLPlugin__AnimCompress_ACLBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_ACLBase, 0x0000);
		}

		// class UAnimCompress_ACL : public UAnimCompress_ACLBase
		TEST_METHOD(Class__ACLPlugin__AnimCompress_ACL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_ACL, 0x0000);
		}

		// class UAnimCompress_ACLCustom : public UAnimCompress_ACLBase
		TEST_METHOD(Class__ACLPlugin__AnimCompress_ACLCustom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_ACLCustom, 0x0000);
		}

		// class UWidget_MiniMap_Player_C : public URemnantMiniMapWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_Player__Widget_MiniMap_Player_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_Player_C, 0x0000);
		}

		// class UCombatClass_Soldier_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_Soldier__CombatClass_Soldier_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_Soldier_C, 0x0000);
		}

		// class UMeshReconstructorBase : public UObject
		TEST_METHOD(Class__MRMesh__MeshReconstructorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshReconstructorBase, 0x0000);
		}

		// class UMockDataMeshTrackerComponent : public USceneComponent
		TEST_METHOD(Class__MRMesh__MockDataMeshTrackerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMockDataMeshTrackerComponent, 0x0000);
		}

		// class UMRMeshComponent : public UPrimitiveComponent
		TEST_METHOD(Class__MRMesh__MRMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMRMeshComponent, 0x0000);
		}

		// class AArmor_Legs_Twisted_C : public AArmor_Legs_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Twisted__Armor_Legs_Twisted_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Twisted_C, 0x0000);
		}

		// class AArmor_Body_Carapace_C : public AArmor_Body_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Carapace__Armor_Body_Carapace_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Carapace_C, 0x0000);
		}

		// class UEmote_ThisWay_C : public UEmote
		TEST_METHOD(BlueprintGeneratedClass__Emote_ThisWay__Emote_ThisWay_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_ThisWay_C, 0x0000);
		}

		// class UItemType_Usable_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Usable__ItemType_Usable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Usable_C, 0x0000);
		}

		// class UItemType_RangedWeaponMod_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_RangedWeaponMod__ItemType_RangedWeaponMod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_RangedWeaponMod_C, 0x0000);
		}

		// class UItemType_PrimaryWeapon_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_PrimaryWeapon__ItemType_PrimaryWeapon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_PrimaryWeapon_C, 0x0000);
		}

		// class UItemType_Melee_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Melee__ItemType_Melee_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Melee_C, 0x0000);
		}

		// class AMiniMap_Display_Base_C : public ARemnantMiniMapDisplayActor
		TEST_METHOD(BlueprintGeneratedClass__MiniMap_Display_Base__MiniMap_Display_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniMap_Display_Base_C, 0x0000);
		}

		// class ABP_Inspectable_C : public ABP_InspectableAbstract_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Inspectable__BP_Inspectable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Inspectable_C, 0x0000);
		}

		// class ATPSPlayerCameraManager_C : public APlayerCameraManagerGunfire
		TEST_METHOD(BlueprintGeneratedClass__TPSPlayerCameraManager__TPSPlayerCameraManager_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATPSPlayerCameraManager_C, 0x0000);
		}

		// class UBPI_RemnantPlayerController_C : public UInterface
		TEST_METHOD(BlueprintGeneratedClass__BPI_RemnantPlayerController__BPI_RemnantPlayerController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBPI_RemnantPlayerController_C, 0x0000);
		}

		// class UAccountAwardSkins_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__AccountAwardSkins__AccountAwardSkins_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAccountAwardSkins_C, 0x0000);
		}

		// class UWidget_HUD_Notifications_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HUD_Notifications__Widget_HUD_Notifications_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HUD_Notifications_C, 0x0000);
		}

		// class UGameplayTask : public UObject
		TEST_METHOD(Class__GameplayTasks__GameplayTask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask, 0x0000);
		}

		// class UGameplayTask_ClaimResource : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_ClaimResource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_ClaimResource, 0x0000);
		}

		// class UGameplayTask_SpawnActor : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_SpawnActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_SpawnActor, 0x0000);
		}

		// class UGameplayTask_TimeLimitedExecution : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_TimeLimitedExecution)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_TimeLimitedExecution, 0x0000);
		}

		// class UGameplayTask_WaitDelay : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_WaitDelay)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_WaitDelay, 0x0000);
		}

		// class UGameplayTaskOwnerInterface : public UInterface
		TEST_METHOD(Class__GameplayTasks__GameplayTaskOwnerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTaskOwnerInterface, 0x0000);
		}

		// class UGameplayTaskResource : public UObject
		TEST_METHOD(Class__GameplayTasks__GameplayTaskResource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTaskResource, 0x0000);
		}

		// class UGameplayTasksComponent : public UActorComponent
		TEST_METHOD(Class__GameplayTasks__GameplayTasksComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTasksComponent, 0x0000);
		}

		// class UDamageType_Ranged_Bleed_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Bleed__DamageType_Ranged_Bleed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Bleed_C, 0x0000);
		}

		// class UConsumable_DragonHeart_Action_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Consumable_DragonHeart_Action__Consumable_DragonHeart_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConsumable_DragonHeart_Action_C, 0x0000);
		}

		// class UDamageClass_MeleeCharge_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_MeleeCharge__DamageClass_MeleeCharge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_MeleeCharge_C, 0x0000);
		}

		// class UWeaponProfile_Ruin_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Ruin__WeaponProfile_Ruin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Ruin_C, 0x0000);
		}

		// class AMod_Undying_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Undying__Mod_Undying_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Undying_C, 0x0000);
		}

		// class UCameraShake_BurstFire_VeryLight_Firing_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_BurstFire_VeryLight_Firing__CameraShake_BurstFire_VeryLight_Firing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_BurstFire_VeryLight_Firing_C, 0x0000);
		}

		// class UDamageType_Mod_Blowback_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Mod_Blowback__DamageType_Mod_Blowback_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Mod_Blowback_C, 0x0000);
		}

		// class UAction_StatusEffect_Instant_Root_C : public UAction_StatusEffect_Instant_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StatusEffect_Instant_Root__Action_StatusEffect_Instant_Root_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StatusEffect_Instant_Root_C, 0x0000);
		}

		// class AItem_Trinket_TriggerOnEquip_C : public AItem_Trinket_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Item_Trinket_TriggerOnEquip__Item_Trinket_TriggerOnEquip_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Trinket_TriggerOnEquip_C, 0x0000);
		}

		// class UDamageType_Physical_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Physical_Mod__DamageType_Physical_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Physical_Mod_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blade_Worlds_Edge_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blade_Worlds_Edge__ImpactEffect_Weapon_Blade_Worlds_Edge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blade_Worlds_Edge_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blade_VoiceOfTheTempest_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blade_VoiceOfTheTempest__ImpactEffect_Weapon_Blade_VoiceOfTheTempest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blade_VoiceOfTheTempest_C, 0x0000);
		}

		// class AWeapon_Spear_C : public AWeapon_Melee_SkinnedBase_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Spear__Weapon_Spear_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Spear_C, 0x0000);
		}

		// class AImpactEffect_Player_Footfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Player_Footfall__ImpactEffect_Player_Footfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Player_Footfall_C, 0x0000);
		}

		// class UDamageType_Explosion_Root_Power_02_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Root_Power_02_FromPlayer_Mod__DamageType_Explosion_Root_Power_02_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Root_Power_02_FromPlayer_Mod_C, 0x0000);
		}

		// class UDamageType_Explosion_Power_03_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Power_03_FromPlayer_Mod__DamageType_Explosion_Power_03_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Power_03_FromPlayer_Mod_C, 0x0000);
		}

		// class UDamageType_Explosion_Power_02_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Power_02_FromPlayer_Mod__DamageType_Explosion_Power_02_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Power_02_FromPlayer_Mod_C, 0x0000);
		}

		// class UDamageType_AOE_Physical_ParticleAccelerator_FinalExplosion_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Physical_ParticleAccelerator_FinalExplosion_Mod__DamageType_AOE_Physical_ParticleAccelerator_FinalExplosion_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Physical_ParticleAccelerator_FinalExplosion_Mod_C, 0x0000);
		}

		// class UCustomMeshComponent : public UMeshComponent
		TEST_METHOD(Class__CustomMeshComponent__CustomMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCustomMeshComponent, 0x0000);
		}

		// class UAction_Mod_BreathOfTheDesert_AOE_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_BreathOfTheDesert_AOE__Action_Mod_BreathOfTheDesert_AOE_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_BreathOfTheDesert_AOE_C, 0x0000);
		}

		// class UCharacter_RiftWalker_Clone_Male_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_RiftWalker_Clone_Male_AnimBP__Character_RiftWalker_Clone_Male_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_RiftWalker_Clone_Male_AnimBP_C, 0x0000);
		}

		// class USpeaker_WallaceSims_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_WallaceSims__Speaker_WallaceSims_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_WallaceSims_C, 0x0000);
		}

		// class UEmote_Storytelling_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Storytelling__Emote_Storytelling_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Storytelling_C, 0x0000);
		}

		// class UEmote_Greet_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Greet__Emote_Greet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Greet_C, 0x0000);
		}

		// class USpeaker_Townsperson_Jack_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Townsperson_Jack__Speaker_Townsperson_Jack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Townsperson_Jack_C, 0x0000);
		}

		// class USpeaker_RootMother_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_RootMother__Speaker_RootMother_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_RootMother_C, 0x0000);
		}

		// class ABP_BasicLight_A_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_BasicLight_A__BP_BasicLight_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BasicLight_A_C, 0x0000);
		}

		// class UDamageType_Melee_Dodge_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Dodge__DamageType_Melee_Dodge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Dodge_C, 0x0000);
		}

		// class UCameraShake_Explosion_Medium_Impact_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Explosion_Medium_Impact__CameraShake_Explosion_Medium_Impact_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Explosion_Medium_Impact_C, 0x0000);
		}

		// class ACharacter_Beam_Target_C : public AAICharacter
		TEST_METHOD(BlueprintGeneratedClass__Character_Beam_Target__Character_Beam_Target_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Beam_Target_C, 0x0000);
		}

		// class AImpactEffect_Creature_Small_Land_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Small_Land__ImpactEffect_Creature_Small_Land_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Small_Land_C, 0x0000);
		}

		// class AImpactEffect_Creature_Small_Bodyfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Small_Bodyfall__ImpactEffect_Creature_Small_Bodyfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Small_Bodyfall_C, 0x0000);
		}

		// class UCharacter_Swamp_Seeker_NavFilter_C : public UCharacter_Base_NavFilter_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_Seeker_NavFilter__Character_Swamp_Seeker_NavFilter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Swamp_Seeker_NavFilter_C, 0x0000);
		}

		// class UAIPOIType_Guard_C : public UAIPOIType
		TEST_METHOD(BlueprintGeneratedClass__AIPOIType_Guard__AIPOIType_Guard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPOIType_Guard_C, 0x0000);
		}

		// class AImpactEffect_Weapon_GuardianAxe_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_GuardianAxe__ImpactEffect_Weapon_GuardianAxe_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_GuardianAxe_C, 0x0000);
		}

		// class UDamageType_MeleeCharge_Power_01_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_MeleeCharge_Power_01__DamageType_MeleeCharge_Power_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_MeleeCharge_Power_01_C, 0x0000);
		}

		// class UCameraShake_Explosion_Light_Impact_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Explosion_Light_Impact__CameraShake_Explosion_Light_Impact_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Explosion_Light_Impact_C, 0x0000);
		}

		// class UWeaponProfile_Mod_Skewer_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_Skewer__WeaponProfile_Mod_Skewer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_Skewer_C, 0x0000);
		}

		// class UItemType_All_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_All__ItemType_All_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_All_C, 0x0000);
		}

		// class UItemCategory_Ammo_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Ammo__ItemCategory_Ammo_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Ammo_C, 0x0000);
		}

		// class UDamageType_AOE_Shock_DOT_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Shock_DOT_FromPlayer_Mod__DamageType_AOE_Shock_DOT_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Shock_DOT_FromPlayer_Mod_C, 0x0000);
		}

		// class UDamageType_DOT_Fire_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Fire_Mod__DamageType_DOT_Fire_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Fire_Mod_C, 0x0000);
		}

		// class UItemCategory_Skin_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Skin__ItemCategory_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Skin_C, 0x0000);
		}

		// class UDamageType_Melee_Root_Power_02_HeavyHit_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Root_Power_02_HeavyHit__DamageType_Melee_Root_Power_02_HeavyHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Root_Power_02_HeavyHit_C, 0x0000);
		}

		// class UDamageType_Melee_Root_Power_01_HeavyHit_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Root_Power_01_HeavyHit__DamageType_Melee_Root_Power_01_HeavyHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Root_Power_01_HeavyHit_C, 0x0000);
		}

		// class UWeaponProfile_SporeLauncher_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_SporeLauncher__WeaponProfile_SporeLauncher_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_SporeLauncher_C, 0x0000);
		}

		// class UWidget_CheckpointNotification_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_CheckpointNotification__Widget_CheckpointNotification_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_CheckpointNotification_C, 0x0000);
		}

		// class AArmor_Legs_Base_C : public AItem_Armor_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Base__Armor_Legs_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Base_C, 0x0000);
		}

		// class AResource_City_TwistedHeart_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_TwistedHeart__Resource_City_TwistedHeart_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_TwistedHeart_C, 0x0000);
		}

		// class AResource_City_BlazingHeart_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_BlazingHeart__Resource_City_BlazingHeart_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_BlazingHeart_C, 0x0000);
		}

		// class UAction_StopAction_Base_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StopAction_Base__Action_StopAction_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StopAction_Base_C, 0x0000);
		}

		// class UAudioState_Blizzard_C : public UAudioStateID
		TEST_METHOD(BlueprintGeneratedClass__AudioState_Blizzard__AudioState_Blizzard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioState_Blizzard_C, 0x0000);
		}

		// class UCameraShake_SemiAuto_MediumHeavy_Firing_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_SemiAuto_MediumHeavy_Firing__CameraShake_SemiAuto_MediumHeavy_Firing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_SemiAuto_MediumHeavy_Firing_C, 0x0000);
		}

		// class UAction_Mod_WildfireShot_GroundDOT_C : public UAction_DOT_Fire_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_WildfireShot_GroundDOT__Action_Mod_WildfireShot_GroundDOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_WildfireShot_GroundDOT_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Melee_COJ_Tentacle_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Melee_COJ_Tentacle__ImpactEffect_Weapon_Melee_COJ_Tentacle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Melee_COJ_Tentacle_C, 0x0000);
		}

		// class UAction_Mod_FrozenMist_ApplyFrostbite_MultiStack_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_FrozenMist_ApplyFrostbite_MultiStack__Action_Mod_FrozenMist_ApplyFrostbite_MultiStack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_FrozenMist_ApplyFrostbite_MultiStack_C, 0x0000);
		}

		// class UDamageType_Fire_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Fire_FromPlayer_Mod__DamageType_Fire_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Fire_FromPlayer_Mod_C, 0x0000);
		}

		// class UAction_Mod_Flamethrower_GroundDOT_C : public UAction_DOT_Fire_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Flamethrower_GroundDOT__Action_Mod_Flamethrower_GroundDOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Flamethrower_GroundDOT_C, 0x0000);
		}

		// class UWeapon_HiveCannon_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_HiveCannon_AnimsBP__Weapon_HiveCannon_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_HiveCannon_AnimsBP_C, 0x0000);
		}

		// class AInteractive_DragonCrystal_SpawnPoint_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__Interactive_DragonCrystal_SpawnPoint__Interactive_DragonCrystal_SpawnPoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_DragonCrystal_SpawnPoint_C, 0x0000);
		}

		// class UWidget_MiniMap_DoorVisited_C : public URemnantMiniMapWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_DoorVisited__Widget_MiniMap_DoorVisited_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_DoorVisited_C, 0x0000);
		}

		// class ABP_PhysicsActor_Coffee_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Coffee__BP_PhysicsActor_Coffee_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Coffee_C, 0x0000);
		}

		// class ABP_PhysicsActor_Hat_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Hat__BP_PhysicsActor_Hat_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Hat_C, 0x0000);
		}

		// class ABP_PhysicsActor_JerryCan_B_C : public ABP_PhysicsActor_JerryCan_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_JerryCan_B__BP_PhysicsActor_JerryCan_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_JerryCan_B_C, 0x0000);
		}

		// class ABP_PhysicsActor_JerryCan_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_JerryCan__BP_PhysicsActor_JerryCan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_JerryCan_C, 0x0000);
		}

		// class ABP_PhysicsActor_PaintCan_B_C : public ABP_PhysicsActor_PaintCan_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_PaintCan_B__BP_PhysicsActor_PaintCan_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_PaintCan_B_C, 0x0000);
		}

		// class ABP_PhysicsActor_PropaneTank_A_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_PropaneTank_A__BP_PhysicsActor_PropaneTank_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_PropaneTank_A_C, 0x0000);
		}

		// class ABP_PhysicsActor_Radio_B_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Radio_B__BP_PhysicsActor_Radio_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Radio_B_C, 0x0000);
		}

		// class ABP_PhysicsActor_Shovel_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Shovel__BP_PhysicsActor_Shovel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Shovel_C, 0x0000);
		}

		// class UDamageType_Ranged_ParticleAccelerator_C : public UDamageType_Ranged_C
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_ParticleAccelerator__DamageType_Ranged_ParticleAccelerator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_ParticleAccelerator_C, 0x0000);
		}

		// class UDamageType_Radiation_BreathOfTheDesert_Mod_C : public UDamageType_Ranged_Radiation_C
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Radiation_BreathOfTheDesert_Mod__DamageType_Radiation_BreathOfTheDesert_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Radiation_BreathOfTheDesert_Mod_C, 0x0000);
		}

		// class ABP_InspectableAbstract_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_InspectableAbstract__BP_InspectableAbstract_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_InspectableAbstract_C, 0x0000);
		}

		// class UDamageType_DOT_Corrosive_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Corrosive_Mod__DamageType_DOT_Corrosive_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Corrosive_Mod_C, 0x0000);
		}

		// class UAction_Mod_Incinerator_GroundDOT_C : public UAction_DOT_Fire_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Incinerator_GroundDOT__Action_Mod_Incinerator_GroundDOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Incinerator_GroundDOT_C, 0x0000);
		}

		// class AImpactEffect_Creature_Medium_Handfall_Sword_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Medium_Handfall_Sword__ImpactEffect_Creature_Medium_Handfall_Sword_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Medium_Handfall_Sword_C, 0x0000);
		}

		// class AImpactEffect_Creature_Medium_Footfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Medium_Footfall__ImpactEffect_Creature_Medium_Footfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Medium_Footfall_C, 0x0000);
		}

		// class UCombatClass_NoMaxWeight_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_NoMaxWeight__CombatClass_NoMaxWeight_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_NoMaxWeight_C, 0x0000);
		}

		// class ABP_PhysicsActor_RetroCan_A_2_C : public ABP_PhysicsActor_RetroCan_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_RetroCan_A_3__BP_PhysicsActor_RetroCan_A_2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_RetroCan_A_2_C, 0x0000);
		}

		// class ABP_PhysicsActor_RetroCan_C_2_C : public ABP_PhysicsActor_RetroCan_C_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_RetroCan_C_3__BP_PhysicsActor_RetroCan_C_2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_RetroCan_C_2_C, 0x0000);
		}

		// class ADialog_Tutorial_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Tutorial__Dialog_Tutorial_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Tutorial_C, 0x0000);
		}

		// class ADialog_TravelCountdown_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_TravelCountdown__Dialog_TravelCountdown_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_TravelCountdown_C, 0x0000);
		}

		// class ADialog_Death_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Death__Dialog_Death_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Death_C, 0x0000);
		}

		// class UWidget_KeyIcon_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_KeyIcon__Widget_KeyIcon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_KeyIcon_C, 0x0000);
		}

		// class ABP_HealthBar_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_HealthBar__BP_HealthBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_HealthBar_C, 0x0000);
		}

		// class ABP_PhysicsActor_Cigs_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Cigs__BP_PhysicsActor_Cigs_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Cigs_C, 0x0000);
		}

		// class ABP_TileEdge_C : public AMapTileEdge
		TEST_METHOD(BlueprintGeneratedClass__BP_TileEdge__BP_TileEdge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_TileEdge_C, 0x0000);
		}

		// class ABP_PhysicsActor_RetroCan_B_C : public ABP_PhysicsActor_RetroCan_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_RetroCan_B__BP_PhysicsActor_RetroCan_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_RetroCan_B_C, 0x0000);
		}

		// class AArmor_Head_Hunter_C : public AArmor_Head_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Hunter__Armor_Head_Hunter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Hunter_C, 0x0000);
		}

		// class UDamageType_Melee_Boss_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Boss__DamageType_Melee_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Boss_C, 0x0000);
		}

		// class UDamageType_AOE_Radiation_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Radiation__DamageType_AOE_Radiation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Radiation_C, 0x0000);
		}

		// class UAward_Armor_Legs_Carapace_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Carapace_Skin__Award_Armor_Legs_Carapace_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Carapace_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Bandit_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Bandit_Skin__Award_Armor_Legs_Bandit_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Bandit_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Radiant_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Radiant_Skin__Award_Armor_Head_Radiant_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Radiant_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Labyrinth_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Labyrinth_Skin__Award_Armor_Head_Labyrinth_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Labyrinth_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Elder_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Elder_Skin__Award_Armor_Head_Elder_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Elder_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Twisted_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Twisted_Skin__Award_Armor_Body_Twisted_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Twisted_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Osseous_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Osseous_Skin__Award_Armor_Body_Osseous_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Osseous_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Cultist_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Cultist_Skin__Award_Armor_Body_Cultist_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Cultist_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Carapace_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Carapace_Skin__Award_Armor_Body_Carapace_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Carapace_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Osseous_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Osseous_Skin__Award_Armor_Legs_Osseous_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Osseous_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Labyrinth_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Labyrinth_Skin__Award_Armor_Legs_Labyrinth_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Labyrinth_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Cultist_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Cultist_Skin__Award_Armor_Legs_Cultist_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Cultist_Skin_C, 0x0000);
		}

		// class URemoveVistaComponent_C : public UActorComponent
		TEST_METHOD(BlueprintGeneratedClass__RemoveVistaComponent__RemoveVistaComponent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemoveVistaComponent_C, 0x0000);
		}

		// class UAction_Character_Root_Wraith_Screamer_Sound_Awareness_C : public UAction_Sound_Awareness_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Wraith_Screamer_Sound_Awareness__Action_Character_Root_Wraith_Screamer_Sound_Awareness_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Wraith_Screamer_Sound_Awareness_C, 0x0000);
		}

		// class UCreditsTextWidget_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__CreditsTextWidget__CreditsTextWidget_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCreditsTextWidget_C, 0x0000);
		}

		// class UBP_Swamp_Fatty_HidingPot_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__BP_Swamp_Fatty_HidingPot_AnimBP__BP_Swamp_Fatty_HidingPot_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Swamp_Fatty_HidingPot_AnimBP_C, 0x0000);
		}

		// class AQuest_OverworldPOI_Ruins_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_OverworldPOI_Ruins__Quest_OverworldPOI_Ruins_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_Ruins_C, 0x0000);
		}

		// class AQuest_Keycard_C : public ABP_Quest_Item_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Keycard__Quest_Keycard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Keycard_C, 0x0000);
		}

		// class AQuest_MiniBoss_StormCaller_C : public AQuest_Dungeon_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_MiniBoss_StormCaller__Quest_MiniBoss_StormCaller_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_MiniBoss_StormCaller_C, 0x0000);
		}

		// class AQuest_MiniBoss_ImmolatorAndZephyr_C : public AQuest_Dungeon_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Miniboss_ImmolatorAndZephyr__Quest_MiniBoss_ImmolatorAndZephyr_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_MiniBoss_ImmolatorAndZephyr_C, 0x0000);
		}

		// class UQuestBellHandler_C : public URemnantQuestEntity
		TEST_METHOD(BlueprintGeneratedClass__QuestBellHandler__QuestBellHandler_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestBellHandler_C, 0x0000);
		}

		// class AInteractive_Wasteland_SlidingDoor_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Wasteland_SlidingDoor__Interactive_Wasteland_SlidingDoor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Wasteland_SlidingDoor_C, 0x0000);
		}

		// class AQuest_Event_CompulsionLoop_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_CompulsionLoop__Quest_Event_CompulsionLoop_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_CompulsionLoop_C, 0x0000);
		}

		// class AQuest_Boss_WastelandGuardian_C : public AQuest_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Boss_WastelandGuardian__Quest_Boss_WastelandGuardian_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Boss_WastelandGuardian_C, 0x0000);
		}

		// class AQuest_Boss_WastelandGuardian_Dungeon_C : public AQuest_Dungeon_POILink_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Boss_WastelandGuardian_Dungeon__Quest_Boss_WastelandGuardian_Dungeon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Boss_WastelandGuardian_Dungeon_C, 0x0000);
		}

		// class USpeaker_AkariWanderer_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_AkariWanderer__Speaker_AkariWanderer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_AkariWanderer_C, 0x0000);
		}

		// class UResourceDef_Wasteland_C : public UResourceDef
		TEST_METHOD(BlueprintGeneratedClass__ResourceDef_Wasteland__ResourceDef_Wasteland_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UResourceDef_Wasteland_C, 0x0000);
		}

		// class AQuest_Campaign_Lab_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Campaign_Lab__Quest_Campaign_Lab_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Campaign_Lab_C, 0x0000);
		}

		// class AQuest_FoundersKey_C : public ABP_Item_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_FoundersKey__Quest_FoundersKey_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_FoundersKey_C, 0x0000);
		}

		// class AQuest_LabyrinthKey_C : public ABP_Quest_Item_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_LabyrinthKey__Quest_LabyrinthKey_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_LabyrinthKey_C, 0x0000);
		}

		// class ABP_PhysicsActor_Nameplate_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Nameplate__BP_PhysicsActor_Nameplate_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Nameplate_C, 0x0000);
		}

		// class ABP_PhysicsActor_RetroCan_C_C : public ABP_PhysicsActor_RetroCan_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_RetroCan_C__BP_PhysicsActor_RetroCan_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_RetroCan_C_C, 0x0000);
		}

		// class ABP_PhysicsActor_Book_01_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Book_01__BP_PhysicsActor_Book_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Book_01_C, 0x0000);
		}

		// class ASpawnPoint_Holdout_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Holdout__SpawnPoint_Holdout_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Holdout_C, 0x0000);
		}

		// class UItemType_Consumable_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Consumable__ItemType_Consumable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Consumable_C, 0x0000);
		}

		// class UItemType_Amulet_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Amulet__ItemType_Amulet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Amulet_C, 0x0000);
		}

		// class ABP_MashProgressBar_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_MashProgressBar__BP_MashProgressBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_MashProgressBar_C, 0x0000);
		}

		// class UCamera_Aim_Extend_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Aim_Extend__Camera_Aim_Extend_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Aim_Extend_C, 0x0000);
		}

		// class UWeaponProfile_ParticleAccelerator_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_ParticleAccelerator__WeaponProfile_ParticleAccelerator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_ParticleAccelerator_C, 0x0000);
		}

		// class UAction_StopAction_Bleed_C : public UAction_StopAction_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StopAction_Bleed__Action_StopAction_Bleed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StopAction_Bleed_C, 0x0000);
		}

		// class UAction_Self_Revive_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Self_Revive__Action_Self_Revive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Self_Revive_C, 0x0000);
		}

		// class UDamageType_Melee_Power_01_MediumHit_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_01_MediumHit__DamageType_Melee_Power_01_MediumHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_01_MediumHit_C, 0x0000);
		}

		// class UItemType_Quest_C : public UQuestItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Quest__ItemType_Quest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Quest_C, 0x0000);
		}

		// class UTrait_Tormentor_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Tormentor__Trait_Tormentor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Tormentor_C, 0x0000);
		}

		// class UTrait_Suspicion_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Suspicion__Trait_Suspicion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Suspicion_C, 0x0000);
		}

		// class UTrait_Invoker_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Invoker__Trait_Invoker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Invoker_C, 0x0000);
		}

		// class UAOE_Action_HiveCannon_Projectile_Explosion_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__AOE_Action_HiveCannon_Projectile_Explosion__AOE_Action_HiveCannon_Projectile_Explosion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAOE_Action_HiveCannon_Projectile_Explosion_C, 0x0000);
		}

		// class UCombatClass_Rattleweed_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_Rattleweed__CombatClass_Rattleweed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_Rattleweed_C, 0x0000);
		}

		// class UDamageType_Ranged_Fire_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Fire__DamageType_Ranged_Fire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Fire_C, 0x0000);
		}

		// class AMod_SporeShot_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Mod_SporeShot_Projectile__Mod_SporeShot_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_SporeShot_Projectile_C, 0x0000);
		}

		// class UDamageType_Root_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Root_FromPlayer_Mod__DamageType_Root_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Root_FromPlayer_Mod_C, 0x0000);
		}

		// class UCameraShake_Light_Short_Vertical_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Light_Short_Vertical__CameraShake_Light_Short_Vertical_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Light_Short_Vertical_C, 0x0000);
		}

		// class AMod_Wildfire_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Wildfire_Projectile__Mod_Wildfire_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Wildfire_Projectile_C, 0x0000);
		}

		// class ABP_PhysicsActor_GasCylinder_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_GasCylinder__BP_PhysicsActor_GasCylinder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_GasCylinder_C, 0x0000);
		}

		// class ABP_PhysicsActor_PropaneTank_B_C : public ABP_PhysicsActor_PropaneTank_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_PropaneTank_B__BP_PhysicsActor_PropaneTank_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_PropaneTank_B_C, 0x0000);
		}

		// class ABP_PhysicsActor_Folder_Manilla_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Folder_Manilla__BP_PhysicsActor_Folder_Manilla_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Folder_Manilla_C, 0x0000);
		}

		// class ABP_PhysicsActor_Lamp_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Lamp__BP_PhysicsActor_Lamp_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Lamp_C, 0x0000);
		}

		// class UFaction_Player_C : public UFaction
		TEST_METHOD(BlueprintGeneratedClass__Faction_Player__Faction_Player_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaction_Player_C, 0x0000);
		}

		// class UFaction_Enemy_C : public UFaction
		TEST_METHOD(BlueprintGeneratedClass__Faction_Enemy__Faction_Enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaction_Enemy_C, 0x0000);
		}

		// class UCharacter_Tentacle_AnimBlueprint_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Tentacle_AnimBlueprint__Character_Tentacle_AnimBlueprint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Tentacle_AnimBlueprint_C, 0x0000);
		}

		// class ABP_PhysicsActor_Trashcan_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Trashcan__BP_PhysicsActor_Trashcan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Trashcan_C, 0x0000);
		}

		// class AArmor_Body_Hunter_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Hunter_PreOrder__Armor_Body_Hunter_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Hunter_PreOrder_C, 0x0000);
		}

		// class UTrait_Recovery_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Recovery__Trait_Recovery_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Recovery_C, 0x0000);
		}

		// class USpeaker_UndyingKing_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_UndyingKing__Speaker_UndyingKing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_UndyingKing_C, 0x0000);
		}

		// class UUndyingKing_Emote_OpenPortal_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__UndyingKing_Emote_OpenPortal__UndyingKing_Emote_OpenPortal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUndyingKing_Emote_OpenPortal_C, 0x0000);
		}

		// class UAction_Consumable_OilskinTonic_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_OilskinTonic__Action_Consumable_OilskinTonic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_OilskinTonic_C, 0x0000);
		}

		// class UEmote_Talk_Random_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Talk_Random__Emote_Talk_Random_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Talk_Random_C, 0x0000);
		}

		// class AQuest_OverworldPOI_WailingWood_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_OverworldPOI_WailingWood__Quest_OverworldPOI_WailingWood_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_WailingWood_C, 0x0000);
		}

		// class USpeaker_Hunter_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Hunter__Speaker_Hunter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Hunter_C, 0x0000);
		}

		// class AQuest_MiniBoss_RootWraith_C : public AQuest_Dungeon_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_MiniBoss_RootWraith__Quest_MiniBoss_RootWraith_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_MiniBoss_RootWraith_C, 0x0000);
		}

		// class UZoneDef_Sewer_Hollows_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Sewer_Hollows__ZoneDef_Sewer_Hollows_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Sewer_Hollows_C, 0x0000);
		}

		// class AQuest_Event_TraitBook_City_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_TraitBook_City__Quest_Event_TraitBook_City_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_TraitBook_City_C, 0x0000);
		}

		// class USpeaker_RootCultist_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_RootCultist__Speaker_RootCultist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_RootCultist_C, 0x0000);
		}

		// class UZoneDef_Sewer_RootCultist_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Sewer_RootCultist__ZoneDef_Sewer_RootCultist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Sewer_RootCultist_C, 0x0000);
		}

		// class UQuestObjective_Kill_C : public UQuestObjective
		TEST_METHOD(BlueprintGeneratedClass__QuestObjective_Kill__QuestObjective_Kill_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestObjective_Kill_C, 0x0000);
		}

		// class UResourceDef_Default_C : public UResourceDef
		TEST_METHOD(BlueprintGeneratedClass__ResourceDef_Default__ResourceDef_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UResourceDef_Default_C, 0x0000);
		}

		// class UTrait_SleightOfHand_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_SleightOfHand__Trait_SleightOfHand_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_SleightOfHand_C, 0x0000);
		}

		// class UTrait_Endurance_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Endurance__Trait_Endurance_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Endurance_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_EyeOfTheStorm_C : public AImpactEffect_Projectile_Bullet_Single_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_EyeOfTheStorm__ImpactEffect_Projectile_Bullet_EyeOfTheStorm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_EyeOfTheStorm_C, 0x0000);
		}

		// class UZoneDef_Jungle_Crypts01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Jungle_Crypts01__ZoneDef_Jungle_Crypts01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Jungle_Crypts01_C, 0x0000);
		}

		// class AQuest_Event_BrutalMark_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_BrutalMark__Quest_Event_BrutalMark_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_BrutalMark_C, 0x0000);
		}

		// class AQuest_SunGate_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_SunGate__Quest_SunGate_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_SunGate_C, 0x0000);
		}

		// class UPlayFabPartyNetConnection : public UIpConnection
		TEST_METHOD(Class__PlayFabParty__PlayFabPartyNetConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayFabPartyNetConnection, 0x0000);
		}

		// class UPlayFabPartyNetDriver : public UIpNetDriver
		TEST_METHOD(Class__PlayFabParty__PlayFabPartyNetDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayFabPartyNetDriver, 0x0000);
		}

		// class UHoudiniAssetComponent : public UPrimitiveComponent
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetComponent, 0x0000);
		}

		// class UHDAComponent : public UHoudiniAssetComponent
		TEST_METHOD(Class__HoudiniEngineRuntime__HDAComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHDAComponent, 0x0000);
		}

		// class UHoudiniAsset : public UObject
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAsset, 0x0000);
		}

		// class AHoudiniAssetActor : public AActor
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AHoudiniAssetActor, 0x0000);
		}

		// class UHoudiniAssetComponentMaterials : public UObject
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetComponentMaterials)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetComponentMaterials, 0x0000);
		}

		// class UHoudiniAssetParameter : public UObject
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameter, 0x0000);
		}

		// class UHoudiniAssetInput : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetInput, 0x0000);
		}

		// class UHoudiniAssetInstanceInput : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetInstanceInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetInstanceInput, 0x0000);
		}

		// class UHoudiniAssetInstanceInputField : public UObject
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetInstanceInputField)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetInstanceInputField, 0x0000);
		}

		// class UHoudiniAssetParameterButton : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterButton)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterButton, 0x0000);
		}

		// class UHoudiniAssetParameterChoice : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterChoice)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterChoice, 0x0000);
		}

		// class UHoudiniAssetParameterColor : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterColor, 0x0000);
		}

		// class UHoudiniAssetParameterFile : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterFile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterFile, 0x0000);
		}

		// class UHoudiniAssetParameterFloat : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterFloat, 0x0000);
		}

		// class UHoudiniAssetParameterFolder : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterFolder)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterFolder, 0x0000);
		}

		// class UHoudiniAssetParameterFolderList : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterFolderList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterFolderList, 0x0000);
		}

		// class UHoudiniAssetParameterInt : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterInt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterInt, 0x0000);
		}

		// class UHoudiniAssetParameterLabel : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterLabel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterLabel, 0x0000);
		}

		// class UHoudiniAssetParameterMultiparm : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterMultiparm)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterMultiparm, 0x0000);
		}

		// class UHoudiniAssetParameterRampCurveFloat : public UCurveFloat
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterRampCurveFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterRampCurveFloat, 0x0000);
		}

		// class UHoudiniAssetParameterRampCurveColor : public UCurveLinearColor
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterRampCurveColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterRampCurveColor, 0x0000);
		}

		// class UHoudiniAssetParameterRamp : public UHoudiniAssetParameterMultiparm
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterRamp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterRamp, 0x0000);
		}

		// class UHoudiniAssetParameterSeparator : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterSeparator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterSeparator, 0x0000);
		}

		// class UHoudiniAssetParameterString : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterString)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterString, 0x0000);
		}

		// class UHoudiniAssetParameterToggle : public UHoudiniAssetParameter
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAssetParameterToggle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAssetParameterToggle, 0x0000);
		}

		// class UHoudiniAttributeDataComponent : public UActorComponent
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniAttributeDataComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniAttributeDataComponent, 0x0000);
		}

		// class UHoudiniEngineConvertBgeoCommandlet : public UCommandlet
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniEngineConvertBgeoCommandlet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniEngineConvertBgeoCommandlet, 0x0000);
		}

		// class UHoudiniEngineConvertBgeoDirCommandlet : public UCommandlet
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniEngineConvertBgeoDirCommandlet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniEngineConvertBgeoDirCommandlet, 0x0000);
		}

		// class UTestHoudiniParameterBuilder : public UObject
		TEST_METHOD(Class__HoudiniEngineRuntime__TestHoudiniParameterBuilder)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTestHoudiniParameterBuilder, 0x0000);
		}

		// class UHoudiniHandleComponent : public USceneComponent
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniHandleComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniHandleComponent, 0x0000);
		}

		// class UHoudiniInstancedActorComponent : public USceneComponent
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniInstancedActorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniInstancedActorComponent, 0x0000);
		}

		// class UHoudiniMeshSplitInstancerComponent : public USceneComponent
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniMeshSplitInstancerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniMeshSplitInstancerComponent, 0x0000);
		}

		// class UHoudiniRuntimeSettings : public UObject
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniRuntimeSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniRuntimeSettings, 0x0000);
		}

		// class UHoudiniSplineComponent : public USceneComponent
		TEST_METHOD(Class__HoudiniEngineRuntime__HoudiniSplineComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHoudiniSplineComponent, 0x0000);
		}

		// class APrefabActor : public AActor
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APrefabActor, 0x0000);
		}

		// class AReplicablePrefabActor : public APrefabActor
		TEST_METHOD(Class__PrefabricatorRuntime__ReplicablePrefabActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AReplicablePrefabActor, 0x0000);
		}

		// class UPrefabComponent : public USceneComponent
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabComponent, 0x0000);
		}

		// class APrefabRandomizer : public AActor
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabRandomizer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APrefabRandomizer, 0x0000);
		}

		// class UPrefabricatorProperty : public UObject
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabricatorProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabricatorProperty, 0x0000);
		}

		// class UPrefabricatorEventListener : public UObject
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabricatorEventListener)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabricatorEventListener, 0x0000);
		}

		// class UPrefabricatorAssetInterface : public UObject
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabricatorAssetInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabricatorAssetInterface, 0x0000);
		}

		// class UPrefabricatorAsset : public UPrefabricatorAssetInterface
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabricatorAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabricatorAsset, 0x0000);
		}

		// class UPrefabricatorAssetCollection : public UPrefabricatorAssetInterface
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabricatorAssetCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabricatorAssetCollection, 0x0000);
		}

		// class UPrefabricatorAssetUserData : public UAssetUserData
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabricatorAssetUserData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabricatorAssetUserData, 0x0000);
		}

		// class UPrefabricatorBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabricatorBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabricatorBlueprintLibrary, 0x0000);
		}

		// class UPrefabSeedLinkerComponent : public USceneComponent
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabSeedLinkerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrefabSeedLinkerComponent, 0x0000);
		}

		// class APrefabSeedLinker : public AActor
		TEST_METHOD(Class__PrefabricatorRuntime__PrefabSeedLinker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APrefabSeedLinker, 0x0000);
		}

		// class UHighlightsFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsFunctionLibrary, 0x0000);
		}

		// class UInitHighlights : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__InitHighlights)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInitHighlights, 0x0000);
		}

		// class UHighlightsConfigureAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsConfigureAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsConfigureAsync, 0x0000);
		}

		// class UHighlightsOpenGroupAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsOpenGroupAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsOpenGroupAsync, 0x0000);
		}

		// class UHighlightsCloseGroupAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsCloseGroupAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsCloseGroupAsync, 0x0000);
		}

		// class UHighlightsSetScreenshotAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsSetScreenshotAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsSetScreenshotAsync, 0x0000);
		}

		// class UHighlightsSetVideoAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsSetVideoAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsSetVideoAsync, 0x0000);
		}

		// class UHighlightsSummaryAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsSummaryAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsSummaryAsync, 0x0000);
		}

		// class UHighlightsGetNumberAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__HighlightsGetNumberAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHighlightsGetNumberAsync, 0x0000);
		}

		// class URequestPermissionsAsync : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__NVIDIAGfeSDK__RequestPermissionsAsync)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URequestPermissionsAsync, 0x0000);
		}

		// class UChromaSDKPluginAnimation1DObject : public UObject
		TEST_METHOD(Class__ChromaSDKPlugin__ChromaSDKPluginAnimation1DObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChromaSDKPluginAnimation1DObject, 0x0000);
		}

		// class UChromaSDKPluginAnimation2DObject : public UObject
		TEST_METHOD(Class__ChromaSDKPlugin__ChromaSDKPluginAnimation2DObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChromaSDKPluginAnimation2DObject, 0x0000);
		}

		// class UChromaSDKPluginBPLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__ChromaSDKPlugin__ChromaSDKPluginBPLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChromaSDKPluginBPLibrary, 0x0000);
		}

		// class UAppleImageUtilsBaseAsyncTaskBlueprintProxy : public UObject
		TEST_METHOD(Class__AppleImageUtils__AppleImageUtilsBaseAsyncTaskBlueprintProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAppleImageUtilsBaseAsyncTaskBlueprintProxy, 0x0000);
		}

		// class UAppleImageInterface : public UInterface
		TEST_METHOD(Class__AppleImageUtils__AppleImageInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAppleImageInterface, 0x0000);
		}

		// class UAppleVisionDetectFacesAsyncTaskBlueprintProxy : public UObject
		TEST_METHOD(Class__AppleVision__AppleVisionDetectFacesAsyncTaskBlueprintProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAppleVisionDetectFacesAsyncTaskBlueprintProxy, 0x0000);
		}

		// class UEditableMeshAdapter : public UObject
		TEST_METHOD(Class__EditableMesh__EditableMeshAdapter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableMeshAdapter, 0x0000);
		}

		// class UEditableGeometryCollectionAdapter : public UEditableMeshAdapter
		TEST_METHOD(Class__EditableMesh__EditableGeometryCollectionAdapter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGeometryCollectionAdapter, 0x0000);
		}

		// class UEditableMesh : public UObject
		TEST_METHOD(Class__EditableMesh__EditableMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableMesh, 0x0000);
		}

		// class UEditableMeshFactory : public UObject
		TEST_METHOD(Class__EditableMesh__EditableMeshFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableMeshFactory, 0x0000);
		}

		// class UEditableStaticMeshAdapter : public UEditableMeshAdapter
		TEST_METHOD(Class__EditableMesh__EditableStaticMeshAdapter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableStaticMeshAdapter, 0x0000);
		}

		// class ULocationServices : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__LocationServicesBPLibrary__LocationServices)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocationServices, 0x0000);
		}

		// class ULocationServicesImpl : public UObject
		TEST_METHOD(Class__LocationServicesBPLibrary__LocationServicesImpl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocationServicesImpl, 0x0000);
		}

		// class UAction_Invulnerable_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Invulnerable__Action_Invulnerable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Invulnerable_C, 0x0000);
		}

		// class UAction_Consumable_HydroCoolant_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_HydroCoolant__Action_Consumable_HydroCoolant_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_HydroCoolant_C, 0x0000);
		}

		// class UAction_Root_Hollow_Interactive_Damage_Kill_C : public UAction_Interactive_Damage_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Root_Hollow_Interactive_Damage_Kill__Action_Root_Hollow_Interactive_Damage_Kill_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Root_Hollow_Interactive_Damage_Kill_C, 0x0000);
		}

		// class UAction_Root_Hollow_Interactive_Damage_C : public UAction_Interactive_Damage_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Root_Hollow_Interactive_Damage__Action_Root_Hollow_Interactive_Damage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Root_Hollow_Interactive_Damage_C, 0x0000);
		}

		// class UMovieSceneTransformOrigin : public UInterface
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneTransformOrigin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneTransformOrigin, 0x0000);
		}

		// class UMovieScene3DConstraintSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DConstraintSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DConstraintSection, 0x0000);
		}

		// class UMovieScene3DAttachSection : public UMovieScene3DConstraintSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DAttachSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DAttachSection, 0x0000);
		}

		// class UMovieScene3DConstraintTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DConstraintTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DConstraintTrack, 0x0000);
		}

		// class UMovieScene3DAttachTrack : public UMovieScene3DConstraintTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DAttachTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DAttachTrack, 0x0000);
		}

		// class UMovieScene3DPathSection : public UMovieScene3DConstraintSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DPathSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DPathSection, 0x0000);
		}

		// class UMovieScene3DPathTrack : public UMovieScene3DConstraintTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DPathTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DPathTrack, 0x0000);
		}

		// class UMovieScene3DTransformSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DTransformSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DTransformSection, 0x0000);
		}

		// class UMovieScenePropertyTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScenePropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScenePropertyTrack, 0x0000);
		}

		// class UMovieScene3DTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DTransformTrack, 0x0000);
		}

		// class UMovieSceneActorReferenceSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneActorReferenceSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneActorReferenceSection, 0x0000);
		}

		// class UMovieSceneActorReferenceTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneActorReferenceTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneActorReferenceTrack, 0x0000);
		}

		// class UMovieSceneAudioSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneAudioSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAudioSection, 0x0000);
		}

		// class UMovieSceneAudioTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneAudioTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAudioTrack, 0x0000);
		}

		// class UMovieSceneBoolSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneBoolSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBoolSection, 0x0000);
		}

		// class UMovieSceneBoolTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneBoolTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBoolTrack, 0x0000);
		}

		// class UMovieSceneByteSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneByteSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneByteSection, 0x0000);
		}

		// class UMovieSceneByteTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneByteTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneByteTrack, 0x0000);
		}

		// class UMovieSceneCameraAnimSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraAnimSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraAnimSection, 0x0000);
		}

		// class UMovieSceneCameraAnimTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraAnimTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraAnimTrack, 0x0000);
		}

		// class UMovieSceneCameraCutSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraCutSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraCutSection, 0x0000);
		}

		// class UMovieSceneCameraCutTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraCutTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraCutTrack, 0x0000);
		}

		// class UMovieSceneCameraShakeSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraShakeSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraShakeSection, 0x0000);
		}

		// class UMovieSceneCameraShakeTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraShakeTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraShakeTrack, 0x0000);
		}

		// class UMovieSceneCinematicShotSection : public UMovieSceneSubSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCinematicShotSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCinematicShotSection, 0x0000);
		}

		// class UMovieSceneCinematicShotTrack : public UMovieSceneSubTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCinematicShotTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCinematicShotTrack, 0x0000);
		}

		// class UMovieSceneColorSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneColorSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneColorSection, 0x0000);
		}

		// class UMovieSceneColorTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneColorTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneColorTrack, 0x0000);
		}

		// class UMovieSceneEnumSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEnumSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEnumSection, 0x0000);
		}

		// class UMovieSceneEnumTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEnumTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEnumTrack, 0x0000);
		}

		// class UMovieSceneEulerTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEulerTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEulerTransformTrack, 0x0000);
		}

		// class UMovieSceneEventSectionBase : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventSectionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventSectionBase, 0x0000);
		}

		// class UMovieSceneEventRepeaterSection : public UMovieSceneEventSectionBase
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventRepeaterSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventRepeaterSection, 0x0000);
		}

		// class UMovieSceneEventSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventSection, 0x0000);
		}

		// class UMovieSceneEventTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventTrack, 0x0000);
		}

		// class UMovieSceneEventTriggerSection : public UMovieSceneEventSectionBase
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventTriggerSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventTriggerSection, 0x0000);
		}

		// class UMovieSceneFloatSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFloatSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFloatSection, 0x0000);
		}

		// class UMovieSceneFadeSection : public UMovieSceneFloatSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFadeSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFadeSection, 0x0000);
		}

		// class UMovieSceneFloatTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFloatTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFloatTrack, 0x0000);
		}

		// class UMovieSceneFadeTrack : public UMovieSceneFloatTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFadeTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFadeTrack, 0x0000);
		}

		// class UMovieSceneIntegerSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneIntegerSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneIntegerSection, 0x0000);
		}

		// class UMovieSceneIntegerTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneIntegerTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneIntegerTrack, 0x0000);
		}

		// class UMovieSceneLevelVisibilitySection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneLevelVisibilitySection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneLevelVisibilitySection, 0x0000);
		}

		// class UMovieSceneLevelVisibilityTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneLevelVisibilityTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneLevelVisibilityTrack, 0x0000);
		}

		// class UMovieSceneMaterialTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneMaterialTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMaterialTrack, 0x0000);
		}

		// class UMovieSceneMaterialParameterCollectionTrack : public UMovieSceneMaterialTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneMaterialParameterCollectionTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMaterialParameterCollectionTrack, 0x0000);
		}

		// class UMovieSceneComponentMaterialTrack : public UMovieSceneMaterialTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneComponentMaterialTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneComponentMaterialTrack, 0x0000);
		}

		// class UMovieSceneObjectPropertySection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneObjectPropertySection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneObjectPropertySection, 0x0000);
		}

		// class UMovieSceneObjectPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneObjectPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneObjectPropertyTrack, 0x0000);
		}

		// class UMovieSceneParameterSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParameterSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParameterSection, 0x0000);
		}

		// class UMovieSceneParticleParameterTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParticleParameterTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParticleParameterTrack, 0x0000);
		}

		// class UMovieSceneParticleSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParticleSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParticleSection, 0x0000);
		}

		// class UMovieSceneParticleTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParticleTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParticleTrack, 0x0000);
		}

		// class UMovieScenePrimitiveMaterialSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScenePrimitiveMaterialSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScenePrimitiveMaterialSection, 0x0000);
		}

		// class UMovieScenePrimitiveMaterialTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScenePrimitiveMaterialTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScenePrimitiveMaterialTrack, 0x0000);
		}

		// class UMovieSceneSkeletalAnimationSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSkeletalAnimationSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSkeletalAnimationSection, 0x0000);
		}

		// class UMovieSceneSkeletalAnimationTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSkeletalAnimationTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSkeletalAnimationTrack, 0x0000);
		}

		// class UMovieSceneSlomoSection : public UMovieSceneFloatSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSlomoSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSlomoSection, 0x0000);
		}

		// class UMovieSceneSlomoTrack : public UMovieSceneFloatTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSlomoTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSlomoTrack, 0x0000);
		}

		// class UMovieSceneSpawnSection : public UMovieSceneBoolSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSpawnSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSpawnSection, 0x0000);
		}

		// class UMovieSceneSpawnTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSpawnTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSpawnTrack, 0x0000);
		}

		// class UMovieSceneStringSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneStringSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneStringSection, 0x0000);
		}

		// class UMovieSceneStringTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneStringTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneStringTrack, 0x0000);
		}

		// class UMovieSceneTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneTransformTrack, 0x0000);
		}

		// class UMovieSceneVectorSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneVectorSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneVectorSection, 0x0000);
		}

		// class UMovieSceneVectorTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneVectorTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneVectorTrack, 0x0000);
		}

		// class UMovieSceneVisibilityTrack : public UMovieSceneBoolTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneVisibilityTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneVisibilityTrack, 0x0000);
		}

		// class UCineCameraComponent : public UCameraComponent
		TEST_METHOD(Class__CinematicCamera__CineCameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCineCameraComponent, 0x0000);
		}

		// class ACameraRig_Crane : public AActor
		TEST_METHOD(Class__CinematicCamera__CameraRig_Crane)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraRig_Crane, 0x0000);
		}

		// class ACameraRig_Rail : public AActor
		TEST_METHOD(Class__CinematicCamera__CameraRig_Rail)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraRig_Rail, 0x0000);
		}

		// class ACineCameraActor : public ACameraActor
		TEST_METHOD(Class__CinematicCamera__CineCameraActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACineCameraActor, 0x0000);
		}

		// class UAssetRegistryImpl : public UObject
		TEST_METHOD(Class__AssetRegistry__AssetRegistryImpl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetRegistryImpl, 0x0000);
		}

		// class UAssetRegistryHelpers : public UObject
		TEST_METHOD(Class__AssetRegistry__AssetRegistryHelpers)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetRegistryHelpers, 0x0000);
		}

		// class UAssetRegistry : public UInterface
		TEST_METHOD(Class__AssetRegistry__AssetRegistry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetRegistry, 0x0000);
		}

		// class AResource_Wasteland_SentinelShard_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_SentinelShard__Resource_Wasteland_SentinelShard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_SentinelShard_C, 0x0000);
		}

		// class AResource_Wasteland_BlackTear_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_BlackTear__Resource_Wasteland_BlackTear_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_BlackTear_C, 0x0000);
		}

		// class AMod_HowlersImmunity_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_HowlersImmunity__Mod_HowlersImmunity_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_HowlersImmunity_C, 0x0000);
		}

		// class AMod_UnstableQuills_C : public ARangedWeapon_Mod_Action_MultiTarget_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_UnstableQuills__Mod_UnstableQuills_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_UnstableQuills_C, 0x0000);
		}

		// class AMod_RiftWalker_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_RiftWalker__Mod_RiftWalker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_RiftWalker_C, 0x0000);
		}

		// class AResource_Snow_SilverFragment_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Snow_SilverFragment__Resource_Snow_SilverFragment_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Snow_SilverFragment_C, 0x0000);
		}

		// class AResource_Snow_ObryksBracelet_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Snow_ObryksBracelet__Resource_Snow_ObryksBracelet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Snow_ObryksBracelet_C, 0x0000);
		}

		// class AResource_Pan_KinCallersBell_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_KinCallersBell__Resource_Pan_KinCallersBell_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_KinCallersBell_C, 0x0000);
		}

		// class UItemType_Helmet_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Helmet__ItemType_Helmet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Helmet_C, 0x0000);
		}

		// class UItemType_Flashlight_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Flashlight__ItemType_Flashlight_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Flashlight_C, 0x0000);
		}

		// class UItemType_Body_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Body__ItemType_Body_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Body_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Fist_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Fist__ImpactEffect_Weapon_Fist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Fist_C, 0x0000);
		}

		// class UDamageType_Shock_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Shock_Mod__DamageType_Shock_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Shock_Mod_C, 0x0000);
		}

		// class UDamageType_AOE_Shock_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Shock_Mod__DamageType_AOE_Shock_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Shock_Mod_C, 0x0000);
		}

		// class UDamageType_AOE_Shock_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Shock_FromPlayer_Mod__DamageType_AOE_Shock_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Shock_FromPlayer_Mod_C, 0x0000);
		}

		// class UDamageType_InstaKill_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_InstaKill__DamageType_InstaKill_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_InstaKill_C, 0x0000);
		}

		// class UDamageType_FallDamage_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_FallDamage__DamageType_FallDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_FallDamage_C, 0x0000);
		}

		// class ADialog_Cinematic_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Cinematic__Dialog_Cinematic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Cinematic_C, 0x0000);
		}

		// class ADialog_QuestDebug_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_QuestDebug__Dialog_QuestDebug_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_QuestDebug_C, 0x0000);
		}

		// class AItem_Material_Base_C : public ABP_Item_C
		TEST_METHOD(BlueprintGeneratedClass__Item_Material_Base__Item_Material_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Material_Base_C, 0x0000);
		}

		// class UMiniMap_Remnant_TemporaryWaypoint_C : public UMiniMap_Remnant_C
		TEST_METHOD(BlueprintGeneratedClass__MiniMap_Remnant_TemporaryWaypoint__MiniMap_Remnant_TemporaryWaypoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMiniMap_Remnant_TemporaryWaypoint_C, 0x0000);
		}

		// class UAction_Character_Root_Wraith_Screamer_Summon_C : public UAction_Spawn_EncounterList_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Wraith_Screamer_Summon__Action_Character_Root_Wraith_Screamer_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Wraith_Screamer_Summon_C, 0x0000);
		}

		// class UWidget_QuestNotification_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification__Widget_QuestNotification_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_C, 0x0000);
		}

		// class UWidget_HUD_Survival_TraitList_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HUD_Survival_TraitList__Widget_HUD_Survival_TraitList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HUD_Survival_TraitList_C, 0x0000);
		}

		// class UWidget_HUD_Survival_Trait_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HUD_Survival_Trait__Widget_HUD_Survival_Trait_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HUD_Survival_Trait_C, 0x0000);
		}

		// class UWidget_HUD_QuickSelectSlot_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HUD_QuickSelectSlot__Widget_HUD_QuickSelectSlot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HUD_QuickSelectSlot_C, 0x0000);
		}

		// class AFieldSystemActor : public AActor
		TEST_METHOD(Class__FieldSystemEngine__FieldSystemActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFieldSystemActor, 0x0000);
		}

		// class UFieldSystemComponent : public UPrimitiveComponent
		TEST_METHOD(Class__FieldSystemEngine__FieldSystemComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFieldSystemComponent, 0x0000);
		}

		// class UCamera_Ladder_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Ladder__Camera_Ladder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Ladder_C, 0x0000);
		}

		// class UCamera_Emote_Freeze_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Emote_Freeze__Camera_Emote_Freeze_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Emote_Freeze_C, 0x0000);
		}

		// class UCamera_Dodge_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Dodge__Camera_Dodge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Dodge_C, 0x0000);
		}

		// class UCamera_Aim_Scoped_Standing_Extend_C : public UCamera_Aim_Scoped_Standing_C
		TEST_METHOD(BlueprintGeneratedClass__Camera_Aim_Scoped_Standing_Extend__Camera_Aim_Scoped_Standing_Extend_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Aim_Scoped_Standing_Extend_C, 0x0000);
		}

		// class UCamera_Aim_Scoped_Standing_C : public UCamera_Aim_Scoped_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Camera_Aim_Scoped_Standing__Camera_Aim_Scoped_Standing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Aim_Scoped_Standing_C, 0x0000);
		}

		// class UCamera_Aim_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Aim__Camera_Aim_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Aim_C, 0x0000);
		}

		// class UTraversal_LadderParams_C : public ULadderParams
		TEST_METHOD(BlueprintGeneratedClass__Traversal_LadderParams__Traversal_LadderParams_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTraversal_LadderParams_C, 0x0000);
		}

		// class UDamageClass_Mod_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Mod__DamageClass_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Mod_C, 0x0000);
		}

		// class UDamageClass_Base_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Base__DamageClass_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Base_C, 0x0000);
		}

		// class UAction_Character_Root_Splitter_FireProjectile_Left_C : public UAction_Fire_Projectile_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Splitter_FireProjectile_Left__Action_Character_Root_Splitter_FireProjectile_Left_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Splitter_FireProjectile_Left_C, 0x0000);
		}

		// class UDamageClass_Physical_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Physical__DamageClass_Physical_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Physical_C, 0x0000);
		}

		// class UDamageClass_Corrosive_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Corrosive__DamageClass_Corrosive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Corrosive_C, 0x0000);
		}

		// class UCameraShake_Scream_Long_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Scream_Long__CameraShake_Scream_Long_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Scream_Long_C, 0x0000);
		}

		// class UArmorSkill_TreasureHunter_C : public UArmorSkill_ModifySingleStat_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_TreasureHunter__ArmorSkill_TreasureHunter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_TreasureHunter_C, 0x0000);
		}

		// class UCharacter_Player_Female_AnimDynamics_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Player_Female_AnimDynamics_AnimBP__Character_Player_Female_AnimDynamics_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Player_Female_AnimDynamics_AnimBP_C, 0x0000);
		}

		// class UAction_Character_Root_Broken_FireProjectile_Left_C : public UAction_Fire_Projectile_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Broken_FireProjectile_Left__Action_Character_Root_Broken_FireProjectile_Left_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Broken_FireProjectile_Left_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_12_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_13__BP_City_Corpse_Vingette_12_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_12_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_10_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_11__BP_City_Corpse_Vingette_10_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_10_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_08_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_08__BP_City_Corpse_Vingette_08_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_08_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_04_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_04__BP_City_Corpse_Vingette_04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_04_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_02_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_02__BP_City_Corpse_Vingette_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_02_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_01_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_01__BP_City_Corpse_Vingette_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_01_C, 0x0000);
		}

		// class UWeapon_ComputedStats_C : public UComputedStats
		TEST_METHOD(BlueprintGeneratedClass__Weapon_ComputedStats__Weapon_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_ComputedStats_C, 0x0000);
		}

		// class UDamageType_Melee_Power_01_HeavyHit_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_01_HeavyHit__DamageType_Melee_Power_01_HeavyHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_01_HeavyHit_C, 0x0000);
		}

		// class UAction_AOE_Attack_Hammer_Slam_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Attack_Hammer_Slam__Action_AOE_Attack_Hammer_Slam_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Attack_Hammer_Slam_C, 0x0000);
		}

		// class UDamageType_DOT_Fire_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Fire__DamageType_DOT_Fire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Fire_C, 0x0000);
		}

		// class UAction_ForceImpulse_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_ForceImpulse__Action_ForceImpulse_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_ForceImpulse_C, 0x0000);
		}

		// class UTutorial_Checkpoint_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_Checkpoint__Tutorial_Checkpoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_Checkpoint_C, 0x0000);
		}

		// class UWidgetPingWheel_Item_C : public UWidget_PingWheelContext_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__WidgetPingWheel_Item__WidgetPingWheel_Item_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetPingWheel_Item_C, 0x0000);
		}

		// class UDamageType_AOE_Frost_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Frost_Mod__DamageType_AOE_Frost_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Frost_Mod_C, 0x0000);
		}

		// class UTrait_Vaccine_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Vaccine__Trait_Vaccine_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Vaccine_C, 0x0000);
		}

		// class UItemCategory_Trinket_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Trinket__ItemCategory_Trinket_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Trinket_C, 0x0000);
		}

		// class UTrait_TriggerHappy_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_TriggerHappy__Trait_TriggerHappy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_TriggerHappy_C, 0x0000);
		}

		// class UButtonWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ButtonWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButtonWidgetStyle, 0x0000);
		}

		// class UCheckBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__CheckBoxWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckBoxWidgetStyle, 0x0000);
		}

		// class UComboBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ComboBoxWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboBoxWidgetStyle, 0x0000);
		}

		// class UComboButtonWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ComboButtonWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboButtonWidgetStyle, 0x0000);
		}

		// class UEditableTextBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__EditableTextBoxWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableTextBoxWidgetStyle, 0x0000);
		}

		// class UEditableTextWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__EditableTextWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableTextWidgetStyle, 0x0000);
		}

		// class UProgressWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ProgressWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProgressWidgetStyle, 0x0000);
		}

		// class UScrollBarWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ScrollBarWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBarWidgetStyle, 0x0000);
		}

		// class UScrollBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ScrollBoxWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBoxWidgetStyle, 0x0000);
		}

		// class USlateSettings : public UObject
		TEST_METHOD(Class__Slate__SlateSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateSettings, 0x0000);
		}

		// class USpinBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__SpinBoxWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpinBoxWidgetStyle, 0x0000);
		}

		// class UTextBlockWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__TextBlockWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBlockWidgetStyle, 0x0000);
		}

		// class UWidget_Tutorial_Base_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Tutorial_Base__Widget_Tutorial_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Tutorial_Base_C, 0x0000);
		}

		// class UMediaSource : public UObject
		TEST_METHOD(Class__MediaAssets__MediaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaSource, 0x0000);
		}

		// class UBaseMediaSource : public UMediaSource
		TEST_METHOD(Class__MediaAssets__BaseMediaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBaseMediaSource, 0x0000);
		}

		// class UFileMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__MediaAssets__FileMediaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFileMediaSource, 0x0000);
		}

		// class UMediaBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__MediaAssets__MediaBlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaBlueprintFunctionLibrary, 0x0000);
		}

		// class UMediaPlayer : public UObject
		TEST_METHOD(Class__MediaAssets__MediaPlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaPlayer, 0x0000);
		}

		// class UMediaPlaylist : public UObject
		TEST_METHOD(Class__MediaAssets__MediaPlaylist)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaPlaylist, 0x0000);
		}

		// class UMediaSoundComponent : public USynthComponent
		TEST_METHOD(Class__MediaAssets__MediaSoundComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaSoundComponent, 0x0000);
		}

		// class UMediaTexture : public UTexture
		TEST_METHOD(Class__MediaAssets__MediaTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaTexture, 0x0000);
		}

		// class UPlatformMediaSource : public UMediaSource
		TEST_METHOD(Class__MediaAssets__PlatformMediaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformMediaSource, 0x0000);
		}

		// class UStreamMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__MediaAssets__StreamMediaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStreamMediaSource, 0x0000);
		}

		// class UTimeSynchronizableMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__MediaAssets__TimeSynchronizableMediaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeSynchronizableMediaSource, 0x0000);
		}

		// class AInteractive_Checkpoint_C : public ACheckpoint
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Checkpoint__Interactive_Checkpoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Checkpoint_C, 0x0000);
		}

		// class UBP_ContextualDialogComponent_C : public UContextualDialogComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_ContextualDialogComponent__BP_ContextualDialogComponent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_ContextualDialogComponent_C, 0x0000);
		}

		// class UAward_Trinket_BandOfAccord_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Trinket_BandOfAccord__Award_Trinket_BandOfAccord_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Trinket_BandOfAccord_C, 0x0000);
		}

		// class UAward_Emote_Wave_C : public UEmoteAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Emote_Wave__Award_Emote_Wave_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Emote_Wave_C, 0x0000);
		}

		// class AWeapon_Shotgun_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Shotgun__Weapon_Shotgun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Shotgun_C, 0x0000);
		}

		// class UCharacter_Frog_Priest_AINearByTargetSelector_C : public UAICharacterNearbyTargetSelector
		TEST_METHOD(BlueprintGeneratedClass__Character_Frog_Priest_AINearByTargetSelector__Character_Frog_Priest_AINearByTargetSelector_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Frog_Priest_AINearByTargetSelector_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_Repulsor_Banish_C : public AImpactEffect_Projectile_Bullet_Single_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_Repulsor_Banish__ImpactEffect_Projectile_Bullet_Repulsor_Banish_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_Repulsor_Banish_C, 0x0000);
		}

		// class ABP_RiftWalker_PostProcessFX_Teammates_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_RiftWalker_PostProcessFX_Teammates__BP_RiftWalker_PostProcessFX_Teammates_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RiftWalker_PostProcessFX_Teammates_C, 0x0000);
		}

		// class ABP_RiftWalker_PostProcessFX_Player_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_RiftWalker_PostProcessFX_Player__BP_RiftWalker_PostProcessFX_Player_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RiftWalker_PostProcessFX_Player_C, 0x0000);
		}

		// class UAction_Trinket_BrutalMark_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Trinket_BrutalMark__Action_Trinket_BrutalMark_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Trinket_BrutalMark_C, 0x0000);
		}

		// class UAction_AOE_Trinket_SoulEmber_C : public UAction_AOE_ForceImpulse_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Trinket_SoulEmber__Action_AOE_Trinket_SoulEmber_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Trinket_SoulEmber_C, 0x0000);
		}

		// class UAction_Mod_FrozenMist_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_FrozenMist__Action_Mod_FrozenMist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_FrozenMist_C, 0x0000);
		}

		// class UAction_PlayerInPlayerBase_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_PlayerInPlayerBase__Action_PlayerInPlayerBase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_PlayerInPlayerBase_C, 0x0000);
		}

		// class UWidget_InspectableBar_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InspectableBar__Widget_InspectableBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InspectableBar_C, 0x0000);
		}

		// class ACity_Street_END_Transition_PocketDungeon_02_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_10__City_Street_END_Transition_PocketDungeon_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_END_Transition_PocketDungeon_02_C, 0x0000);
		}

		// class UWidget_ActionIcon_Simple_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ActionIcon_Simple__Widget_ActionIcon_Simple_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ActionIcon_Simple_C, 0x0000);
		}

		// class ABP_City_Sawhorse_A_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Sawhorse_A_Breakable_A__BP_City_Sawhorse_A_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Sawhorse_A_Breakable_A_C, 0x0000);
		}

		// class ABP_RandomMapActor_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomMapActor__BP_RandomMapActor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomMapActor_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_B_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_31__City_Street_VISTA_04_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_B_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_27__City_Street_VISTA_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_29__City_Street_VISTA_04_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C_C, 0x0000);
		}

		// class UDamageType_Corrosive_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Corrosive_Mod__DamageType_Corrosive_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Corrosive_Mod_C, 0x0000);
		}

		// class UDamageType_DOT_Root_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Root__DamageType_DOT_Root_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Root_C, 0x0000);
		}

		// class UAction_MantleOfThorns_Buff_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_MantleOfThorns_Buff__Action_MantleOfThorns_Buff_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_MantleOfThorns_Buff_C, 0x0000);
		}

		// class UAction_Mod_CorrosiveAura_Activate_C : public UAction_Aura_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_CorrosiveAura_Activate__Action_Mod_CorrosiveAura_Activate_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_CorrosiveAura_Activate_C, 0x0000);
		}

		// class UAction_Root_Cloud_DOT_C : public UAction_DOT_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Root_Cloud_DOT__Action_Root_Cloud_DOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Root_Cloud_DOT_C, 0x0000);
		}

		// class AMod_UnstableQuills_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_UnstableQuills_Projectile__Mod_UnstableQuills_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_UnstableQuills_Projectile_C, 0x0000);
		}

		// class UClothingAssetCustomData : public UObject
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingAssetCustomData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingAssetCustomData, 0x0000);
		}

		// class UClothingAsset : public UClothingAssetBase
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingAsset, 0x0000);
		}

		// class UClothingSimulationFactoryNv : public UClothingSimulationFactory
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingSimulationFactoryNv)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationFactoryNv, 0x0000);
		}

		// class UClothingSimulationInteractorNv : public UClothingSimulationInteractor
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingSimulationInteractorNv)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationInteractorNv, 0x0000);
		}

		// class UAction_Mod_UnstableQuilFireProjectiles_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_UnstableQuilFireProjectiles__Action_Mod_UnstableQuilFireProjectiles_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_UnstableQuilFireProjectiles_C, 0x0000);
		}

		// class ABP_Wasteland_Sentinel_Beam_C : public ABP_Beam_Projectile_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Wasteland_Sentinel_Beam__BP_Wasteland_Sentinel_Beam_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Wasteland_Sentinel_Beam_C, 0x0000);
		}

		// class UWidget_Quest_Debug_Errors_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Quest_Debug_Errors__Widget_Quest_Debug_Errors_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Quest_Debug_Errors_C, 0x0000);
		}

		// class UWeaponProfile_Mod_SporeShot_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_SporeShot__WeaponProfile_Mod_SporeShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_SporeShot_C, 0x0000);
		}

		// class UWeaponProfile_Mod_TentacleShot_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_TentacleShot__WeaponProfile_Mod_TentacleShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_TentacleShot_C, 0x0000);
		}

		// class AMod_TentacleShot_Projectile_C : public ABP_Projectile_GroundTarget_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_TentacleShot_Projectile__Mod_TentacleShot_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_TentacleShot_Projectile_C, 0x0000);
		}

		// class UWidget_Options_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Options__Widget_Options_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Options_C, 0x0000);
		}

		// class UAudioCaptureComponent : public USynthComponent
		TEST_METHOD(Class__AudioCapture__AudioCaptureComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioCaptureComponent, 0x0000);
		}

		// class UMod_IronSentinel_AnimBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Mod_IronSentinel_AnimBP__Mod_IronSentinel_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMod_IronSentinel_AnimBP_C, 0x0000);
		}

		// class UWidget_QuestAndMap_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestAndMap__Widget_QuestAndMap_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestAndMap_C, 0x0000);
		}

		// class AMod_VeryGoodBoy_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_VeryGoodBoy__Mod_VeryGoodBoy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_VeryGoodBoy_C, 0x0000);
		}

		// class ACharacter_Root_Priest_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Priest_AIController__Character_Root_Priest_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Priest_AIController_C, 0x0000);
		}

		// class ACharacter_Root_Hollow_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Hollow__Character_Root_Hollow_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Hollow_C, 0x0000);
		}

		// class UWidget_Wounded_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Wounded__Widget_Wounded_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Wounded_C, 0x0000);
		}

		// class UWidget_QuestNotification_ObjectiveSuccess_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification_ObjectiveSuccess__Widget_QuestNotification_ObjectiveSuccess_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_ObjectiveSuccess_C, 0x0000);
		}

		// class UWidget_QuestNotification_Quest_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification_Quest__Widget_QuestNotification_Quest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_Quest_C, 0x0000);
		}

		// class ACharacter_Wasteland_Beckon_Minion_C : public ACharacter_Wasteland_Skull_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_Beckon_Minion__Character_Wasteland_Beckon_Minion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_Beckon_Minion_C, 0x0000);
		}

		// class UWidget_TileDebug_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TileDebug__Widget_TileDebug_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TileDebug_C, 0x0000);
		}

		// class UWidget_Buff_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Buff__Widget_Buff_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Buff_C, 0x0000);
		}

		// class UWidget_StatusEffect_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatusEffect__Widget_StatusEffect_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatusEffect_C, 0x0000);
		}

		// class ASpawnPoint_NPC_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_NPC__SpawnPoint_NPC_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_NPC_C, 0x0000);
		}

		// class UCharacter_Player_Male_AnimsBP_C : public UGunnerAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Player_Male_AnimsBP__Character_Player_Male_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Player_Male_AnimsBP_C, 0x0000);
		}

		// class AMod_WildfireShot_FirePuddle_C : public ABP_Aura_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_WildfireShot_FirePuddle__Mod_WildfireShot_FirePuddle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_WildfireShot_FirePuddle_C, 0x0000);
		}

		// class ABP_Aura_Base_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Aura_Base__BP_Aura_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Aura_Base_C, 0x0000);
		}

		// class UAction_Mod_Incinerator_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Incinerator__Action_Mod_Incinerator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Incinerator_C, 0x0000);
		}

		// class UWeapon_Mod_SporeShot_Actions_C : public UAction_List_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Mod_SporeShot_Actions__Weapon_Mod_SporeShot_Actions_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Mod_SporeShot_Actions_C, 0x0000);
		}

		// class UAction_Revive_Invulnerable_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Revive_Invulnerable__Action_Revive_Invulnerable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Revive_Invulnerable_C, 0x0000);
		}

		// class AWeapon_Swamp_PrideOfTheIskal_C : public AWeapon_HandGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Swamp_PrideOfTheIskal__Weapon_Swamp_PrideOfTheIskal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Swamp_PrideOfTheIskal_C, 0x0000);
		}

		// class AResource_Swamp_CrystallinePlasma_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_CrystallinePlasma__Resource_Swamp_CrystallinePlasma_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_CrystallinePlasma_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Defiler_Volley_C : public AImpactEffect_Projectile_Bullet_Multiple_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Defiler_Volley__ImpactEffect_Projectile_Defiler_Volley_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Defiler_Volley_C, 0x0000);
		}

		// class UAction_Debuff_Frozen_OnEnemy_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Frozen_OnEnemy__Action_Debuff_Frozen_OnEnemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Frozen_OnEnemy_C, 0x0000);
		}

		// class UAction_Debuff_Frostbite_Stacking_OnEnemy_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Frostbite_Stacking_OnEnemy__Action_Debuff_Frostbite_Stacking_OnEnemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Frostbite_Stacking_OnEnemy_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Arrow_Devastator_C : public AImpactEffect_Projectile_Arrow_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Arrow_Devastator__ImpactEffect_Projectile_Arrow_Devastator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Arrow_Devastator_C, 0x0000);
		}

		// class UDamageType_Root_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Root__DamageType_Root_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Root_C, 0x0000);
		}

		// class AMod_WildfireShot_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_WildfireShot__Mod_WildfireShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_WildfireShot_C, 0x0000);
		}

		// class UCharacter_Root_Priest_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Root_Priest_AnimsBP__Character_Root_Priest_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Priest_AnimsBP_C, 0x0000);
		}

		// class AResource_Scraps_C : public ABP_Item_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Scraps__Resource_Scraps_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Scraps_C, 0x0000);
		}

		// class UCharacter_Wasteland_Skull_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Wasteland_Skull_AnimsBP__Character_Wasteland_Skull_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Wasteland_Skull_AnimsBP_C, 0x0000);
		}

		// class UAction_Character_Root_Frog_Fire_Projectile_C : public UAction_Fire_Projectile_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Frog_Fire_Projectile__Action_Character_Root_Frog_Fire_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Frog_Fire_Projectile_C, 0x0000);
		}

		// class UCharacter_Swamp_ElfQueen_Bug_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Swamp_ElfQueen_Bug_AnimBP__Character_Swamp_ElfQueen_Bug_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Swamp_ElfQueen_Bug_AnimBP_C, 0x0000);
		}

		// class UWidget_KickBan_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_KickBan__Widget_KickBan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_KickBan_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Root_Rot_Bomb_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Root_Rot_Bomb__ImpactEffect_Projectile_Root_Rot_Bomb_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Root_Rot_Bomb_C, 0x0000);
		}

		// class UAction_Mod_GravityCoreShot_PullForce_OnImpact_C : public UAction_Mod_GravityCoreShot_PullForce_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_GravityCoreShot_PullForce_OnImpact__Action_Mod_GravityCoreShot_PullForce_OnImpact_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_GravityCoreShot_PullForce_OnImpact_C, 0x0000);
		}

		// class USpeaker_Whispers_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Whispers__Speaker_Whispers_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Whispers_C, 0x0000);
		}

		// class UEmote_Talk_01_Long_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Talk_01_Long__Emote_Talk_01_Long_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Talk_01_Long_C, 0x0000);
		}

		// class USpeaker_EllenFord_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_EllenFord__Speaker_EllenFord_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_EllenFord_C, 0x0000);
		}

		// class USpeaker_Townsperson_Ella_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Townsperson_Ella__Speaker_Townsperson_Ella_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Townsperson_Ella_C, 0x0000);
		}

		// class USpeaker_Townsperson_Helen_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Townsperson_Helen__Speaker_Townsperson_Helen_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Townsperson_Helen_C, 0x0000);
		}

		// class USpeaker_Townsperson_Noah_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Townsperson_Noah__Speaker_Townsperson_Noah_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Townsperson_Noah_C, 0x0000);
		}

		// class USpeaker_Townsperson_Williams_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Townsperson_Williams__Speaker_Townsperson_Williams_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Townsperson_Williams_C, 0x0000);
		}

		// class UWidget_Debug_Property_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Debug_Property__Widget_Debug_Property_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Debug_Property_C, 0x0000);
		}

		// class ATracer_Pan_COJ_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Pan_COJ__Tracer_Pan_COJ_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Pan_COJ_C, 0x0000);
		}

		// class AMod_HiveShot_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Mod_HiveShot_Projectile__Mod_HiveShot_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_HiveShot_Projectile_C, 0x0000);
		}

		// class UWidget_ItemInfo_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemInfo__Widget_ItemInfo_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemInfo_C, 0x0000);
		}

		// class UCameraShake_SemiAuto_Medium_Firing_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_SemiAuto_Medium_Firing__CameraShake_SemiAuto_Medium_Firing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_SemiAuto_Medium_Firing_C, 0x0000);
		}

		// class AMod_Skewer_Projectile_C : public ABP_Projectile_Stick_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Skewer_Projectile__Mod_Skewer_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Skewer_Projectile_C, 0x0000);
		}

		// class AProjectile_Mod_Banish_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Mod_Banish__Projectile_Mod_Banish_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Mod_Banish_C, 0x0000);
		}

		// class UClothingAssetBase : public UObject
		TEST_METHOD(Class__ClothingSystemRuntimeInterface__ClothingAssetBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingAssetBase, 0x0000);
		}

		// class UClothingSimulationFactory : public UObject
		TEST_METHOD(Class__ClothingSystemRuntimeInterface__ClothingSimulationFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationFactory, 0x0000);
		}

		// class UClothingSimulationInteractor : public UObject
		TEST_METHOD(Class__ClothingSystemRuntimeInterface__ClothingSimulationInteractor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationInteractor, 0x0000);
		}

		// class UDamageType_AOE_WorldBreakerCharged_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_WorldBreakerCharged__DamageType_AOE_WorldBreakerCharged_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_WorldBreakerCharged_C, 0x0000);
		}

		// class UDamageType_AOE_WorldBreaker_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_WorldBreaker__DamageType_AOE_WorldBreaker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_WorldBreaker_C, 0x0000);
		}

		// class ABP_Projectile_Homing_MultiTarget_Base_C : public ABP_Projectile_Homing_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile_Homing_MultiTarget_Base__BP_Projectile_Homing_MultiTarget_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_Homing_MultiTarget_Base_C, 0x0000);
		}

		// class UWidget_NewWorldTab_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_NewWorldTab__Widget_NewWorldTab_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_NewWorldTab_C, 0x0000);
		}

		// class UWidget_StatusInfos_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatusInfos__Widget_StatusInfos_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatusInfos_C, 0x0000);
		}

		// class UWeapon_Wasteland_Defiler_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Wasteland_Defiler_AnimBP__Weapon_Wasteland_Defiler_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Wasteland_Defiler_AnimBP_C, 0x0000);
		}

		// class UWidget_ItemInfo_Base_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemInfo_Base__Widget_ItemInfo_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemInfo_Base_C, 0x0000);
		}

		// class UArmorSkill_Harden_Scurry_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Harden_Scurry__ArmorSkill_Harden_Scurry_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Harden_Scurry_C, 0x0000);
		}

		// class UAction_DOT_Bleeding_Razorstone_C : public UAction_DOT_Bleeding_C
		TEST_METHOD(BlueprintGeneratedClass__Action_DOT_Bleeding_Razorstone__Action_DOT_Bleeding_Razorstone_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_DOT_Bleeding_Razorstone_C, 0x0000);
		}

		// class UAction_Debuff_StaticField_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_StaticField__Action_Debuff_StaticField_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_StaticField_C, 0x0000);
		}

		// class UBP_PowerUser_C : public UActorComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_PowerUser__BP_PowerUser_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_PowerUser_C, 0x0000);
		}

		// class AInteractive_Fusebox_C : public ABP_Inspectable_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Fusebox__Interactive_Fusebox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Fusebox_C, 0x0000);
		}

		// class AActor_Ping_Main_C : public ARemnantPingActor
		TEST_METHOD(BlueprintGeneratedClass__Actor_Ping_Main__Actor_Ping_Main_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AActor_Ping_Main_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_19__City_Street_VISTA_03_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_13__City_Street_VISTA_04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C, 0x0000);
		}

		// class UWidget_ItemStatSkillTier_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatSkillTier__Widget_ItemStatSkillTier_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatSkillTier_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_B_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_22__City_Street_VISTA_03_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_B_C, 0x0000);
		}

		// class ABP_TOD_GF_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_TOD_GF__BP_TOD_GF_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_TOD_GF_C, 0x0000);
		}

		// class UWidget_ItemInfo_Armor_C : public UWidget_ItemInfo_Base_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemInfo_Armor__Widget_ItemInfo_Armor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemInfo_Armor_C, 0x0000);
		}

		// class Acable_mesh_small_C : public ASplineBase
		TEST_METHOD(BlueprintGeneratedClass__cable_mesh_small__cable_mesh_small_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::Acable_mesh_small_C, 0x0000);
		}

		// class UDamageType_Ranged_Shock_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Shock__DamageType_Ranged_Shock_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Shock_C, 0x0000);
		}

		// class ABP_Glass_Breakable_B_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_Breakable_B__BP_Glass_Breakable_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_Breakable_B_C, 0x0000);
		}

		// class ABP_City_OfficeRetro_Shelf_B_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeRetro_Shelf_B__BP_City_OfficeRetro_Shelf_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeRetro_Shelf_B_C, 0x0000);
		}

		// class ABP_City_OfficeRetro_Chair_B_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeRetro_Chair_B_Breakable_A__BP_City_OfficeRetro_Chair_B_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeRetro_Chair_B_Breakable_A_C, 0x0000);
		}

		// class UWIdget_StatusBase_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__WIdget_StatusBase__WIdget_StatusBase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWIdget_StatusBase_C, 0x0000);
		}

		// class AItem_Trinket_Base_C : public AEquipment
		TEST_METHOD(BlueprintGeneratedClass__Item_Trinket_Base__Item_Trinket_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Trinket_Base_C, 0x0000);
		}

		// class UAction_StatusEffect_Instant_Frostbite_C : public UAction_StatusEffect_Instant_C
		TEST_METHOD(BlueprintGeneratedClass__Action_StatusEffect_Instant_Frostbite__Action_StatusEffect_Instant_Frostbite_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_StatusEffect_Instant_Frostbite_C, 0x0000);
		}

		// class ABP_PhysicsActor_OfficeChair_C_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_OfficeChair_C__BP_PhysicsActor_OfficeChair_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_OfficeChair_C_C, 0x0000);
		}

		// class AConsumable_Bloodwort_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_Bloodwort__Consumable_Bloodwort_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_Bloodwort_C, 0x0000);
		}

		// class UAction_Debuff_Frozen_OnPlayer_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Frozen_OnPlayer__Action_Debuff_Frozen_OnPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Frozen_OnPlayer_C, 0x0000);
		}

		// class UAction_Frost_Cloud_DOT_C : public UAction_DOT_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Frost_Cloud_DOT__Action_Frost_Cloud_DOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Frost_Cloud_DOT_C, 0x0000);
		}

		// class AWeapon_Hammer_C : public AWeapon_Melee_SkinnedBase_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Hammer__Weapon_Hammer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Hammer_C, 0x0000);
		}

		// class UWidget_PingWheelContext_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_PingWheelContext__Widget_PingWheelContext_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_PingWheelContext_C, 0x0000);
		}

		// class ABP_PhysicsActor_GasTank_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_GasTank__BP_PhysicsActor_GasTank_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_GasTank_C, 0x0000);
		}

		// class ABP_Light_A_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Light_A__BP_Light_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Light_A_C, 0x0000);
		}

		// class ABP_City_Box_03_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Box_03__BP_City_Box_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Box_03_C, 0x0000);
		}

		// class UWidget_StatusBar_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatusBar__Widget_StatusBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatusBar_C, 0x0000);
		}

		// class UWidget_StatusEffects_C : public UWIdget_StatusBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatusEffects__Widget_StatusEffects_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatusEffects_C, 0x0000);
		}

		// class UMobileInstalledContent : public UObject
		TEST_METHOD(Class__MobilePatchingUtils__MobileInstalledContent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMobileInstalledContent, 0x0000);
		}

		// class UMobilePendingContent : public UMobileInstalledContent
		TEST_METHOD(Class__MobilePatchingUtils__MobilePendingContent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMobilePendingContent, 0x0000);
		}

		// class UMobilePatchingLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__MobilePatchingUtils__MobilePatchingLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMobilePatchingLibrary, 0x0000);
		}

		// class UWidget_HealthBar_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HealthBar__Widget_HealthBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HealthBar_C, 0x0000);
		}

		// class ABP_Phonebooth_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Phonebooth__BP_Phonebooth_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Phonebooth_C, 0x0000);
		}

		// class UCameraShake_FullAuto_Medium_Firing_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_FullAuto_Medium_Firing__CameraShake_FullAuto_Medium_Firing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_FullAuto_Medium_Firing_C, 0x0000);
		}

		// class UDamageClass_Boss_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Boss__DamageClass_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Boss_C, 0x0000);
		}

		// class ABP_Glass_Breakable_C_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_Breakable_C__BP_Glass_Breakable_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_Breakable_C_C, 0x0000);
		}

		// class ABP_City_OfficeTable_Cover_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeTable_Cover_A__BP_City_OfficeTable_Cover_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeTable_Cover_A_C, 0x0000);
		}

		// class ADialog_Base_C : public ARemnantUIActor
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Base__Dialog_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Base_C, 0x0000);
		}

		// class UWidget_WaypointMenu_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_WaypointMenu__Widget_WaypointMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_WaypointMenu_C, 0x0000);
		}

		// class UWidget_BookPages_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BookPages__Widget_BookPages_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BookPages_C, 0x0000);
		}

		// class ACharacter_Root_Hollow_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Hollow_AIController__Character_Root_Hollow_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Hollow_AIController_C, 0x0000);
		}

		// class UWidget_StatusBar_Circle_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatusBar_Circle__Widget_StatusBar_Circle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatusBar_Circle_C, 0x0000);
		}

		// class UWidget_InventoryNotifications_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InventoryNotifications__Widget_InventoryNotifications_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InventoryNotifications_C, 0x0000);
		}

		// class UWidget_Inventory_SkinItem_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Inventory_SkinItem__Widget_Inventory_SkinItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Inventory_SkinItem_C, 0x0000);
		}

		// class ADialog_Inventory_SkinSelect_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Inventory_SkinSelect__Dialog_Inventory_SkinSelect_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Inventory_SkinSelect_C, 0x0000);
		}

		// class ADialog_CraftConfirm_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_CraftConfirm__Dialog_CraftConfirm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_CraftConfirm_C, 0x0000);
		}

		// class ADialog_Wounded_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Wounded__Dialog_Wounded_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Wounded_C, 0x0000);
		}

		// class ADialog_FadeOut_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_FadeOut__Dialog_FadeOut_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_FadeOut_C, 0x0000);
		}

		// class UTrait_WillToLive_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_WillToLive__Trait_WillToLive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_WillToLive_C, 0x0000);
		}

		// class ADialog_Dialogue_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Dialogue__Dialog_Dialogue_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Dialogue_C, 0x0000);
		}

		// class UDamageType_Explosion_Power_03_FromPlayer_Summon_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Power_03_FromPlayer_Summon__DamageType_Explosion_Power_03_FromPlayer_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Power_03_FromPlayer_Summon_C, 0x0000);
		}

		// class UDamageType_Physical_Power_01_Summon_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Physical_Power_01_Summon__DamageType_Physical_Power_01_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Physical_Power_01_Summon_C, 0x0000);
		}

		// class AWeapon_Coachgun_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Coachgun__Weapon_Coachgun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Coachgun_C, 0x0000);
		}

		// class AArmor_Head_Twisted_C : public AArmor_Head_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Twisted__Armor_Head_Twisted_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Twisted_C, 0x0000);
		}

		// class AArmor_Head_Carapace_C : public AArmor_Head_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Carapace__Armor_Head_Carapace_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Carapace_C, 0x0000);
		}

		// class ADialog_KeyInput_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_KeyInput__Dialog_KeyInput_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_KeyInput_C, 0x0000);
		}

		// class UWidget_KeepSettings_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_KeepSettings__Widget_KeepSettings_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_KeepSettings_C, 0x0000);
		}

		// class ABP_Readable_C : public ABP_Inspectable_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Readable__BP_Readable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Readable_C, 0x0000);
		}

		// class UWidget_SliderUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_SliderUserSetting__Widget_SliderUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_SliderUserSetting_C, 0x0000);
		}

		// class UWidget_EnumUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_EnumUserSetting__Widget_EnumUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_EnumUserSetting_C, 0x0000);
		}

		// class UAOE_Action_Mod_SporeShot_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__AOE_Action_Mod_SporeShot__AOE_Action_Mod_SporeShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAOE_Action_Mod_SporeShot_C, 0x0000);
		}

		// class UWidget_ScrollPage_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ScrollPage__Widget_ScrollPage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ScrollPage_C, 0x0000);
		}

		// class ABP_Decal_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Decal__BP_Decal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Decal_C, 0x0000);
		}

		// class UWeapon_Mod_FrozenMist_Actions_C : public UAction_List_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Mod_FrozenMist_Actions__Weapon_Mod_FrozenMist_Actions_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Mod_FrozenMist_Actions_C, 0x0000);
		}

		// class ARangedWeapon_Mod_Action_MultiTarget_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__RangedWeapon_Mod_Action_MultiTarget__RangedWeapon_Mod_Action_MultiTarget_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARangedWeapon_Mod_Action_MultiTarget_C, 0x0000);
		}

		// class UWidget_Checkpoint_Entry_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Checkpoint_Entry__Widget_Checkpoint_Entry_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Checkpoint_Entry_C, 0x0000);
		}

		// class AImpactEffect_Creature_Medium_Block_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Medium_Block__ImpactEffect_Creature_Medium_Block_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Medium_Block_C, 0x0000);
		}

		// class AImpactEffect_Creature_Medium_Bodyfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Medium_Bodyfall__ImpactEffect_Creature_Medium_Bodyfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Medium_Bodyfall_C, 0x0000);
		}

		// class ABP_City_Diner_Chair_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Diner_Chair_A__BP_City_Diner_Chair_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Diner_Chair_A_C, 0x0000);
		}

		// class UWeaponProfile_Repulsor_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Repulsor__WeaponProfile_Repulsor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Repulsor_C, 0x0000);
		}

		// class ACharacter_Root_Priest_Projectile_C : public ABP_Projectile_GroundTarget_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Priest_Projectile__Character_Root_Priest_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Priest_Projectile_C, 0x0000);
		}

		// class UWidget_EquipmentSlot_Large_C : public UWidget_EquipmentSlot_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_EquipmentSlot_Large__Widget_EquipmentSlot_Large_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_EquipmentSlot_Large_C, 0x0000);
		}

		// class UAward_Weapon_HerosSword_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Weapon_HerosSword__Award_Weapon_HerosSword_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Weapon_HerosSword_C, 0x0000);
		}

		// class UAward_Armor_Legs_Void_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Void_Skin__Award_Armor_Legs_Void_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Void_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Scavenger_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Scavenger_Skin__Award_Armor_Legs_Scavenger_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Scavenger_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Radiant_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Radiant_Skin__Award_Armor_Legs_Radiant_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Radiant_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Leto_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Leto_Skin__Award_Armor_Legs_Leto_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Leto_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Elder_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Elder_Skin__Award_Armor_Legs_Elder_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Elder_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Drifter_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Drifter_Skin__Award_Armor_Legs_Drifter_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Drifter_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Elder_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Elder_Skin__Award_Armor_Body_Elder_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Elder_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Drifter_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Drifter_Skin__Award_Armor_Body_Drifter_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Drifter_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Scrapper_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Scrapper_Skin__Award_Armor_Head_Scrapper_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Scrapper_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Adventurer_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Adventurer_Skin__Award_Armor_Head_Adventurer_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Adventurer_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Void_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Void_Skin__Award_Armor_Body_Void_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Void_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Scavenger_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Scavenger_Skin__Award_Armor_Body_Scavenger_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Scavenger_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Radiant_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Radiant_Skin__Award_Armor_Body_Radiant_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Radiant_Skin_C, 0x0000);
		}

		// class AConsumable_SurvivorBag_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_SurvivorBag__Consumable_SurvivorBag_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_SurvivorBag_C, 0x0000);
		}

		// class UAction_AOE_Mod_BlinkToken_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_BlinkToken__Action_AOE_Mod_BlinkToken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_BlinkToken_C, 0x0000);
		}

		// class UArmorSkill_Base_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Base__ArmorSkill_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Base_C, 0x0000);
		}

		// class AItem_Potion_Base_C : public AUseableItem
		TEST_METHOD(BlueprintGeneratedClass__Item_Potion_Base__Item_Potion_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Potion_Base_C, 0x0000);
		}

		// class ABP_BasicLight_Barrel_A_C : public ABP_BasicLight_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_BasicLight_Barrel_A__BP_BasicLight_Barrel_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BasicLight_Barrel_A_C, 0x0000);
		}

		// class ASpawnPoint_SupplyChest_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_SupplyChest__SpawnPoint_SupplyChest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_SupplyChest_C, 0x0000);
		}

		// class ABP_PhysicsActor_FileHolder_B_C : public ABP_PhysicsActor_FileHolder_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_FileHolder_B__BP_PhysicsActor_FileHolder_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_FileHolder_B_C, 0x0000);
		}

		// class AArmor_Legs_Scrapper_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Scrapper_PreOrder__Armor_Legs_Scrapper_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Scrapper_PreOrder_C, 0x0000);
		}

		// class AArmor_Head_Hunter_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Hunter_PreOrder__Armor_Head_Hunter_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Hunter_PreOrder_C, 0x0000);
		}

		// class AArmor_Legs_Hunter_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Hunter_PreOrder__Armor_Legs_Hunter_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Hunter_PreOrder_C, 0x0000);
		}

		// class AArmor_Head_Cultist_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Cultist_PreOrder__Armor_Head_Cultist_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Cultist_PreOrder_C, 0x0000);
		}

		// class AArmor_Body_Cultist_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Cultist_PreOrder__Armor_Body_Cultist_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Cultist_PreOrder_C, 0x0000);
		}

		// class ABP_City_Box1_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Box1__BP_City_Box1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Box1_C, 0x0000);
		}

		// class ABP_City_OfficeTable_B_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeTable_B__BP_City_OfficeTable_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeTable_B_C, 0x0000);
		}

		// class ABP_RandomStaticActor_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomStaticActor__BP_RandomStaticActor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomStaticActor_C, 0x0000);
		}

		// class ABP_PhysicsActor_Cauldron_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Cauldron__BP_PhysicsActor_Cauldron_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Cauldron_C, 0x0000);
		}

		// class ABP_PhysicsActor_FireExtinguisher_C : public ABP_PhysicsActor_GasContainer_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_FireExtinguisher__BP_PhysicsActor_FireExtinguisher_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_FireExtinguisher_C, 0x0000);
		}

		// class ABP_PhysicsActor_FireExtinguisher_C_C : public ABP_PhysicsActor_FireExtinguisher_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_FireExtinguisher_C__BP_PhysicsActor_FireExtinguisher_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_FireExtinguisher_C_C, 0x0000);
		}

		// class ABP_PhysicsActor_OfficeChair_B_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_OfficeChair_B__BP_PhysicsActor_OfficeChair_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_OfficeChair_B_C, 0x0000);
		}

		// class UCharacter_Swamp_SlimeHulk_Projectile_Debuff_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_SlimeHulk_Projectile_Debuff__Character_Swamp_SlimeHulk_Projectile_Debuff_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Swamp_SlimeHulk_Projectile_Debuff_C, 0x0000);
		}

		// class UZoneDef_Swamp_Mines_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Swamp_Mines__ZoneDef_Swamp_Mines_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Swamp_Mines_C, 0x0000);
		}

		// class AQuest_Container_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Quest_3_Container__Quest_Container_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Container_C, 0x0000);
		}

		// class ABP_BreakableActor_2States_C : public ABP_BreakableActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_BreakableActor_2States__BP_BreakableActor_2States_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BreakableActor_2States_C, 0x0000);
		}

		// class AQuest_Campaign_Swamp_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Campaign_Swamp__Quest_Campaign_Swamp_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Campaign_Swamp_C, 0x0000);
		}

		// class UTrait_ArcaneStrike_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_ArcaneStrike__Trait_ArcaneStrike_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_ArcaneStrike_C, 0x0000);
		}

		// class UBP_TotemFather_Switch_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__BP_TotemFather_Switch_AnimBP__BP_TotemFather_Switch_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_TotemFather_Switch_AnimBP_C, 0x0000);
		}

		// class AQuest_Boss_TotemFather_C : public AQuest_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Boss_TotemFather__Quest_Boss_TotemFather_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Boss_TotemFather_C, 0x0000);
		}

		// class AQuest_Event_StalkersBrand_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_StalkersBrand__Quest_Event_StalkersBrand_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_StalkersBrand_C, 0x0000);
		}

		// class UInteractive_Bell_Note_C : public UPrimaryDataAsset
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Bell_Note__Interactive_Bell_Note_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractive_Bell_Note_C, 0x0000);
		}

		// class AQuest_OverworldPOI_Flautist_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_OverworldPOI_Flautist__Quest_OverworldPOI_Flautist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_Flautist_C, 0x0000);
		}

		// class AQuest_POI_Siege_C : public AQuest_Dungeon_SingleTile_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_POI_Siege__Quest_POI_Siege_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_POI_Siege_C, 0x0000);
		}

		// class AQuest_Dungeon_SingleTile_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Dungeon_SingleTile__Quest_Dungeon_SingleTile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Dungeon_SingleTile_C, 0x0000);
		}

		// class UEmote_OverShoulder_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_OverShoulder__Emote_OverShoulder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_OverShoulder_C, 0x0000);
		}

		// class USpeaker_OldManMerchant_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_OldManMerchant__Speaker_OldManMerchant_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_OldManMerchant_C, 0x0000);
		}

		// class AQuest_OverworldPOI_OldManAndConstruct_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_OverworldPOI_OldManAndConstruct__Quest_OverworldPOI_OldManAndConstruct_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_OldManAndConstruct_C, 0x0000);
		}

		// class AInteractive_Wasteland_SlidingDoor_CleanRoom_C : public AInteractive_Wasteland_SlidingDoor_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Wasteland_SlidingDoor_CleanRoom__Interactive_Wasteland_SlidingDoor_CleanRoom_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Wasteland_SlidingDoor_CleanRoom_C, 0x0000);
		}

		// class ABP_Wasteland_Guard_FloorWay_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Wasteland_Guard_FloorWay__BP_Wasteland_Guard_FloorWay_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Wasteland_Guard_FloorWay_C, 0x0000);
		}

		// class AQuest_OverworldPOI_Monolith_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_OverworldPOI_Monolith__Quest_OverworldPOI_Monolith_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_Monolith_C, 0x0000);
		}

		// class UTrait_Kingslayer_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Kingslayer__Trait_Kingslayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Kingslayer_C, 0x0000);
		}

		// class UEventTreeNode_RemoveItem_C : public UEventTreeNode
		TEST_METHOD(BlueprintGeneratedClass__EventTreeNode_RemoveItem__EventTreeNode_RemoveItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_RemoveItem_C, 0x0000);
		}

		// class AQuest_MiniBoss_Vyr_C : public AQuest_Dungeon_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_MiniBoss_Vyr__Quest_MiniBoss_Vyr_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_MiniBoss_Vyr_C, 0x0000);
		}

		// class UZoneDef_Wasteland_Citadel01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Wasteland_Citadel01__ZoneDef_Wasteland_Citadel01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Wasteland_Citadel01_C, 0x0000);
		}

		// class UEmote_Talk_02_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Talk_02__Emote_Talk_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Talk_02_C, 0x0000);
		}

		// class UEmote_Talk_03_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Talk_03__Emote_Talk_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Talk_03_C, 0x0000);
		}

		// class AQuest_Church_C : public AQuest_Dungeon_POI_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Church__Quest_Church_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Church_C, 0x0000);
		}

		// class UDamageType_Shockwave_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Shockwave__DamageType_Shockwave_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Shockwave_C, 0x0000);
		}

		// class UZoneDef_City_Subway_Large_Broken_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_City_Subway_Large_Broken__ZoneDef_City_Subway_Large_Broken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_City_Subway_Large_Broken_C, 0x0000);
		}

		// class AQuest_Event_GunslingersCharm_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_GunslingersCharm__Quest_Event_GunslingersCharm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_GunslingersCharm_C, 0x0000);
		}

		// class UTrait_ShadowWalker_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_ShadowWalker__Trait_ShadowWalker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_ShadowWalker_C, 0x0000);
		}

		// class AQuest_MiniBoss_Splitter_C : public AQuest_Dungeon_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_MiniBoss_Splitter__Quest_MiniBoss_Splitter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_MiniBoss_Splitter_C, 0x0000);
		}

		// class AQuest_Dungeon_POI_Boss_C : public AQuest_Dungeon_POI_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Dungeon_POI_Boss__Quest_Dungeon_POI_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Dungeon_POI_Boss_C, 0x0000);
		}

		// class AItem_Material_RedShard_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Item_Material_RedShard__Item_Material_RedShard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Material_RedShard_C, 0x0000);
		}

		// class AQuest_Dungeon_Base_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Dungeon_Base__Quest_Dungeon_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Dungeon_Base_C, 0x0000);
		}

		// class AQuest_Campaign_City_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Campaign_City__Quest_Campaign_City_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Campaign_City_C, 0x0000);
		}

		// class UZoneDef_City_Streets_Broken_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_City_Streets_Broken__ZoneDef_City_Streets_Broken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_City_Streets_Broken_C, 0x0000);
		}

		// class AQuest_Container_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Quest_2_Container__Quest_Container_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Container_C, 0x0000);
		}

		// class ARemnant_SpectatorPawn_C : public ARemnantSpectatorPawn
		TEST_METHOD(BlueprintGeneratedClass__Remnant_SpectatorPawn__Remnant_SpectatorPawn_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnant_SpectatorPawn_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_A_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_A__BP_RandomBuilding_4x4_Side2_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_A_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_D_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_D__BP_RandomBuilding_4x4_Side2_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_D_C, 0x0000);
		}

		// class ABP_PhysicsActor_Lube_B_C : public ABP_PhysicsActor_Lube_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Lube_B__BP_PhysicsActor_Lube_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Lube_B_C, 0x0000);
		}

		// class ABP_City_OfficeRetro_Shelf_A_Side_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeRetro_Shelf_A_Side__BP_City_OfficeRetro_Shelf_A_Side_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeRetro_Shelf_A_Side_C, 0x0000);
		}

		// class UEntitlementComponent : public UActorComponent
		TEST_METHOD(Class__GunfireTechRequirements__EntitlementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEntitlementComponent, 0x0000);
		}

		// class UGunfireTechRequirementsImpl : public UGameInstanceSubsystem
		TEST_METHOD(Class__GunfireTechRequirements__GunfireTechRequirementsImpl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGunfireTechRequirementsImpl, 0x0000);
		}

		// class UGunfireTechRequirementsImplWin64 : public UGunfireTechRequirementsImpl
		TEST_METHOD(Class__GunfireTechRequirements__GunfireTechRequirementsImplWin64)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGunfireTechRequirementsImplWin64, 0x0000);
		}

		// class UNavArea_DoorWay_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_DoorWay__NavArea_DoorWay_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_DoorWay_C, 0x0000);
		}

		// class UAction_Root_Wraith_Champion_HellFire_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Root_Wraith_Champion_HellFire__Action_Root_Wraith_Champion_HellFire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Root_Wraith_Champion_HellFire_C, 0x0000);
		}

		// class UImgMediaSettings : public UObject
		TEST_METHOD(Class__ImgMediaFactory__ImgMediaSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImgMediaSettings, 0x0000);
		}

		// class AAura_Consumable_FrenzyDust_C : public ABP_Aura_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Aura_Consumable_FrenzyDust__Aura_Consumable_FrenzyDust_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAura_Consumable_FrenzyDust_C, 0x0000);
		}

		// class AConsumable_FrenzyDust_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_FrenzyDust__Consumable_FrenzyDust_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_FrenzyDust_C, 0x0000);
		}

		// class UImageWriteBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__ImageWriteQueue__ImageWriteBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageWriteBlueprintLibrary, 0x0000);
		}

		// class UCharacter_Root_Broken_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Root_Broken_AnimsBP__Character_Root_Broken_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Broken_AnimsBP_C, 0x0000);
		}

		// class ACharacter_Root_Broken_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Broken_AIController__Character_Root_Broken_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Broken_AIController_C, 0x0000);
		}

		// class AConsumable_PristineEssence_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_PristineEssence__Consumable_PristineEssence_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_PristineEssence_C, 0x0000);
		}

		// class AArmor_Body_Twisted_C : public AArmor_Body_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Twisted__Armor_Body_Twisted_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Twisted_C, 0x0000);
		}

		// class AWeapon_Fist_C : public AWeapon_Melee_SkinnedBase_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Fist__Weapon_Fist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Fist_C, 0x0000);
		}

		// class AItem_Armor_Base_C : public AArmor
		TEST_METHOD(BlueprintGeneratedClass__Item_Armor_Base__Item_Armor_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Armor_Base_C, 0x0000);
		}

		// class AItem_AccountCurrency_Base_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Item_AccountCurrency_Base__Item_AccountCurrency_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_AccountCurrency_Base_C, 0x0000);
		}

		// class URemnant_SpectatorTarget_C : public USpectatorTargetComponent
		TEST_METHOD(BlueprintGeneratedClass__Remnant_SpectatorTarget__Remnant_SpectatorTarget_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnant_SpectatorTarget_C, 0x0000);
		}

		// class UItemType_Trinket_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Trinket__ItemType_Trinket_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Trinket_C, 0x0000);
		}

		// class UItemType_SpecialGun_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_SpecialGun__ItemType_SpecialGun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_SpecialGun_C, 0x0000);
		}

		// class UBP_InspectableComponent_C : public UInspectableComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_InspectableComponent__BP_InspectableComponent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_InspectableComponent_C, 0x0000);
		}

		// class UBuildPatchManifest : public UObject
		TEST_METHOD(Class__BuildPatchServices__BuildPatchManifest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBuildPatchManifest, 0x0000);
		}

		// class UWidget_MapGenDebug_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MapGenDebug__Widget_MapGenDebug_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MapGenDebug_C, 0x0000);
		}

		// class UCameraShake_RootBrute_Small_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_RootBrute_Small__CameraShake_RootBrute_Small_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_RootBrute_Small_C, 0x0000);
		}

		// class UDamageType_Melee_Power_02_LightHit_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_02_LightHit__DamageType_Melee_Power_02_LightHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_02_LightHit_C, 0x0000);
		}

		// class UDamageType_Melee_Power_01_LightHit_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_01_LightHit__DamageType_Melee_Power_01_LightHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_01_LightHit_C, 0x0000);
		}

		// class UDamageType_Ranged_Boss_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Boss__DamageType_Ranged_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Boss_C, 0x0000);
		}

		// class UWeapon_HuntingRifle_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_HuntingRifle_AnimsBP__Weapon_HuntingRifle_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_HuntingRifle_AnimsBP_C, 0x0000);
		}

		// class UWidget_MiniMap_Waypoint_C : public URemnantMiniMapWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_Waypoint__Widget_MiniMap_Waypoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_Waypoint_C, 0x0000);
		}

		// class UAction_AOE_Weapon_WorldBreaker_C : public UAction_AOE_ForceImpulse_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Weapon_WorldBreaker__Action_AOE_Weapon_WorldBreaker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Weapon_WorldBreaker_C, 0x0000);
		}

		// class ARangedWeapon_Mod_Action_C : public ARemnantRangedWeaponMod_C
		TEST_METHOD(BlueprintGeneratedClass__RangedWeapon_Mod_Action__RangedWeapon_Mod_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARangedWeapon_Mod_Action_C, 0x0000);
		}

		// class UDamageClass_ReducedStatusEffect_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_ReducedStatusEffect__DamageClass_ReducedStatusEffect_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_ReducedStatusEffect_C, 0x0000);
		}

		// class UDamageType_Interactive_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Interactive__DamageType_Interactive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Interactive_C, 0x0000);
		}

		// class AWeapon_Melee_Base_C : public ARemnantMeleeWeapon
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Melee_Base__Weapon_Melee_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Melee_Base_C, 0x0000);
		}

		// class UDamageType_Frost_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Frost_Mod__DamageType_Frost_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Frost_Mod_C, 0x0000);
		}

		// class UDamageType_Ranged_COJ_Shock_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_COJ_Shock__DamageType_Ranged_COJ_Shock_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_COJ_Shock_C, 0x0000);
		}

		// class UWeapon_Pan_CurseOfTheJungleGod_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Pan_CurseOfTheJungleGod_AnimsBP__Weapon_Pan_CurseOfTheJungleGod_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Pan_CurseOfTheJungleGod_AnimsBP_C, 0x0000);
		}

		// class AWeapon_Alternator_Primary_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Alternator_Primary_Projectile__Weapon_Alternator_Primary_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Alternator_Primary_Projectile_C, 0x0000);
		}

		// class UDamageType_Melee_Shock_VoiceOfTheTempest_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Shock_VoiceOfTheTempest__DamageType_Melee_Shock_VoiceOfTheTempest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Shock_VoiceOfTheTempest_C, 0x0000);
		}

		// class UDamageType_Melee_Power_02_Fire_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_02_Fire__DamageType_Melee_Power_02_Fire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_02_Fire_C, 0x0000);
		}

		// class UAction_Mod_HowlersImmunity_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_HowlersImmunity__Action_Mod_HowlersImmunity_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_HowlersImmunity_C, 0x0000);
		}

		// class UAction_Mod_Cast_Startup_Uninterrupt_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Cast_Startup_Uninterrupt__Action_Mod_Cast_Startup_Uninterrupt_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Cast_Startup_Uninterrupt_C, 0x0000);
		}

		// class ABP_ProjectileVisualization_Base_NoTargetColors_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_ProjectileVisualization_Base_NoTargetColors__BP_ProjectileVisualization_Base_NoTargetColors_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_ProjectileVisualization_Base_NoTargetColors_C, 0x0000);
		}

		// class ABP_Mod_FanOfKnives_ProjectileVisualization_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_FanOfKnives_ProjectileVisualization__BP_Mod_FanOfKnives_ProjectileVisualization_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_FanOfKnives_ProjectileVisualization_C, 0x0000);
		}

		// class UAction_Mod_SingleTarget_FireProjectile_ColdSpear_C : public UAction_Mod_SingleTarget_FireProjectile_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_SingleTarget_FireProjectile_ColdSpear__Action_Mod_SingleTarget_FireProjectile_ColdSpear_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_SingleTarget_FireProjectile_ColdSpear_C, 0x0000);
		}

		// class UCharacter_Elite_ComputedStats_C : public UCharacter_Base_ComputedStats_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Elite_ComputedStats__Character_Elite_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Elite_ComputedStats_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Arrow_Devastator_Skewer_C : public AImpactEffect_Projectile_Arrow_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Arrow_Devastator_Skewer__ImpactEffect_Projectile_Arrow_Devastator_Skewer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Arrow_Devastator_Skewer_C, 0x0000);
		}

		// class ABP_PowerSource_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_PowerSource__BP_PowerSource_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PowerSource_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Alternator_Primary_C : public AImpactEffect_Projectile_Bullet_Single_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Alternator_Primary__ImpactEffect_Projectile_Alternator_Primary_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Alternator_Primary_C, 0x0000);
		}

		// class AWeapon_Submachinegun_C : public AWeapon_HandGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Submachinegun__Weapon_Submachinegun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Submachinegun_C, 0x0000);
		}

		// class UAIPOIType_Patrol_C : public UAIPOIType
		TEST_METHOD(BlueprintGeneratedClass__AIPOIType_Patrol__AIPOIType_Patrol_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPOIType_Patrol_C, 0x0000);
		}

		// class UAction_Mod_ColdSpear_ApplyFrostbite_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_ColdSpear_ApplyFrostbite__Action_Mod_ColdSpear_ApplyFrostbite_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_ColdSpear_ApplyFrostbite_C, 0x0000);
		}

		// class UAction_Mod_ColdShot_ApplyFrostbite_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_ColdShot_ApplyFrostbite__Action_Mod_ColdShot_ApplyFrostbite_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_ColdShot_ApplyFrostbite_C, 0x0000);
		}

		// class ABP_ImpactVisualization_Base_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_ImpactVisualization_Base__BP_ImpactVisualization_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_ImpactVisualization_Base_C, 0x0000);
		}

		// class AImpactEffect_Projectile_UnstableQuill_C : public AImpactEffect_Projectile_Arrow_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_UnstableQuill__ImpactEffect_Projectile_UnstableQuill_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_UnstableQuill_C, 0x0000);
		}

		// class UWeaponProfile_Mod_StaticFieldShot_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_StaticFieldShot__WeaponProfile_Mod_StaticFieldShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_StaticFieldShot_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_PrideOfIskal_C : public AImpactEffect_Projectile_Bullet_Single_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_PrideOfIskal__ImpactEffect_Projectile_Bullet_PrideOfIskal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_PrideOfIskal_C, 0x0000);
		}

		// class UAOE_Action_PrideOfTheIskal_Projectile_Explosion_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__AOE_Action_PrideOfTheIskal_Projectile_Explosion__AOE_Action_PrideOfTheIskal_Projectile_Explosion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAOE_Action_PrideOfTheIskal_Projectile_Explosion_C, 0x0000);
		}

		// class UItemType_Upgrades_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Upgrades__ItemType_Upgrades_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Upgrades_C, 0x0000);
		}

		// class AImpactEffect_Creature_Medium_Land_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Medium_Land__ImpactEffect_Creature_Medium_Land_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Medium_Land_C, 0x0000);
		}

		// class UWeaponProfile_Mod_WildfireShot_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_WildfireShot__WeaponProfile_Mod_WildfireShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_WildfireShot_C, 0x0000);
		}

		// class UWeapon_Mod_HiveShot_Actions_C : public UAction_List_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Mod_HiveShot_Actions__Weapon_Mod_HiveShot_Actions_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Mod_HiveShot_Actions_C, 0x0000);
		}

		// class AResource_Wasteland_VoidSliver_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_VoidSliver__Resource_Wasteland_VoidSliver_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_VoidSliver_C, 0x0000);
		}

		// class AResource_Wasteland_TheUndyingHeart_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_TheUndyingHeart__Resource_Wasteland_TheUndyingHeart_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_TheUndyingHeart_C, 0x0000);
		}

		// class AResource_Pan_StalkersClaw_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_StalkersClaw__Resource_Pan_StalkersClaw_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_StalkersClaw_C, 0x0000);
		}

		// class AResource_City_DragonLinks_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_CIty_DragonLinks__Resource_City_DragonLinks_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_DragonLinks_C, 0x0000);
		}

		// class AResource_City_DisplacementCrystal_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_DisplacementCrystal__Resource_City_DisplacementCrystal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_DisplacementCrystal_C, 0x0000);
		}

		// class UCameraShake_SemiAuto_Light_Firing_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_SemiAuto_Light_Firing__CameraShake_SemiAuto_Light_Firing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_SemiAuto_Light_Firing_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_G_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_G__BP_RandomBuilding_4x4_Side2_G_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_G_C, 0x0000);
		}

		// class ACharacter_Tentacle_AiController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Tentacle_AiController__Character_Tentacle_AiController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Tentacle_AiController_C, 0x0000);
		}

		// class UWeaponProfile_Mod_GravityCoreShot_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_GravityCoreShot__WeaponProfile_Mod_GravityCoreShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_GravityCoreShot_C, 0x0000);
		}

		// class UAction_Mod_Blizzard_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Blizzard__Action_Mod_Blizzard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Blizzard_C, 0x0000);
		}

		// class ABP_Mod_WildfireShot_ProjectileVisualization_C : public ABP_ProjectileVisualization_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_WildfireShot_ProjectileVisualization__BP_Mod_WildfireShot_ProjectileVisualization_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_WildfireShot_ProjectileVisualization_C, 0x0000);
		}

		// class UAction_ApplyDamage_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_ApplyDamage__Action_ApplyDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_ApplyDamage_C, 0x0000);
		}

		// class UDamageType_Ranged_Corrosive_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Corrosive__DamageType_Ranged_Corrosive_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Corrosive_C, 0x0000);
		}

		// class UTutorial_Checkpoint_WeaponMod_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_Checkpoint_WeaponMod__Tutorial_Checkpoint_WeaponMod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_Checkpoint_WeaponMod_C, 0x0000);
		}

		// class UTutorial_Checkpoint_Resting_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_Checkpoint_Resting__Tutorial_Checkpoint_Resting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_Checkpoint_Resting_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_B_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_B__BP_RandomBuilding_4x4_Side2_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_B_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x8_Side1_E_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x8_Side1_E__BP_RandomBuilding_4x8_Side1_E_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x8_Side1_E_C, 0x0000);
		}

		// class ABP_Decal_RandomAd_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Decal_RandomAd__BP_Decal_RandomAd_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Decal_RandomAd_C, 0x0000);
		}

		// class UAction_Consumable_LiquidEscape_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_LiquidEscape__Action_Consumable_LiquidEscape_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_LiquidEscape_C, 0x0000);
		}

		// class UWeaponProfile_RepeaterPistol_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_RepeaterPistol__WeaponProfile_RepeaterPistol_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_RepeaterPistol_C, 0x0000);
		}

		// class UAction_Consumable_Bloodwort_C : public UAction_HealOverTime_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_Bloodwort__Action_Consumable_Bloodwort_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_Bloodwort_C, 0x0000);
		}

		// class UAction_Consumable_AmmoBox_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_AmmoBox__Action_Consumable_AmmoBox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_AmmoBox_C, 0x0000);
		}

		// class UItemCategory_All_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_All__ItemCategory_All_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_All_C, 0x0000);
		}

		// class ACharacter_Swamp_Seeker_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_Seeker_AIController__Character_Swamp_Seeker_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Swamp_Seeker_AIController_C, 0x0000);
		}

		// class ABP_City_Market_Rack_B_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Market_Rack_B__BP_City_Market_Rack_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Market_Rack_B_C, 0x0000);
		}

		// class UBP_RemnantSaveGameProfile_C : public URemnantSaveGameProfile
		TEST_METHOD(BlueprintGeneratedClass__BP_RemnantSaveGameProfile__BP_RemnantSaveGameProfile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_RemnantSaveGameProfile_C, 0x0000);
		}

		// class UDamageType_Shock_FromPlayer_Summon_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Shock_FromPlayer_Summon__DamageType_Shock_FromPlayer_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Shock_FromPlayer_Summon_C, 0x0000);
		}

		// class UAction_Trinket_BrutalMark_Cooldown_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Trinket_BrutalMark_Cooldown__Action_Trinket_BrutalMark_Cooldown_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Trinket_BrutalMark_Cooldown_C, 0x0000);
		}

		// class UCameraShake_AOE_XSm_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_AOE_XSm__CameraShake_AOE_XSm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_AOE_XSm_C, 0x0000);
		}

		// class ABP_SpotLight_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_SpotLight__BP_SpotLight_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_SpotLight_C, 0x0000);
		}

		// class UAction_Debuff_Frozen_CritDamage_OnEnemy_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Frozen_CritDamage_OnEnemy__Action_Debuff_Frozen_CritDamage_OnEnemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Frozen_CritDamage_OnEnemy_C, 0x0000);
		}

		// class UInteractive_City_BacktrackDoor_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Interactive_City_BacktrackDoor_AnimsBP__Interactive_City_BacktrackDoor_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractive_City_BacktrackDoor_AnimsBP_C, 0x0000);
		}

		// class ABP_LODVolume_C : public ALODVolume
		TEST_METHOD(BlueprintGeneratedClass__BP_LODVolume__BP_LODVolume_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_LODVolume_C, 0x0000);
		}

		// class ATrinket_AbrasiveAmulet_C : public AItem_Trinket_TriggerOnMeleeHit_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_AbrasiveAmulet__Trinket_AbrasiveAmulet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_AbrasiveAmulet_C, 0x0000);
		}

		// class ABP_PhysicsActor_TrafficCone_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_TrafficCone__BP_PhysicsActor_TrafficCone_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_TrafficCone_C, 0x0000);
		}

		// class ACharacter_Root_Wraith_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Wraith_AIController__Character_Root_Wraith_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Wraith_AIController_C, 0x0000);
		}

		// class ABP_PhysicsActor_Pan02_C : public ABP_PhysicsActor_Pan01_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Pan02__BP_PhysicsActor_Pan02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Pan02_C, 0x0000);
		}

		// class ABP_PhysicsActor_RetroCan_A_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_RetroCan_A__BP_PhysicsActor_RetroCan_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_RetroCan_A_C, 0x0000);
		}

		// class UAward_Armor_Head_Osseous_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Osseous_Skin__Award_Armor_Head_Osseous_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Osseous_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Akari_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Akari_Skin__Award_Armor_Head_Akari_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Akari_Skin_C, 0x0000);
		}

		// class UAction_AOE_Mod_ExplosiveShot_C : public UAction_AOE_ForceImpulse_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_ExplosiveShot__Action_AOE_Mod_ExplosiveShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_ExplosiveShot_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_J_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_J__BP_RandomBuilding_4x4_Side2_J_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_J_C, 0x0000);
		}

		// class AResource_Snow_SteelOfAgony_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Snow_SteelOfAgony__Resource_Snow_SteelOfAgony_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Snow_SteelOfAgony_C, 0x0000);
		}

		// class AWeapon_HuntingRifle_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_HuntingRifle__Weapon_HuntingRifle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_HuntingRifle_C, 0x0000);
		}

		// class ARootWraith_Champion_Projectile_C : public ABP_Projectile_C
		TEST_METHOD(BlueprintGeneratedClass__RootWraith_Champion_Projectile__RootWraith_Champion_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARootWraith_Champion_Projectile_C, 0x0000);
		}

		// class USectionContainer_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__SectionContainer__SectionContainer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USectionContainer_C, 0x0000);
		}

		// class USpeaker_Dreamer_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Dreamer__Speaker_Dreamer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Dreamer_C, 0x0000);
		}

		// class UTrait_MindsEye_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_MindsEye__Trait_MindsEye_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_MindsEye_C, 0x0000);
		}

		// class AQuest_MiniBoss_SlimeHulk_C : public AQuest_Dungeon_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_MiniBoss_SlimeHulk__Quest_MiniBoss_SlimeHulk_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_MiniBoss_SlimeHulk_C, 0x0000);
		}

		// class AQuest_Event_Simulacrum_Jungle_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_Simulacrum_Jungle__Quest_Event_Simulacrum_Jungle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_Simulacrum_Jungle_C, 0x0000);
		}

		// class AQuest_Event_HuntersBand_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_HuntersBand__Quest_Event_HuntersBand_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_HuntersBand_C, 0x0000);
		}

		// class USpeaker_FounderFord_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_FounderFord__Speaker_FounderFord_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_FounderFord_C, 0x0000);
		}

		// class ABP_Monster_Spawner_C : public ABP_Monster_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Monster_Spawner__BP_Monster_Spawner_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Monster_Spawner_C, 0x0000);
		}

		// class UResourceDef_Jungle_C : public UResourceDef
		TEST_METHOD(BlueprintGeneratedClass__ResourceDef_Jungle__ResourceDef_Jungle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UResourceDef_Jungle_C, 0x0000);
		}

		// class AQuest_Event_CleansingJewel_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_CleansingJewel__Quest_Event_CleansingJewel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_CleansingJewel_C, 0x0000);
		}

		// class UTrait_KeepersBlessing_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_KeepersBlessing__Trait_KeepersBlessing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_KeepersBlessing_C, 0x0000);
		}

		// class AImpactEffect_Creature_Large_Land_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Large_Land__ImpactEffect_Creature_Large_Land_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Large_Land_C, 0x0000);
		}

		// class UEyeTrackerFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__EyeTracker__EyeTrackerFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEyeTrackerFunctionLibrary, 0x0000);
		}

		// class AInteractive_Book_Ford_C : public AInteractive_Book_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Book_Ford__Interactive_Book_Ford_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Book_Ford_C, 0x0000);
		}

		// class AMod_RattleWeed_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_RattleWeed__Mod_RattleWeed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_RattleWeed_C, 0x0000);
		}

		// class UDamageType_Ranged_Power_01_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Power_01__DamageType_Ranged_Power_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Power_01_C, 0x0000);
		}

		// class UCameraShake_ChargeHit_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_ChargeHit__CameraShake_ChargeHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_ChargeHit_C, 0x0000);
		}

		// class UDamageClass_Bleed_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Bleed__DamageClass_Bleed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Bleed_C, 0x0000);
		}

		// class UArmorSkill_TriggerOnHit_C : public UArmorSkill_Base_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_TriggerOnHit__ArmorSkill_TriggerOnHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_TriggerOnHit_C, 0x0000);
		}

		// class UWeapon_Root_Bow_Profile_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Root_Bow_Profile__Weapon_Root_Bow_Profile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Root_Bow_Profile_C, 0x0000);
		}

		// class AAmmo_LongGun_C : public AAmmo_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Ammo_LongGun__Ammo_LongGun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmmo_LongGun_C, 0x0000);
		}

		// class UTrait_Demolitionist_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Demolitionist__Trait_Demolitionist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Demolitionist_C, 0x0000);
		}

		// class UNavArea_Custom1_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_Custom1__NavArea_Custom1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Custom1_C, 0x0000);
		}

		// class UAction_RiftWalkerCooldown_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_RiftWalkerCooldown__Action_RiftWalkerCooldown_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_RiftWalkerCooldown_C, 0x0000);
		}

		// class UTutorial_InGameMenu_Upgrade_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_InGameMenu_Upgrade__Tutorial_InGameMenu_Upgrade_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_InGameMenu_Upgrade_C, 0x0000);
		}

		// class UTutorial_InGameMenu_Traits_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_InGameMenu_Traits__Tutorial_InGameMenu_Traits_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_InGameMenu_Traits_C, 0x0000);
		}

		// class UTutorial_InGameMenu_Merchants_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_InGameMenu_Merchants__Tutorial_InGameMenu_Merchants_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_InGameMenu_Merchants_C, 0x0000);
		}

		// class UTutorial_InGameMenu_Inventory_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_InGameMenu_Inventory__Tutorial_InGameMenu_Inventory_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_InGameMenu_Inventory_C, 0x0000);
		}

		// class AMod_IronSentinel_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_IronSentinel_AIController__Mod_IronSentinel_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_IronSentinel_AIController_C, 0x0000);
		}

		// class ACharacter_Wasteland_VeryGoodBoy_AIcontroller_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_VeryGoodBoy_AIcontroller__Character_Wasteland_VeryGoodBoy_AIcontroller_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_VeryGoodBoy_AIcontroller_C, 0x0000);
		}

		// class ASpawnPoint_QuestItem_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_QuestItem__SpawnPoint_QuestItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_QuestItem_C, 0x0000);
		}

		// class UWidget_DragonHeartPin_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_DragonHeartPin__Widget_DragonHeartPin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_DragonHeartPin_C, 0x0000);
		}

		// class ABP_FogVolume_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_FogVolume__BP_FogVolume_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_FogVolume_C, 0x0000);
		}

		// class UAction_Mod_SongOfSwords_Activate_C : public UAction_Aura_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_SongOfSwords_Activate__Action_Mod_SongOfSwords_Activate_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_SongOfSwords_Activate_C, 0x0000);
		}

		// class UFaction_Enemy_Hostile_C : public UFaction
		TEST_METHOD(BlueprintGeneratedClass__Faction_Enemy_Hostile__Faction_Enemy_Hostile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaction_Enemy_Hostile_C, 0x0000);
		}

		// class UFaction_SuperFriend_C : public UFaction
		TEST_METHOD(BlueprintGeneratedClass__Faction_SuperFriend__Faction_SuperFriend_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFaction_SuperFriend_C, 0x0000);
		}

		// class UAction_SpawnMinion_Base_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_SpawnMinion_Base__Action_SpawnMinion_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_SpawnMinion_Base_C, 0x0000);
		}

		// class AAmbientSpawnRegion_SideRoom_C : public AAmbientSpawnRegion
		TEST_METHOD(BlueprintGeneratedClass__AmbientSpawnRegion_SideRoom__AmbientSpawnRegion_SideRoom_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmbientSpawnRegion_SideRoom_C, 0x0000);
		}

		// class AArmor_Head_Scrapper_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Head_Scrapper_PreOrder__Armor_Head_Scrapper_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Head_Scrapper_PreOrder_C, 0x0000);
		}

		// class ATemplate_City_Overworld_Zone1_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_Template__Template_City_Overworld_Zone1_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATemplate_City_Overworld_Zone1_03_C, 0x0000);
		}

		// class ASpawnPoint_Emerge_Fan_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Emerge_Fan__SpawnPoint_Emerge_Fan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Emerge_Fan_C, 0x0000);
		}

		// class ADialog_GunfireCredits_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_GunfireCredits__Dialog_GunfireCredits_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_GunfireCredits_C, 0x0000);
		}

		// class AQuest_Event_Simulacrum_Swamp_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_Simulacrum_Swamp__Quest_Event_Simulacrum_Swamp_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_Simulacrum_Swamp_C, 0x0000);
		}

		// class AQuest_Campaign_Main_C : public AQuest_RootQuest_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Campaign_Main__Quest_Campaign_Main_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Campaign_Main_C, 0x0000);
		}

		// class ATPSGameMode_Main_C : public ARemnantGameMode
		TEST_METHOD(BlueprintGeneratedClass__TPSGameMode_Main__TPSGameMode_Main_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATPSGameMode_Main_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blunt_PetrifiedMaul_C : public AImpactEffect_Weapon_Blunt_Stone_Large_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blunt_PetrifiedMaul__ImpactEffect_Weapon_Blunt_PetrifiedMaul_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blunt_PetrifiedMaul_C, 0x0000);
		}

		// class UWidget_MiniMap_Objective_C : public URemnantMiniMapWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MiniMap_Objective__Widget_MiniMap_Objective_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MiniMap_Objective_C, 0x0000);
		}

		// class AQuest_Event_BurdenOfTheReckless_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_BurdenOfTheReckless__Quest_Event_BurdenOfTheReckless_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_BurdenOfTheReckless_C, 0x0000);
		}

		// class AQuest_Event_TraitBook_Wasteland_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_TraitBook_Wasteland__Quest_Event_TraitBook_Wasteland_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_TraitBook_Wasteland_C, 0x0000);
		}

		// class AQuest_POI_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_POI__Quest_POI_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_POI_C, 0x0000);
		}

		// class UTrait_QuickHands_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_QuickHands__Trait_QuickHands_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_QuickHands_C, 0x0000);
		}

		// class AQuest_Event_BandOfPollux_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_BandOfPollux__Quest_Event_BandOfPollux_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_BandOfPollux_C, 0x0000);
		}

		// class UObject
		TEST_METHOD(Class__CoreUObject__Object)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, VfTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Flags, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, InternalIndex, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Class, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Name, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Outer, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObject, 0x0000);
		}

		// class UInterface : public UObject
		TEST_METHOD(Class__CoreUObject__Interface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface, 0x0000);
		}

		// class UGCObjectReferencer : public UObject
		TEST_METHOD(Class__CoreUObject__GCObjectReferencer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGCObjectReferencer, 0x0000);
		}

		// class UTextBuffer : public UObject
		TEST_METHOD(Class__CoreUObject__TextBuffer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBuffer, 0x0000);
		}

		// class UField : public UObject
		TEST_METHOD(Class__CoreUObject__Field)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField, Next, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField, 0x0000);
		}

		// class UStruct : public UField, public FStructBaseChain
		TEST_METHOD(Class__CoreUObject__Struct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, SuperField, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, Children, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, ChildProperties, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, PropertySize, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, MinAlignment, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, Script, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, PropertyLink, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, RefLink, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, DestructorLink, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, PostConstructLink, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, ScriptAndPropertyObjectReferences, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, UnresolvedScriptProperties, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, UnversionedSchema, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStruct, 0x0000);
		}

		// class UScriptStruct : public UStruct
		TEST_METHOD(Class__CoreUObject__ScriptStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScriptStruct, 0x0000);
		}

		// class UPackage : public UObject
		TEST_METHOD(Class__CoreUObject__Package)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPackage, 0x0000);
		}

		// class UClass : public UStruct
		TEST_METHOD(Class__CoreUObject__Class)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClass, 0x0000);
		}

		// class UFunction : public UStruct
		TEST_METHOD(Class__CoreUObject__Function)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, FunctionFlags, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, NumParms, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, ParmsSize, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, pad_7KPOIUL963, 0x00B7);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, ReturnValueOffset, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, RPCId, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, RPCResponseId, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, pad_VZ3J7UQT54, 0x00BE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, FirstPropertyToInit, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, EventGraphFunction, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, EventGraphCallOffset, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, pad_7JBJ8Z23CE, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, Func, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFunction, 0x0000);
		}

		// class UDelegateFunction : public UFunction
		TEST_METHOD(Class__CoreUObject__DelegateFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDelegateFunction, 0x0000);
		}

		// class UDynamicClass : public UClass
		TEST_METHOD(Class__CoreUObject__DynamicClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDynamicClass, 0x0000);
		}

		// class UPackageMap : public UObject
		TEST_METHOD(Class__CoreUObject__PackageMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPackageMap, 0x0000);
		}

		// class UEnum : public UField
		TEST_METHOD(Class__CoreUObject__Enum)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnum, 0x0000);
		}

		// class UProperty : public UField
		TEST_METHOD(Class__CoreUObject__Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProperty, 0x0000);
		}

		// class UEnumProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__EnumProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnumProperty, 0x0000);
		}

		// class ULinkerPlaceholderClass : public UClass
		TEST_METHOD(Class__CoreUObject__LinkerPlaceholderClass)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinkerPlaceholderClass, 0x0000);
		}

		// class ULinkerPlaceholderExportObject : public UObject
		TEST_METHOD(Class__CoreUObject__LinkerPlaceholderExportObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinkerPlaceholderExportObject, 0x0000);
		}

		// class ULinkerPlaceholderFunction : public UFunction
		TEST_METHOD(Class__CoreUObject__LinkerPlaceholderFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinkerPlaceholderFunction, 0x0000);
		}

		// class UMetaData : public UObject
		TEST_METHOD(Class__CoreUObject__MetaData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMetaData, 0x0000);
		}

		// class UObjectRedirector : public UObject
		TEST_METHOD(Class__CoreUObject__ObjectRedirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectRedirector, 0x0000);
		}

		// class UArrayProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__ArrayProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArrayProperty, 0x0000);
		}

		// class UObjectPropertyBase : public UProperty
		TEST_METHOD(Class__CoreUObject__ObjectPropertyBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectPropertyBase, 0x0000);
		}

		// class UBoolProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__BoolProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoolProperty, 0x0000);
		}

		// class UNumericProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__NumericProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNumericProperty, 0x0000);
		}

		// class UByteProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__ByteProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UByteProperty, 0x0000);
		}

		// class UObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__ObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectProperty, 0x0000);
		}

		// class UClassProperty : public UObjectProperty
		TEST_METHOD(Class__CoreUObject__ClassProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClassProperty, 0x0000);
		}

		// class UDelegateProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__DelegateProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDelegateProperty, 0x0000);
		}

		// class UDoubleProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__DoubleProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDoubleProperty, 0x0000);
		}

		// class UFloatProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__FloatProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFloatProperty, 0x0000);
		}

		// class UIntProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__IntProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIntProperty, 0x0000);
		}

		// class UInt16Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__Int16Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt16Property, 0x0000);
		}

		// class UInt64Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__Int64Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt64Property, 0x0000);
		}

		// class UInt8Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__Int8Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt8Property, 0x0000);
		}

		// class UInterfaceProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__InterfaceProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterfaceProperty, 0x0000);
		}

		// class ULazyObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__LazyObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULazyObjectProperty, 0x0000);
		}

		// class UMapProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__MapProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapProperty, 0x0000);
		}

		// class UMulticastDelegateProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__MulticastDelegateProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMulticastDelegateProperty, 0x0000);
		}

		// class UNameProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__NameProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNameProperty, 0x0000);
		}

		// class USetProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__SetProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USetProperty, 0x0000);
		}

		// class USoftObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__SoftObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoftObjectProperty, 0x0000);
		}

		// class USoftClassProperty : public USoftObjectProperty
		TEST_METHOD(Class__CoreUObject__SoftClassProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoftClassProperty, 0x0000);
		}

		// class UStrProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__StrProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStrProperty, 0x0000);
		}

		// class UStructProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__StructProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStructProperty, 0x0000);
		}

		// class UUInt16Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__UInt16Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUInt16Property, 0x0000);
		}

		// class UUInt32Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__UInt32Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUInt32Property, 0x0000);
		}

		// class UUInt64Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__UInt64Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUInt64Property, 0x0000);
		}

		// class UWeakObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__WeakObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeakObjectProperty, 0x0000);
		}

		// class UTextProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__TextProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextProperty, 0x0000);
		}

		// class ULinearTimecodeComponent : public USceneComponent
		TEST_METHOD(Class__LinearTimecode__LinearTimecodeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinearTimecodeComponent, 0x0000);
		}

		// class UDropTimecodeToStringConversion : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__LinearTimecode__DropTimecodeToStringConversion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDropTimecodeToStringConversion, 0x0000);
		}

		// class UTcpMessagingSettings : public UObject
		TEST_METHOD(Class__TcpMessaging__TcpMessagingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTcpMessagingSettings, 0x0000);
		}

		// class ABP_Multispawn_Waypoint_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Multispawn_Waypoint__BP_Multispawn_Waypoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Multispawn_Waypoint_C, 0x0000);
		}

		// class UWheeledVehicleMovementComponent : public UPawnMovementComponent
		TEST_METHOD(Class__PhysXVehicles__WheeledVehicleMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWheeledVehicleMovementComponent, 0x0000);
		}

		// class USimpleWheeledVehicleMovementComponent : public UWheeledVehicleMovementComponent
		TEST_METHOD(Class__PhysXVehicles__SimpleWheeledVehicleMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USimpleWheeledVehicleMovementComponent, 0x0000);
		}

		// class UTireConfig : public UDataAsset
		TEST_METHOD(Class__PhysXVehicles__TireConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTireConfig, 0x0000);
		}

		// class UVehicleAnimInstance : public UAnimInstance
		TEST_METHOD(Class__PhysXVehicles__VehicleAnimInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVehicleAnimInstance, 0x0000);
		}

		// class UVehicleWheel : public UObject
		TEST_METHOD(Class__PhysXVehicles__VehicleWheel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVehicleWheel, 0x0000);
		}

		// class AWheeledVehicle : public APawn
		TEST_METHOD(Class__PhysXVehicles__WheeledVehicle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWheeledVehicle, 0x0000);
		}

		// class UWheeledVehicleMovementComponent4W : public UWheeledVehicleMovementComponent
		TEST_METHOD(Class__PhysXVehicles__WheeledVehicleMovementComponent4W)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWheeledVehicleMovementComponent4W, 0x0000);
		}

		// class UAccountAward : public UObject
		TEST_METHOD(Class__Remnant__AccountAward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAccountAward, 0x0000);
		}

		// class UAccountAwardRecipe : public UCraftingRecipe_Base
		TEST_METHOD(Class__Remnant__AccountAwardRecipe)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAccountAwardRecipe, 0x0000);
		}

		// class UActionBuff : public UActionBase
		TEST_METHOD(Class__Remnant__ActionBuff)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActionBuff, 0x0000);
		}

		// class UAnimNotify_ShowLastUsedItem : public UAnimNotify
		TEST_METHOD(Class__Remnant__AnimNotify_ShowLastUsedItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ShowLastUsedItem, 0x0000);
		}

		// class AArmor : public AEquipment
		TEST_METHOD(Class__Remnant__Armor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor, 0x0000);
		}

		// class ACheckpoint : public AActor
		TEST_METHOD(Class__Remnant__Checkpoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACheckpoint, 0x0000);
		}

		// class ADragonHeart : public AUseableItem
		TEST_METHOD(Class__Remnant__DragonHeart)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADragonHeart, 0x0000);
		}

		// class UEmoteAward : public UAccountAward
		TEST_METHOD(Class__Remnant__EmoteAward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmoteAward, 0x0000);
		}

		// class UEmote : public UObject
		TEST_METHOD(Class__Remnant__Emote)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote, 0x0000);
		}

		// class UEmotesComponent : public UActorComponent
		TEST_METHOD(Class__Remnant__EmotesComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmotesComponent, 0x0000);
		}

		// class AEventRegion : public AActor
		TEST_METHOD(Class__Remnant__EventRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEventRegion, 0x0000);
		}

		// class UFlashlightInstanceData : public UEquipmentInstanceData
		TEST_METHOD(Class__Remnant__FlashlightInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFlashlightInstanceData, 0x0000);
		}

		// class AFlashlight : public AUseableItem
		TEST_METHOD(Class__Remnant__Flashlight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFlashlight, 0x0000);
		}

		// class UGameReadyCondition : public UCondition
		TEST_METHOD(Class__Remnant__GameReadyCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameReadyCondition, 0x0000);
		}

		// class AGenericItem : public AItem
		TEST_METHOD(Class__Remnant__GenericItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGenericItem, 0x0000);
		}

		// class UItemType_Throwable : public UItemType
		TEST_METHOD(Class__Remnant__ItemType_Throwable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Throwable, 0x0000);
		}

		// class ASpawnedGrenade : public AActor
		TEST_METHOD(Class__Remnant__SpawnedGrenade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnedGrenade, 0x0000);
		}

		// class AGrenade : public AWeaponBase
		TEST_METHOD(Class__Remnant__Grenade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGrenade, 0x0000);
		}

		// class URemnantAnimInstance : public UAnimInstanceGunfire
		TEST_METHOD(Class__Remnant__RemnantAnimInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantAnimInstance, 0x0000);
		}

		// class UGunnerAnimInstance : public URemnantAnimInstance
		TEST_METHOD(Class__Remnant__GunnerAnimInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGunnerAnimInstance, 0x0000);
		}

		// class UGunObstructionCondition : public UCondition
		TEST_METHOD(Class__Remnant__GunObstructionCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGunObstructionCondition, 0x0000);
		}

		// class UItemAward : public UAccountAward
		TEST_METHOD(Class__Remnant__ItemAward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemAward, 0x0000);
		}

		// class UItemCategory_Quest : public UItemCategory
		TEST_METHOD(Class__Remnant__ItemCategory_Quest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Quest, 0x0000);
		}

		// class UItemCategory_PlayerQuest : public UItemCategory_Quest
		TEST_METHOD(Class__Remnant__ItemCategory_PlayerQuest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_PlayerQuest, 0x0000);
		}

		// class ULegacyTraitsComponent : public UTraitsComponent
		TEST_METHOD(Class__Remnant__LegacyTraitsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULegacyTraitsComponent, 0x0000);
		}

		// class ALootContainer : public AActor
		TEST_METHOD(Class__Remnant__LootContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALootContainer, 0x0000);
		}

		// class ALoreItem : public AItem
		TEST_METHOD(Class__Remnant__LoreItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALoreItem, 0x0000);
		}

		// class UMatchmaker : public UObject
		TEST_METHOD(Class__Remnant__Matchmaker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatchmaker, 0x0000);
		}

		// class UMatchmakerListenerInterface : public UInterface
		TEST_METHOD(Class__Remnant__MatchmakerListenerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatchmakerListenerInterface, 0x0000);
		}

		// class AMinimapThumbnail : public AActor
		TEST_METHOD(Class__Remnant__MinimapThumbnail)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMinimapThumbnail, 0x0000);
		}

		// class UPlayersNearbyCondition : public UCondition
		TEST_METHOD(Class__Remnant__PlayersNearbyCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayersNearbyCondition, 0x0000);
		}

		// class APlayerStateRemnant : public APlayerStateGunfire
		TEST_METHOD(Class__Remnant__PlayerStateRemnant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerStateRemnant, 0x0000);
		}

		// class UPreservedUserWidget : public UUserWidget
		TEST_METHOD(Class__Remnant__PreservedUserWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPreservedUserWidget, 0x0000);
		}

		// class UQuestItemType : public UItemType
		TEST_METHOD(Class__Remnant__QuestItemType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestItemType, 0x0000);
		}

		// class AQuestTrigger : public AActor
		TEST_METHOD(Class__Remnant__QuestTrigger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuestTrigger, 0x0000);
		}

		// class URadialShortcutComponent : public UActorComponent
		TEST_METHOD(Class__Remnant__RadialShortcutComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URadialShortcutComponent, 0x0000);
		}

		// class UZone : public UObject
		TEST_METHOD(Class__Remnant__Zone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZone, 0x0000);
		}

		// class URandomWorld : public UObject
		TEST_METHOD(Class__Remnant__RandomWorld)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URandomWorld, 0x0000);
		}

		// class URasterWidgetComponent : public UWidgetComponent
		TEST_METHOD(Class__Remnant__RasterWidgetComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URasterWidgetComponent, 0x0000);
		}

		// class URemnantArchetype : public UObject
		TEST_METHOD(Class__Remnant__RemnantArchetype)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantArchetype, 0x0000);
		}

		// class ARemnantRangedWeapon : public ARangedWeapon
		TEST_METHOD(Class__Remnant__RemnantRangedWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantRangedWeapon, 0x0000);
		}

		// class ARemnantBeamWeapon : public ARemnantRangedWeapon
		TEST_METHOD(Class__Remnant__RemnantBeamWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantBeamWeapon, 0x0000);
		}

		// class ARemnantCharacter : public APlayerGunfire
		TEST_METHOD(Class__Remnant__RemnantCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantCharacter, 0x0000);
		}

		// class USavedCharacter : public UObject
		TEST_METHOD(Class__Remnant__SavedCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USavedCharacter, 0x0000);
		}

		// class URemnantSaveGameProfile : public USaveGameProfile
		TEST_METHOD(Class__Remnant__RemnantSaveGameProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantSaveGameProfile, 0x0000);
		}

		// class URemnantCharacterManager : public UObject
		TEST_METHOD(Class__Remnant__RemnantCharacterManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantCharacterManager, 0x0000);
		}

		// class URemnantCharacterSettings : public UObject
		TEST_METHOD(Class__Remnant__RemnantCharacterSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantCharacterSettings, 0x0000);
		}

		// class URemnantCheatManager : public UCheatManagerGunfire
		TEST_METHOD(Class__Remnant__RemnantCheatManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantCheatManager, 0x0000);
		}

		// class URemnantDifficultyScalingComponent : public UDifficultyScalingComponent
		TEST_METHOD(Class__Remnant__RemnantDifficultyScalingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantDifficultyScalingComponent, 0x0000);
		}

		// class URemnantFlyCameraState : public UFlyCameraState
		TEST_METHOD(Class__Remnant__RemnantFlyCameraState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantFlyCameraState, 0x0000);
		}

		// class URemnantFogOfWarComponent : public UFogOfWarComponent
		TEST_METHOD(Class__Remnant__RemnantFogOfWarComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantFogOfWarComponent, 0x0000);
		}

		// class URemnantGameInstance : public UGameInstanceGunfire
		TEST_METHOD(Class__Remnant__RemnantGameInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantGameInstance, 0x0000);
		}

		// class ARemnantGameMode : public AGameModeGunfire
		TEST_METHOD(Class__Remnant__RemnantGameMode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantGameMode, 0x0000);
		}

		// class ARemnantGameSession : public AGameSession
		TEST_METHOD(Class__Remnant__RemnantGameSession)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantGameSession, 0x0000);
		}

		// class ARemnantGameState : public AGameStateGunfire
		TEST_METHOD(Class__Remnant__RemnantGameState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantGameState, 0x0000);
		}

		// class URemnantGameType : public UObject
		TEST_METHOD(Class__Remnant__RemnantGameType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantGameType, 0x0000);
		}

		// class ARemnantHUD : public AUIHud
		TEST_METHOD(Class__Remnant__RemnantHUD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantHUD, 0x0000);
		}

		// class URemnantMapGenComponent : public UMapGenComponent
		TEST_METHOD(Class__Remnant__RemnantMapGenComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantMapGenComponent, 0x0000);
		}

		// class ARemnantMeleeWeapon : public AMeleeWeapon
		TEST_METHOD(Class__Remnant__RemnantMeleeWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantMeleeWeapon, 0x0000);
		}

		// class ARemnantMiniMapDisplayActor : public AMiniMapDisplayActor
		TEST_METHOD(Class__Remnant__RemnantMiniMapDisplayActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantMiniMapDisplayActor, 0x0000);
		}

		// class ARemnantMiniMapLevelRegion : public AMiniMapLevelRegion
		TEST_METHOD(Class__Remnant__RemnantMiniMapLevelRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantMiniMapLevelRegion, 0x0000);
		}

		// class URemnantMiniMapWidget : public UMiniMapWidget
		TEST_METHOD(Class__Remnant__RemnantMiniMapWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantMiniMapWidget, 0x0000);
		}

		// class ARemnantPingActor : public AActor
		TEST_METHOD(Class__Remnant__RemnantPingActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantPingActor, 0x0000);
		}

		// class UPingSubContext : public UObject
		TEST_METHOD(Class__Remnant__PingSubContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPingSubContext, 0x0000);
		}

		// class UPingEmoteSubContext : public UPingSubContext
		TEST_METHOD(Class__Remnant__PingEmoteSubContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPingEmoteSubContext, 0x0000);
		}

		// class UPingRequestSubContext : public UPingSubContext
		TEST_METHOD(Class__Remnant__PingRequestSubContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPingRequestSubContext, 0x0000);
		}

		// class URemnantPingManager : public UActorComponent
		TEST_METHOD(Class__Remnant__RemnantPingManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantPingManager, 0x0000);
		}

		// class ARemnantPlayerController : public APlayerControllerGunfire
		TEST_METHOD(Class__Remnant__RemnantPlayerController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantPlayerController, 0x0000);
		}

		// class UPlayStateEffect_TeleportPause : public UPlayStateEffect
		TEST_METHOD(Class__Remnant__PlayStateEffect_TeleportPause)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayStateEffect_TeleportPause, 0x0000);
		}

		// class URemnantPlayerInventoryComponent : public UInventoryComponent
		TEST_METHOD(Class__Remnant__RemnantPlayerInventoryComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantPlayerInventoryComponent, 0x0000);
		}

		// class URemnantProgressionComponent : public UProgressionComponent
		TEST_METHOD(Class__Remnant__RemnantProgressionComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantProgressionComponent, 0x0000);
		}

		// class ARemnantQuest : public AQuest
		TEST_METHOD(Class__Remnant__RemnantQuest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantQuest, 0x0000);
		}

		// class URemnantQuestComponent : public UQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestComponent, 0x0000);
		}

		// class URemnantQuestAIDirector : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestAIDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestAIDirector, 0x0000);
		}

		// class ULootSourceInterface : public UInterface
		TEST_METHOD(Class__Remnant__LootSourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULootSourceInterface, 0x0000);
		}

		// class URemnantQuestEntity : public UQuestEntity
		TEST_METHOD(Class__Remnant__RemnantQuestEntity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestEntity, 0x0000);
		}

		// class URemnantQuestEntityDialog : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestEntityDialog)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestEntityDialog, 0x0000);
		}

		// class URemnantQuestEventRegion : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestEventRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestEventRegion, 0x0000);
		}

		// class URemnantQuestLink : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestLink, 0x0000);
		}

		// class URemnantQuestManager : public UQuestManager
		TEST_METHOD(Class__Remnant__RemnantQuestManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestManager, 0x0000);
		}

		// class URemnantQuestSubQuest : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestSubQuest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestSubQuest, 0x0000);
		}

		// class URemnantQuestTile : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestTile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestTile, 0x0000);
		}

		// class URemnantQuestTrigger : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestTrigger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestTrigger, 0x0000);
		}

		// class URemnantQuestWaveEncounter : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestWaveEncounter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestWaveEncounter, 0x0000);
		}

		// class UZoneDef : public UObject
		TEST_METHOD(Class__Remnant__ZoneDef)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef, 0x0000);
		}

		// class URemnantQuestZone : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestZone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestZone, 0x0000);
		}

		// class URemnantQuestZoneLink : public URemnantQuestComponent
		TEST_METHOD(Class__Remnant__RemnantQuestZoneLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantQuestZoneLink, 0x0000);
		}

		// class URemnantSaveGame : public USaveGameWorld
		TEST_METHOD(Class__Remnant__RemnantSaveGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantSaveGame, 0x0000);
		}

		// class URemnantSequencerManager : public USequencerManager
		TEST_METHOD(Class__Remnant__RemnantSequencerManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantSequencerManager, 0x0000);
		}

		// class URemnantSettings : public UObject
		TEST_METHOD(Class__Remnant__RemnantSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantSettings, 0x0000);
		}

		// class URemnantSilhouetteComponent : public USilhouetteComponent
		TEST_METHOD(Class__Remnant__RemnantSilhouetteComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantSilhouetteComponent, 0x0000);
		}

		// class URemnantSkyboxManager : public UActorComponent
		TEST_METHOD(Class__Remnant__RemnantSkyboxManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantSkyboxManager, 0x0000);
		}

		// class URemnantSpawnFilterManager : public USpawnFilterManager
		TEST_METHOD(Class__Remnant__RemnantSpawnFilterManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantSpawnFilterManager, 0x0000);
		}

		// class ARemnantSpectatorPawn : public ASpectatorPawn
		TEST_METHOD(Class__Remnant__RemnantSpectatorPawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantSpectatorPawn, 0x0000);
		}

		// class URemnantStateCameraComponent : public UStateCameraComponent
		TEST_METHOD(Class__Remnant__RemnantStateCameraComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantStateCameraComponent, 0x0000);
		}

		// class URemnantTrait : public UTrait
		TEST_METHOD(Class__Remnant__RemnantTrait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantTrait, 0x0000);
		}

		// class URemnantTraitsComponent : public UTraitsComponent
		TEST_METHOD(Class__Remnant__RemnantTraitsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantTraitsComponent, 0x0000);
		}

		// class ARemnantUIActor : public AUIActor
		TEST_METHOD(Class__Remnant__RemnantUIActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantUIActor, 0x0000);
		}

		// class URemnantUtil : public UObject
		TEST_METHOD(Class__Remnant__RemnantUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URemnantUtil, 0x0000);
		}

		// class ARemnantWeaponMod : public AEquipmentMod
		TEST_METHOD(Class__Remnant__RemnantWeaponMod)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARemnantWeaponMod, 0x0000);
		}

		// class UShowLastEquipmentDecorator : public UShowEquipmentAbstractDecorator
		TEST_METHOD(Class__Remnant__ShowLastEquipmentDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShowLastEquipmentDecorator, 0x0000);
		}

		// class USpawnFilterAccountAward : public USpawnFilterElement
		TEST_METHOD(Class__Remnant__SpawnFilterAccountAward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterAccountAward, 0x0000);
		}

		// class USpawnFilterTrait : public USpawnFilterElement
		TEST_METHOD(Class__Remnant__SpawnFilterTrait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnFilterTrait, 0x0000);
		}

		// class USpawnTableAccountAward : public USpawnTableEntry
		TEST_METHOD(Class__Remnant__SpawnTableAccountAward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableAccountAward, 0x0000);
		}

		// class USpawnTableAchievement : public USpawnTableEntry
		TEST_METHOD(Class__Remnant__SpawnTableAchievement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableAchievement, 0x0000);
		}

		// class USpawnTableCharacterMod : public USpawnTableEntry
		TEST_METHOD(Class__Remnant__SpawnTableCharacterMod)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableCharacterMod, 0x0000);
		}

		// class USpawnTableExperience : public USpawnTableEntry
		TEST_METHOD(Class__Remnant__SpawnTableExperience)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableExperience, 0x0000);
		}

		// class USpawnTableSmartAmmo : public USpawnTableElement
		TEST_METHOD(Class__Remnant__SpawnTableSmartAmmo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableSmartAmmo, 0x0000);
		}

		// class USpawnTableTrait : public USpawnTableEntry
		TEST_METHOD(Class__Remnant__SpawnTableTrait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnTableTrait, 0x0000);
		}

		// class USpectatorTargetComponent : public UActorComponent
		TEST_METHOD(Class__Remnant__SpectatorTargetComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpectatorTargetComponent, 0x0000);
		}

		// class UUtilityItemInstanceData : public UItemInstanceData
		TEST_METHOD(Class__Remnant__UtilityItemInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUtilityItemInstanceData, 0x0000);
		}

		// class AUtilityItem : public AUseableItem
		TEST_METHOD(Class__Remnant__UtilityItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AUtilityItem, 0x0000);
		}

		// class AWorldGenVisualizer : public AActor
		TEST_METHOD(Class__Remnant__WorldGenVisualizer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWorldGenVisualizer, 0x0000);
		}

		// class UWorldResetInterface : public UInterface
		TEST_METHOD(Class__Remnant__WorldResetInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldResetInterface, 0x0000);
		}

		// class UWorldResetUtil : public UObject
		TEST_METHOD(Class__Remnant__WorldResetUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldResetUtil, 0x0000);
		}

		// class AZoneActor : public AActor
		TEST_METHOD(Class__Remnant__ZoneActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AZoneActor, 0x0000);
		}

		// class UZoneManager : public UActorComponent
		TEST_METHOD(Class__Remnant__ZoneManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneManager, 0x0000);
		}

		// class UZoneLinkComponent : public UActorComponent
		TEST_METHOD(Class__Remnant__ZoneLinkComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneLinkComponent, 0x0000);
		}

		// class AZoneRegion : public AActor
		TEST_METHOD(Class__Remnant__ZoneRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AZoneRegion, 0x0000);
		}

		// class ABP_Skybox_A_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Skybox_A__BP_Skybox_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Skybox_A_C, 0x0000);
		}

		// class ACity_Street_CRN_07_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_9__City_Street_CRN_07_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_CRN_07_C, 0x0000);
		}

		// class ABP_Character_Root_Splitter_Axe_Projectile_L_C : public ABP_Projectile_Box_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Character_Root_Splitter_Axe_Projectile_L__BP_Character_Root_Splitter_Axe_Projectile_L_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Character_Root_Splitter_Axe_Projectile_L_C, 0x0000);
		}

		// class ADialog_YesNoDialog_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_YesNoDialog__Dialog_YesNoDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_YesNoDialog_C, 0x0000);
		}

		// class UFoliageInstancedStaticMeshComponent : public UHierarchicalInstancedStaticMeshComponent
		TEST_METHOD(Class__Foliage__FoliageInstancedStaticMeshComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageInstancedStaticMeshComponent, 0x0000);
		}

		// class UFoliageStatistics : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Foliage__FoliageStatistics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageStatistics, 0x0000);
		}

		// class UFoliageType : public UObject
		TEST_METHOD(Class__Foliage__FoliageType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageType, 0x0000);
		}

		// class UFoliageType_InstancedStaticMesh : public UFoliageType
		TEST_METHOD(Class__Foliage__FoliageType_InstancedStaticMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageType_InstancedStaticMesh, 0x0000);
		}

		// class AInstancedFoliageActor : public AActor
		TEST_METHOD(Class__Foliage__InstancedFoliageActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInstancedFoliageActor, 0x0000);
		}

		// class AInteractiveFoliageActor : public AStaticMeshActor
		TEST_METHOD(Class__Foliage__InteractiveFoliageActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractiveFoliageActor, 0x0000);
		}

		// class UInteractiveFoliageComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Foliage__InteractiveFoliageComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractiveFoliageComponent, 0x0000);
		}

		// class AProceduralFoliageBlockingVolume : public AVolume
		TEST_METHOD(Class__Foliage__ProceduralFoliageBlockingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProceduralFoliageBlockingVolume, 0x0000);
		}

		// class UProceduralFoliageComponent : public UActorComponent
		TEST_METHOD(Class__Foliage__ProceduralFoliageComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralFoliageComponent, 0x0000);
		}

		// class UProceduralFoliageSpawner : public UObject
		TEST_METHOD(Class__Foliage__ProceduralFoliageSpawner)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralFoliageSpawner, 0x0000);
		}

		// class UProceduralFoliageTile : public UObject
		TEST_METHOD(Class__Foliage__ProceduralFoliageTile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralFoliageTile, 0x0000);
		}

		// class AProceduralFoliageVolume : public AVolume
		TEST_METHOD(Class__Foliage__ProceduralFoliageVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProceduralFoliageVolume, 0x0000);
		}

		// class ACity_Street_VISTA_04_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_17__City_Street_VISTA_04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C, 0x0000);
		}

		// class AResource_Swamp_HammerheadsOre_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_HammerheadsOre__Resource_Swamp_HammerheadsOre_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_HammerheadsOre_C, 0x0000);
		}

		// class AResource_Swamp_GuardiansTentacle_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_GuardiansTentacle__Resource_Swamp_GuardiansTentacle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_GuardiansTentacle_C, 0x0000);
		}

		// class AResource_Pan_TotemAntler_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_TotemAntler__Resource_Pan_TotemAntler_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_TotemAntler_C, 0x0000);
		}

		// class AResource_Pan_TentaclePod_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_TentaclePod__Resource_Pan_TentaclePod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_TentaclePod_C, 0x0000);
		}

		// class AWeapon_Root_SporeLauncher_C : public AWeapon_LongGun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Root_SporeLauncher__Weapon_Root_SporeLauncher_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Root_SporeLauncher_C, 0x0000);
		}

		// class AResource_City_SporeGland_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_SporeGland__Resource_City_SporeGland_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_SporeGland_C, 0x0000);
		}

		// class AWeapon_Pan_VoiceOfTheTempest_C : public AWeapon_Spear_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Pan_VoiceOfTheTempest__Weapon_Pan_VoiceOfTheTempest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Pan_VoiceOfTheTempest_C, 0x0000);
		}

		// class UTrait_Vigor_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Vigor__Trait_Vigor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Vigor_C, 0x0000);
		}

		// class UTrait_Revivalist_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Revivalist__Trait_Revivalist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Revivalist_C, 0x0000);
		}

		// class UTrait_Handling_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Handling__Trait_Handling_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Handling_C, 0x0000);
		}

		// class UTrait_FlashCaster_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_FlashCaster__Trait_FlashCaster_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_FlashCaster_C, 0x0000);
		}

		// class ACity_Street_Start_Ford_01_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_1__City_Street_Start_Ford_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_Start_Ford_01_C, 0x0000);
		}

		// class AMain_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Main__Main_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMain_C, 0x0000);
		}

		// class UFontBulkData : public UObject
		TEST_METHOD(Class__SlateCore__FontBulkData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontBulkData, 0x0000);
		}

		// class UFontFaceInterface : public UInterface
		TEST_METHOD(Class__SlateCore__FontFaceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontFaceInterface, 0x0000);
		}

		// class UFontProviderInterface : public UInterface
		TEST_METHOD(Class__SlateCore__FontProviderInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontProviderInterface, 0x0000);
		}

		// class USlateTypes : public UObject
		TEST_METHOD(Class__SlateCore__SlateTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateTypes, 0x0000);
		}

		// class USlateWidgetStyleAsset : public UObject
		TEST_METHOD(Class__SlateCore__SlateWidgetStyleAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateWidgetStyleAsset, 0x0000);
		}

		// class USlateWidgetStyleContainerBase : public UObject
		TEST_METHOD(Class__SlateCore__SlateWidgetStyleContainerBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateWidgetStyleContainerBase, 0x0000);
		}

		// class USlateWidgetStyleContainerInterface : public UInterface
		TEST_METHOD(Class__SlateCore__SlateWidgetStyleContainerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateWidgetStyleContainerInterface, 0x0000);
		}

		// class UAction_Character_Root_Priest_SeedCaller_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Priest_SeedCaller__Action_Character_Root_Priest_SeedCaller_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Priest_SeedCaller_C, 0x0000);
		}

		// class UItemCategory_Consumables_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Consumables__ItemCategory_Consumables_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Consumables_C, 0x0000);
		}

		// class AAmmo_HandGun_C : public AAmmo_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Ammo_HandGun__Ammo_HandGun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmmo_HandGun_C, 0x0000);
		}

		// class UWidget_QuestNotification_QuestSuccess_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification_QuestSuccess__Widget_QuestNotification_QuestSuccess_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_QuestSuccess_C, 0x0000);
		}

		// class UWidget_QuestNotification_QuestFailure_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_QuestNotification_QuestFailure__Widget_QuestNotification_QuestFailure_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_QuestNotification_QuestFailure_C, 0x0000);
		}

		// class AItem_Utility_Instant_Base_C : public AUtilityItem
		TEST_METHOD(BlueprintGeneratedClass__Item_Utility_Instant_Base__Item_Utility_Instant_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Utility_Instant_Base_C, 0x0000);
		}

		// class ADialog_Ping_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_Ping__Dialog_Ping_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_Ping_C, 0x0000);
		}

		// class UWidget_TraitList_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TraitList__Widget_TraitList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TraitList_C, 0x0000);
		}

		// class UWidget_StatList_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatList__Widget_StatList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatList_C, 0x0000);
		}

		// class UWidget_Traits_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Traits__Widget_Traits_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Traits_C, 0x0000);
		}

		// class UWidget_Inventory_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Inventory__Widget_Inventory_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Inventory_C, 0x0000);
		}

		// class AMiniMap_Display_RevealMap_C : public AMiniMap_Display_Base_C
		TEST_METHOD(BlueprintGeneratedClass__MiniMap_Display_RevealMap__MiniMap_Display_RevealMap_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniMap_Display_RevealMap_C, 0x0000);
		}

		// class UWeaponProfile_HiveCannon_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_HiveCannon__WeaponProfile_HiveCannon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_HiveCannon_C, 0x0000);
		}

		// class AWeapon_Swamp_HiveCannon_Projectile_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Swamp_HiveCannon_Projectile__Weapon_Swamp_HiveCannon_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Swamp_HiveCannon_Projectile_C, 0x0000);
		}

		// class AMod_Skewer_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Skewer__Mod_Skewer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Skewer_C, 0x0000);
		}

		// class ABP_ProjectileVisualization_Base_C : public AProjectileVisualization
		TEST_METHOD(BlueprintGeneratedClass__BP_ProjectileVisualization_Base__BP_ProjectileVisualization_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_ProjectileVisualization_Base_C, 0x0000);
		}

		// class UMeshDescription : public UObject
		TEST_METHOD(Class__MeshDescription__MeshDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshDescription, 0x0000);
		}

		// class UMovieSceneCaptureProtocolBase : public UObject
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCaptureProtocolBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCaptureProtocolBase, 0x0000);
		}

		// class UMovieSceneAudioCaptureProtocolBase : public UMovieSceneCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneAudioCaptureProtocolBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAudioCaptureProtocolBase, 0x0000);
		}

		// class UNullAudioCaptureProtocol : public UMovieSceneAudioCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__NullAudioCaptureProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNullAudioCaptureProtocol, 0x0000);
		}

		// class UMasterAudioSubmixCaptureProtocol : public UMovieSceneAudioCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__MasterAudioSubmixCaptureProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMasterAudioSubmixCaptureProtocol, 0x0000);
		}

		// class UMovieSceneImageCaptureProtocolBase : public UMovieSceneCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneImageCaptureProtocolBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneImageCaptureProtocolBase, 0x0000);
		}

		// class UCompositionGraphCaptureProtocol : public UMovieSceneImageCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__CompositionGraphCaptureProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompositionGraphCaptureProtocol, 0x0000);
		}

		// class UFrameGrabberProtocol : public UMovieSceneImageCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__FrameGrabberProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFrameGrabberProtocol, 0x0000);
		}

		// class UImageSequenceProtocol : public UFrameGrabberProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol, 0x0000);
		}

		// class UCompressedImageSequenceProtocol : public UImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__CompressedImageSequenceProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompressedImageSequenceProtocol, 0x0000);
		}

		// class UImageSequenceProtocol_BMP : public UImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_BMP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_BMP, 0x0000);
		}

		// class UImageSequenceProtocol_PNG : public UCompressedImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_PNG)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_PNG, 0x0000);
		}

		// class UImageSequenceProtocol_JPG : public UCompressedImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_JPG)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_JPG, 0x0000);
		}

		// class UImageSequenceProtocol_EXR : public UImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_EXR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_EXR, 0x0000);
		}

		// class UMovieSceneCaptureInterface : public UInterface
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCaptureInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCaptureInterface, 0x0000);
		}

		// class UMovieSceneCapture : public UObject
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCapture, 0x0000);
		}

		// class ULevelCapture : public UMovieSceneCapture
		TEST_METHOD(Class__MovieSceneCapture__LevelCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelCapture, 0x0000);
		}

		// class UMovieSceneCaptureEnvironment : public UObject
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCaptureEnvironment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCaptureEnvironment, 0x0000);
		}

		// class UUserDefinedCaptureProtocol : public UMovieSceneImageCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__UserDefinedCaptureProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedCaptureProtocol, 0x0000);
		}

		// class UUserDefinedImageCaptureProtocol : public UUserDefinedCaptureProtocol
		TEST_METHOD(Class__MovieSceneCapture__UserDefinedImageCaptureProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedImageCaptureProtocol, 0x0000);
		}

		// class UVideoCaptureProtocol : public UFrameGrabberProtocol
		TEST_METHOD(Class__MovieSceneCapture__VideoCaptureProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVideoCaptureProtocol, 0x0000);
		}

		// class UDamageType_SporeLauncher_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_SporeLauncher__DamageType_SporeLauncher_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_SporeLauncher_C, 0x0000);
		}

		// class UWeaponProfile_Alternator_PrimaryFire_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Alternator_PrimaryFire__WeaponProfile_Alternator_PrimaryFire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Alternator_PrimaryFire_C, 0x0000);
		}

		// class UWeapon_Atoll_Repulsor_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Atoll_Repulsor_AnimsBP__Weapon_Atoll_Repulsor_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Atoll_Repulsor_AnimsBP_C, 0x0000);
		}

		// class AImpactEffect_FlameThrowerProjectile_Single_C : public AImpactEffect_Projectile_Bullet_RapidFire_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_FlameThrowerProjectile_Single__ImpactEffect_FlameThrowerProjectile_Single_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_FlameThrowerProjectile_Single_C, 0x0000);
		}

		// class UDamageType_Ranged_Fire_Spitfire_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Fire_Spitfire__DamageType_Ranged_Fire_Spitfire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Fire_Spitfire_C, 0x0000);
		}

		// class UAction_Mod_VeilOfTheBlackTear_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_VeilOfTheBlackTear__Action_Mod_VeilOfTheBlackTear_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_VeilOfTheBlackTear_C, 0x0000);
		}

		// class UAction_Mod_BlinkToken_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_BlinkToken__Action_Mod_BlinkToken_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_BlinkToken_C, 0x0000);
		}

		// class AConsumable_DragonHeart_C : public ADragonHeart
		TEST_METHOD(BlueprintGeneratedClass__Consumable_DragonHeart__Consumable_DragonHeart_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_DragonHeart_C, 0x0000);
		}

		// class ANavSvoDebugSlaveActor : public AActor
		TEST_METHOD(Class__GunfireNavigation__NavSvoDebugSlaveActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavSvoDebugSlaveActor, 0x0000);
		}

		// class ANavSvoDebugActor : public AActor
		TEST_METHOD(Class__GunfireNavigation__NavSvoDebugActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavSvoDebugActor, 0x0000);
		}

		// class UNavVolumeStreamingData : public UNavigationDataChunk
		TEST_METHOD(Class__GunfireNavigation__NavVolumeStreamingData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavVolumeStreamingData, 0x0000);
		}

		// class UNavSvoStreamingData : public UNavVolumeStreamingData
		TEST_METHOD(Class__GunfireNavigation__NavSvoStreamingData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavSvoStreamingData, 0x0000);
		}

		// class ANavVolume : public ANavigationData
		TEST_METHOD(Class__GunfireNavigation__NavVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavVolume, 0x0000);
		}

		// class UNavVolumeRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__GunfireNavigation__NavVolumeRenderingComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavVolumeRenderingComponent, 0x0000);
		}

		// class UFieldSystem : public UObject
		TEST_METHOD(Class__FieldSystemCore__FieldSystem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFieldSystem, 0x0000);
		}

		// class UCharacter_Player_ComputedStats_C : public UComputedStats
		TEST_METHOD(BlueprintGeneratedClass__Character_Player_ComputedStats__Character_Player_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Player_ComputedStats_C, 0x0000);
		}

		// class UInspectStats_Character_C : public UStats
		TEST_METHOD(BlueprintGeneratedClass__InspectStats_Character__InspectStats_Character_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectStats_Character_C, 0x0000);
		}

		// class UItemType_Usable1_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Usable1__ItemType_Usable1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Usable1_C, 0x0000);
		}

		// class UItemType_Skin_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Skin__ItemType_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Skin_C, 0x0000);
		}

		// class UItemType_Materials_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Materials__ItemType_Materials_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Materials_C, 0x0000);
		}

		// class UItemType_HandGun_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_HandGun__ItemType_HandGun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_HandGun_C, 0x0000);
		}

		// class UItemType_DragonHeart_C : public UItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_DragonHeart__ItemType_DragonHeart_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_DragonHeart_C, 0x0000);
		}

		// class UDamageType_Explosion_Root_Power_02_FromPlayer_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Root_Power_02_FromPlayer__DamageType_Explosion_Root_Power_02_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Root_Power_02_FromPlayer_C, 0x0000);
		}

		// class UDamageType_Explosion_Power_02_FromPlayer_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Power_02_FromPlayer__DamageType_Explosion_Power_02_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Power_02_FromPlayer_C, 0x0000);
		}

		// class UDamageType_Explosion_Fire_Power_02_FromPlayer_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Fire_Power_02_FromPlayer__DamageType_Explosion_Fire_Power_02_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Fire_Power_02_FromPlayer_C, 0x0000);
		}

		// class UBP_RadialShortcutComponent_C : public UActorComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_RadialShortcutComponent__BP_RadialShortcutComponent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_RadialShortcutComponent_C, 0x0000);
		}

		// class UBP_TutorialComponent_C : public UTutorialComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_TutorialComponent__BP_TutorialComponent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_TutorialComponent_C, 0x0000);
		}

		// class UWidget_StatBase_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_StatBase__Widget_StatBase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_StatBase_C, 0x0000);
		}

		// class UWidget_ItemStatCustomCentered_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatCustomCentered__Widget_ItemStatCustomCentered_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatCustomCentered_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Arrow_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Arrow__ImpactEffect_Projectile_Arrow_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Arrow_C, 0x0000);
		}

		// class UMaterialShaderQualitySettings : public UObject
		TEST_METHOD(Class__MaterialShaderQualitySettings__MaterialShaderQualitySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialShaderQualitySettings, 0x0000);
		}

		// class UShaderPlatformQualitySettings : public UObject
		TEST_METHOD(Class__MaterialShaderQualitySettings__ShaderPlatformQualitySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShaderPlatformQualitySettings, 0x0000);
		}

		// class UConsoleSettings : public UObject
		TEST_METHOD(Class__EngineSettings__ConsoleSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConsoleSettings, 0x0000);
		}

		// class UGameMapsSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GameMapsSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameMapsSettings, 0x0000);
		}

		// class UGameNetworkManagerSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GameNetworkManagerSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameNetworkManagerSettings, 0x0000);
		}

		// class UGameSessionSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GameSessionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameSessionSettings, 0x0000);
		}

		// class UGeneralEngineSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GeneralEngineSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralEngineSettings, 0x0000);
		}

		// class UGeneralProjectSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GeneralProjectSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralProjectSettings, 0x0000);
		}

		// class UHudSettings : public UObject
		TEST_METHOD(Class__EngineSettings__HudSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHudSettings, 0x0000);
		}

		// class UDamageType_AOE_Shock_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Shock__DamageType_AOE_Shock_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Shock_C, 0x0000);
		}

		// class UCameraShake_Vertical_Horiz_Medium_Short_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Vertical_Horiz_Medium_Short__CameraShake_Vertical_Horiz_Medium_Short_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Vertical_Horiz_Medium_Short_C, 0x0000);
		}

		// class UWidget_TravelMenuScreen_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_TravelMenuScreen__Widget_TravelMenuScreen_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_TravelMenuScreen_C, 0x0000);
		}

		// class UWidget_Inventory_SkinSelect_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Inventory_SkinSelect__Widget_Inventory_SkinSelect_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Inventory_SkinSelect_C, 0x0000);
		}

		// class UWidget_Recipe_Ingredient_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Recipe_Ingredient__Widget_Recipe_Ingredient_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Recipe_Ingredient_C, 0x0000);
		}

		// class AImpactEffect_Creature_Medium_Handfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Medium_Handfall__ImpactEffect_Creature_Medium_Handfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Medium_Handfall_C, 0x0000);
		}

		// class UCombatClass_Elite_C : public UCombatClass
		TEST_METHOD(BlueprintGeneratedClass__CombatClass_Elite__CombatClass_Elite_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCombatClass_Elite_C, 0x0000);
		}

		// class UBPI_Fusebox_C : public UInterface
		TEST_METHOD(BlueprintGeneratedClass__BPI_Fusebox__BPI_Fusebox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBPI_Fusebox_C, 0x0000);
		}

		// class AQuest_RootQuest_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_RootQuest__Quest_RootQuest_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_RootQuest_C, 0x0000);
		}

		// class ABP_Root_Rot_Bomb_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Root_Rot_Bomb__BP_Root_Rot_Bomb_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Root_Rot_Bomb_C, 0x0000);
		}

		// class UWidget_EquipmentSlot_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_EquipmentSlot__Widget_EquipmentSlot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_EquipmentSlot_C, 0x0000);
		}

		// class ABP_BasicLight_Torch_A_C : public ABP_BasicLight_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_BasicLight_Torch_A__BP_BasicLight_Torch_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BasicLight_Torch_A_C, 0x0000);
		}

		// class ABP_BasicLight_Lamp_A_C : public ABP_BasicLight_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_BasicLight_Lamp_A__BP_BasicLight_Lamp_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BasicLight_Lamp_A_C, 0x0000);
		}

		// class UCameraShake_Light_Long_Full_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Light_Long_Full__CameraShake_Light_Long_Full_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Light_Long_Full_C, 0x0000);
		}

		// class UWidget_Quest_Debug_Error_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Quest_Debug_Error__Widget_Quest_Debug_Error_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Quest_Debug_Error_C, 0x0000);
		}

		// class UDefaultLevelSequenceInstanceData : public UObject
		TEST_METHOD(Class__LevelSequence__DefaultLevelSequenceInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDefaultLevelSequenceInstanceData, 0x0000);
		}

		// class ULevelSequenceMetaData : public UInterface
		TEST_METHOD(Class__LevelSequence__LevelSequenceMetaData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceMetaData, 0x0000);
		}

		// class ULevelSequence : public UMovieSceneSequence
		TEST_METHOD(Class__LevelSequence__LevelSequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequence, 0x0000);
		}

		// class ULevelSequenceBurnInInitSettings : public UObject
		TEST_METHOD(Class__LevelSequence__LevelSequenceBurnInInitSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceBurnInInitSettings, 0x0000);
		}

		// class ULevelSequenceBurnInOptions : public UObject
		TEST_METHOD(Class__LevelSequence__LevelSequenceBurnInOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceBurnInOptions, 0x0000);
		}

		// class ALevelSequenceActor : public AActor
		TEST_METHOD(Class__LevelSequence__LevelSequenceActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelSequenceActor, 0x0000);
		}

		// class ULevelSequenceBurnIn : public UUserWidget
		TEST_METHOD(Class__LevelSequence__LevelSequenceBurnIn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceBurnIn, 0x0000);
		}

		// class ULevelSequenceDirector : public UObject
		TEST_METHOD(Class__LevelSequence__LevelSequenceDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceDirector, 0x0000);
		}

		// class ULegacyLevelSequenceDirectorBlueprint : public UBlueprint
		TEST_METHOD(Class__LevelSequence__LegacyLevelSequenceDirectorBlueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULegacyLevelSequenceDirectorBlueprint, 0x0000);
		}

		// class ULevelSequencePlayer : public UMovieSceneSequencePlayer
		TEST_METHOD(Class__LevelSequence__LevelSequencePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequencePlayer, 0x0000);
		}

		// class ABP_WaterDrips_01_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_WaterDrips_01__BP_WaterDrips_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_WaterDrips_01_C, 0x0000);
		}

		// class UDamageType_Melee_Power_02_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_02__DamageType_Melee_Power_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_02_C, 0x0000);
		}

		// class ABP_Beam_Projectile_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Beam_Projectile__BP_Beam_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Beam_Projectile_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_33__City_Street_VISTA_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C, 0x0000);
		}

		// class AMod_ColdSpear_Projectile_C : public ABP_Projectile_Homing_MultiTarget_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_ColdSpear_Projectile__Mod_ColdSpear_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_ColdSpear_Projectile_C, 0x0000);
		}

		// class AMod_FanOfKnives_Projectile_C : public ABP_Projectile_Homing_MultiTarget_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_FanOfKnives_Projectile__Mod_FanOfKnives_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_FanOfKnives_Projectile_C, 0x0000);
		}

		// class UAction_Mod_HiveShot_InsectCloud_DOT_C : public UAction_DOT_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_HiveShot_InsectCloud_DOT__Action_Mod_HiveShot_InsectCloud_DOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_HiveShot_InsectCloud_DOT_C, 0x0000);
		}

		// class UAction_Mod_RiftWalker_DFA_C : public UAction_DFA_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_RiftWalker_DFA__Action_Mod_RiftWalker_DFA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_RiftWalker_DFA_C, 0x0000);
		}

		// class UCharacter_Wasteland_Hound_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Wasteland_Hound_AnimsBP__Character_Wasteland_Hound_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Wasteland_Hound_AnimsBP_C, 0x0000);
		}

		// class ABP_BreathOfTheDesert_Indicator_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_BreathOfTheDesert_Indicator__BP_BreathOfTheDesert_Indicator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BreathOfTheDesert_Indicator_C, 0x0000);
		}

		// class UAction_Mod_Swarm_FireProjectiles_C : public UAction_Mod_MultiTarget_FireProjectiles_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Swarm_FireProjectiles__Action_Mod_Swarm_FireProjectiles_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Swarm_FireProjectiles_C, 0x0000);
		}

		// class UAction_Fire_Beam_C : public UBP_ActionBase_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Fire_Beam__Action_Fire_Beam_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Fire_Beam_C, 0x0000);
		}

		// class AWasteland_Skull_Projectile_C : public ABP_Projectile_Sphere_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Wasteland_Skull_Projectile__Wasteland_Skull_Projectile_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWasteland_Skull_Projectile_C, 0x0000);
		}

		// class UCharacter_Root_Hollow_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Root_Hollow_AnimsBP__Character_Root_Hollow_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Hollow_AnimsBP_C, 0x0000);
		}

		// class UCharacter_Root_Hollow_NavFilter_C : public UCharacter_Base_NavFilter_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Hollow_NavFilter__Character_Root_Hollow_NavFilter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Hollow_NavFilter_C, 0x0000);
		}

		// class AMod_TentacleShot_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_TentacleShot__Mod_TentacleShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_TentacleShot_C, 0x0000);
		}

		// class UDamageType_DOT_Frost_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Frost__DamageType_DOT_Frost_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Frost_C, 0x0000);
		}

		// class UWeapon_Pan_EyeOfTheStorm_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Pan_EyeOfTheStorm_AnimsBP__Weapon_Pan_EyeOfTheStorm_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Pan_EyeOfTheStorm_AnimsBP_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_B_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_25__City_Street_VISTA_04_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_B_C, 0x0000);
		}

		// class ABP_StormCaller_Bolt_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_StormCaller_Bolt__BP_StormCaller_Bolt_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_StormCaller_Bolt_C, 0x0000);
		}

		// class ATracer_Flamethrower_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Flamethrower__Tracer_Flamethrower_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Flamethrower_C, 0x0000);
		}

		// class AMod_Vampiric_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Vampiric__Mod_Vampiric_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Vampiric_C, 0x0000);
		}

		// class UWeapon_Swamp_PrideOfTheIskal_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Swamp_PrideOfTheIskal_AnimsBP__Weapon_Swamp_PrideOfTheIskal_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Swamp_PrideOfTheIskal_AnimsBP_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Blade_Metal_Large_C : public AImpactEffect_Weapon_Melee_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Blade_Metal_Large__ImpactEffect_Weapon_Blade_Metal_Large_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Blade_Metal_Large_C, 0x0000);
		}

		// class AItem_Trinket_TriggerOnMeleeHit_C : public AItem_Trinket_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Item_Trinket_TriggerOnMeleeHit__Item_Trinket_TriggerOnMeleeHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_Trinket_TriggerOnMeleeHit_C, 0x0000);
		}

		// class UWeapon_HiveCannon_PrimaryProjectile_Actions_C : public UAction_List_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_HiveCannon_PrimaryProjectile_Actions__Weapon_HiveCannon_PrimaryProjectile_Actions_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_HiveCannon_PrimaryProjectile_Actions_C, 0x0000);
		}

		// class AImpactEffect_Weapon_HiveCannon_C : public AImpactEffect_Weapon_Fist_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_HiveCannon__ImpactEffect_Weapon_HiveCannon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_HiveCannon_C, 0x0000);
		}

		// class UWidget_Debug_QuestNode_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Debug_QuestNode__Widget_Debug_QuestNode_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Debug_QuestNode_C, 0x0000);
		}

		// class UWidget_ItemStatMiniVertical_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemStatMiniVertical__Widget_ItemStatMiniVertical_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemStatMiniVertical_C, 0x0000);
		}

		// class UCharacterMod_Base_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__CharacterMod_Base__CharacterMod_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMod_Base_C, 0x0000);
		}

		// class UDisplayInfoComponent_C : public UActorComponent
		TEST_METHOD(BlueprintGeneratedClass__DisplayInfoComponent__DisplayInfoComponent_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDisplayInfoComponent_C, 0x0000);
		}

		// class UWeaponProfile_Mod_FrozenMist_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_FrozenMist__WeaponProfile_Mod_FrozenMist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_FrozenMist_C, 0x0000);
		}

		// class UImgMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__ImgMedia__ImgMediaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImgMediaSource, 0x0000);
		}

		// class ACity_Street_VISTA_03_B_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_16__City_Street_VISTA_03_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_B_C, 0x0000);
		}

		// class ABP_Cloud_Mod_SporeShot_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Cloud_Mod_SporeShot__BP_Cloud_Mod_SporeShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Cloud_Mod_SporeShot_C, 0x0000);
		}

		// class ABP_Monster_C : public AAICharacter
		TEST_METHOD(BlueprintGeneratedClass__BP_Monster__BP_Monster_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Monster_C, 0x0000);
		}

		// class ATrinket_SoulEmber_C : public AItem_Trinket_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_SoulEmber__Trinket_SoulEmber_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_SoulEmber_C, 0x0000);
		}

		// class UWidget_BossHealth_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BossHealth__Widget_BossHealth_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BossHealth_C, 0x0000);
		}

		// class UWidget_Emote_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Emote__Widget_Emote_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Emote_C, 0x0000);
		}

		// class ACharacter_SeekerBeetle_Minion_C : public ACharacter_Swamp_ElfQueen_Bug_Explosive_C
		TEST_METHOD(BlueprintGeneratedClass__Character_SeekerBeetle_Minion__Character_SeekerBeetle_Minion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_SeekerBeetle_Minion_C, 0x0000);
		}

		// class ACharacter_SeedCaller_Minion_C : public ACharacter_Root_Hollow_C
		TEST_METHOD(BlueprintGeneratedClass__Character_SeedCaller_Minion__Character_SeedCaller_Minion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_SeedCaller_Minion_C, 0x0000);
		}

		// class UArmorSkill_Juggernaut_C : public UArmorSkill_Base_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Juggernaut__ArmorSkill_Juggernaut_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Juggernaut_C, 0x0000);
		}

		// class AMod_Incinerator_FirePuddle_C : public ABP_Aura_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Incinerator_FirePuddle__Mod_Incinerator_FirePuddle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Incinerator_FirePuddle_C, 0x0000);
		}

		// class UAction_Mod_Banish_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Banish__Action_Mod_Banish_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Banish_C, 0x0000);
		}

		// class UCharacter_Player_Female_AnimsBP_C : public UGunnerAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Player_Female_AnimsBP__Character_Player_Female_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Player_Female_AnimsBP_C, 0x0000);
		}

		// class AResource_City_HollowSeed_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_HollowSeed__Resource_City_HollowSeed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_HollowSeed_C, 0x0000);
		}

		// class AMod_MantleOfThorns_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_MantleOfThorns__Mod_MantleOfThorns_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_MantleOfThorns_C, 0x0000);
		}

		// class UCharacter_Base_NavFilter_C : public UPathSharingFilter
		TEST_METHOD(BlueprintGeneratedClass__Character_Base_NavFilter__Character_Base_NavFilter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Base_NavFilter_C, 0x0000);
		}

		// class AImpactEffect_Creature_Small_Footfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Small_Footfall__ImpactEffect_Creature_Small_Footfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Small_Footfall_C, 0x0000);
		}

		// class UCharacter_Wasteland_IronSentinel_Turret_TargetSelector_C : public UAIDefaultTargetSelector
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_IronSentinel_Turret_TargetSelector__Character_Wasteland_IronSentinel_Turret_TargetSelector_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Wasteland_IronSentinel_Turret_TargetSelector_C, 0x0000);
		}

		// class ACharacter_Wasteland_MiniBoss_Laserpoint_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_MiniBoss_Laserpoint__Character_Wasteland_MiniBoss_Laserpoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_MiniBoss_Laserpoint_C, 0x0000);
		}

		// class UAction_Mod_GravityCoreShot_PullForce_Base_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_GravityCoreShot_PullForce_Base__Action_Mod_GravityCoreShot_PullForce_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_GravityCoreShot_PullForce_Base_C, 0x0000);
		}

		// class ACharacter_SeedCaller_Minion_AIController_C : public ACharacter_Base_AIController_C
		TEST_METHOD(BlueprintGeneratedClass__Character_SeedCaller_Minion_AIController__Character_SeedCaller_Minion_AIController_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_SeedCaller_Minion_AIController_C, 0x0000);
		}

		// class AMod_MendersAura_Decal_C : public ABP_Decal_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_MendersAura_Decal__Mod_MendersAura_Decal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_MendersAura_Decal_C, 0x0000);
		}

		// class UWidget_BuySellConfirm_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BuySellConfirm__Widget_BuySellConfirm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BuySellConfirm_C, 0x0000);
		}

		// class ATPSHud_C : public ARemnantHUD
		TEST_METHOD(BlueprintGeneratedClass__TPSHud__TPSHud_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATPSHud_C, 0x0000);
		}

		// class ABP_Mod_Undying_Indicator_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Mod_Undying_Indicator__BP_Mod_Undying_Indicator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Mod_Undying_Indicator_C, 0x0000);
		}

		// class UCameraShake_Explosion_SuperHeavy_GravityCore_Detonation_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Explosion_SuperHeavy_GravityCore_Detonation__CameraShake_Explosion_SuperHeavy_GravityCore_Detonation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Explosion_SuperHeavy_GravityCore_Detonation_C, 0x0000);
		}

		// class UCameraShake_Explosion_Heavy_Impact_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Explosion_Heavy_Impact__CameraShake_Explosion_Heavy_Impact_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Explosion_Heavy_Impact_C, 0x0000);
		}

		// class UDamageType_DOT_Bleed_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Bleed__DamageType_DOT_Bleed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Bleed_C, 0x0000);
		}

		// class UCameraShake_MeleeHit_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_MeleeHit__CameraShake_MeleeHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_MeleeHit_C, 0x0000);
		}

		// class UDamageType_Melee_Power_02_HeavyHit_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_02_HeavyHit__DamageType_Melee_Power_02_HeavyHit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_02_HeavyHit_C, 0x0000);
		}

		// class UDamageType_Melee_Power_01_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Melee_Power_01__DamageType_Melee_Power_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Melee_Power_01_C, 0x0000);
		}

		// class UDamageClass_Radiation_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Radiation__DamageClass_Radiation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Radiation_C, 0x0000);
		}

		// class UAction_AOE_ForceImpulse_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_ForceImpulse__Action_AOE_ForceImpulse_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_ForceImpulse_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_F_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_F__BP_RandomBuilding_4x4_Side2_F_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_F_C, 0x0000);
		}

		// class UDamageType_Radiation_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Radiation_Mod__DamageType_Radiation_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Radiation_Mod_C, 0x0000);
		}

		// class UHeadMountedDisplayFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__HeadMountedDisplay__HeadMountedDisplayFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHeadMountedDisplayFunctionLibrary, 0x0000);
		}

		// class UMotionControllerComponent : public UPrimitiveComponent
		TEST_METHOD(Class__HeadMountedDisplay__MotionControllerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMotionControllerComponent, 0x0000);
		}

		// class UMotionTrackedDeviceFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__HeadMountedDisplay__MotionTrackedDeviceFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMotionTrackedDeviceFunctionLibrary, 0x0000);
		}

		// class UVRNotificationsComponent : public UActorComponent
		TEST_METHOD(Class__HeadMountedDisplay__VRNotificationsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVRNotificationsComponent, 0x0000);
		}

		// class UXRAssetFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__HeadMountedDisplay__XRAssetFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXRAssetFunctionLibrary, 0x0000);
		}

		// class UAsyncTask_LoadXRDeviceVisComponent : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__HeadMountedDisplay__AsyncTask_LoadXRDeviceVisComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncTask_LoadXRDeviceVisComponent, 0x0000);
		}

		// class UAction_AOE_Mod_Blizzard_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_Blizzard__Action_AOE_Mod_Blizzard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_Blizzard_C, 0x0000);
		}

		// class UCharacter_Base_ComputedStats_C : public UComputedStats
		TEST_METHOD(BlueprintGeneratedClass__Character_Base_ComputedStats__Character_Base_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Base_ComputedStats_C, 0x0000);
		}

		// class UWidget_ItemCard_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemCard__Widget_ItemCard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemCard_C, 0x0000);
		}

		// class UWidget_ItemInfo_RangedWeapon_C : public UWidget_ItemInfo_Base_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemInfo_RangedWeapon__Widget_ItemInfo_RangedWeapon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemInfo_RangedWeapon_C, 0x0000);
		}

		// class UWidget_ItemInfo_MeleeWeapon_C : public UWidget_ItemInfo_Base_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemInfo_MeleeWeapon__Widget_ItemInfo_MeleeWeapon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemInfo_MeleeWeapon_C, 0x0000);
		}

		// class UAction_Buff_C : public UActionBuff
		TEST_METHOD(BlueprintGeneratedClass__Action_Buff__Action_Buff_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Buff_C, 0x0000);
		}

		// class UArmorSkill_Reciprocity_Action_Defense_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Reciprocity_Action_Defense__ArmorSkill_Reciprocity_Action_Defense_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Reciprocity_Action_Defense_C, 0x0000);
		}

		// class UAction_DOT_Fire_C : public UAction_DOT_C
		TEST_METHOD(BlueprintGeneratedClass__Action_DOT_Fire__Action_DOT_Fire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_DOT_Fire_C, 0x0000);
		}

		// class UAction_DOT_Fire_Stacking_C : public UAction_DOT_Fire_C
		TEST_METHOD(BlueprintGeneratedClass__Action_DOT_Fire_Stacking__Action_DOT_Fire_Stacking_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_DOT_Fire_Stacking_C, 0x0000);
		}

		// class AInteractive_Waypoint_SpawnPoint_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Waypoint_SpawnPoint__Interactive_Waypoint_SpawnPoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Waypoint_SpawnPoint_C, 0x0000);
		}

		// class UInteractive_Waypoint_AnimBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Interactive_Waypoint_AnimBP__Interactive_Waypoint_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractive_Waypoint_AnimBP_C, 0x0000);
		}

		// class UWeaponProfile_Coachgun_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Coachgun__WeaponProfile_Coachgun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Coachgun_C, 0x0000);
		}

		// class UDamageClass_Summon_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Summon__DamageClass_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Summon_C, 0x0000);
		}

		// class UWidget_EquipmentSlot_Small_C : public UWidget_EquipmentSlot_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_EquipmentSlot_Small__Widget_EquipmentSlot_Small_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_EquipmentSlot_Small_C, 0x0000);
		}

		// class UWidget_ItemModSlot_C : public UWidget_StatBase_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ItemModSlot__Widget_ItemModSlot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ItemModSlot_C, 0x0000);
		}

		// class UArmorSkill_Sharpshooter_C : public UArmorSkill_Base_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Sharpshooter__ArmorSkill_Sharpshooter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Sharpshooter_C, 0x0000);
		}

		// class AArmor_Body_Hunter_C : public AArmor_Body_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Hunter__Armor_Body_Hunter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Hunter_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side2_C_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side2_C__BP_RandomBuilding_4x4_Side2_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side2_C_C, 0x0000);
		}

		// class ABP_RandomBuilding_Master_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_Master__BP_RandomBuilding_Master_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_Master_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_B_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_B__BP_RandomBuilding_4x4_Side1_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_B_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_E_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_E__BP_RandomBuilding_4x4_Side1_E_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_E_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_D_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_D__BP_RandomBuilding_4x4_Side1_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_D_C, 0x0000);
		}

		// class ABP_Decal_RandomBillboard_C : public ABP_Decal_RandomAd_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Decal_RandomBillboard__BP_Decal_RandomBillboard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Decal_RandomBillboard_C, 0x0000);
		}

		// class AImpactEffect_Weapon_Melee_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_Melee__ImpactEffect_Weapon_Melee_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_Melee_C, 0x0000);
		}

		// class UInspectStats_Armor_C : public UStats
		TEST_METHOD(BlueprintGeneratedClass__InspectStats_Armor__InspectStats_Armor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectStats_Armor_C, 0x0000);
		}

		// class UInspectStats_Default_C : public UStats
		TEST_METHOD(BlueprintGeneratedClass__InspectStats_Default__InspectStats_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectStats_Default_C, 0x0000);
		}

		// class UInspectStats_RangedWeaponMod_C : public UStats
		TEST_METHOD(BlueprintGeneratedClass__InspectStats_RangedWeaponMod__InspectStats_RangedWeaponMod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInspectStats_RangedWeaponMod_C, 0x0000);
		}

		// class UItemCategory_Armor_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Armor__ItemCategory_Armor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Armor_C, 0x0000);
		}

		// class UArmorSkill_ModifySingleStat_C : public UArmorSkill_Base_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_ModifySingleStat__ArmorSkill_ModifySingleStat_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_ModifySingleStat_C, 0x0000);
		}

		// class UArmorSkill_Harden_C : public UArmorSkill_Base_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Harden__ArmorSkill_Harden_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Harden_C, 0x0000);
		}

		// class ABP_BurningBarrel_D_C : public ABP_BurningBarrel_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_BurningBarrel_D__BP_BurningBarrel_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BurningBarrel_D_C, 0x0000);
		}

		// class UArmorSkill_Regrowth_C : public UArmorSkill_ModifySingleStat_C
		TEST_METHOD(BlueprintGeneratedClass__ArmorSkill_Regrowth__ArmorSkill_Regrowth_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArmorSkill_Regrowth_C, 0x0000);
		}

		// class UMod_HuntersMark_Action_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_HuntersMark_Action__Mod_HuntersMark_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMod_HuntersMark_Action_C, 0x0000);
		}

		// class ABP_PhysicsActor_Hammer_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Hammer__BP_PhysicsActor_Hammer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Hammer_C, 0x0000);
		}

		// class ABP_Glass_A_Breakable_H_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_A_Breakable_H__BP_Glass_A_Breakable_H_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_A_Breakable_H_C, 0x0000);
		}

		// class ABP_Glass_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Glass_Breakable_A__BP_Glass_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Glass_Breakable_A_C, 0x0000);
		}

		// class ATracer_Ambusher_Shotgun_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Ambusher_Shotgun__Tracer_Ambusher_Shotgun_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Ambusher_Shotgun_C, 0x0000);
		}

		// class ABP_PhysicsActor_Book_03_C : public ABP_PhysicsActor_Book_01_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Book_03__BP_PhysicsActor_Book_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Book_03_C, 0x0000);
		}

		// class ATrinket_BloodlettersInsignia_C : public AItem_Trinket_TriggerOnEquip_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_BloodlettersInsignia__Trinket_BloodlettersInsignia_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_BloodlettersInsignia_C, 0x0000);
		}

		// class UAction_ApplyBleed_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_ApplyBleed__Action_ApplyBleed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_ApplyBleed_C, 0x0000);
		}

		// class UAction_Mod_Banish_Debuff_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_Banish_Debuff__Action_Mod_Banish_Debuff_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_Banish_Debuff_C, 0x0000);
		}

		// class UAction_Consumable_GreenLeaf_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_GreenLeaf__Action_Consumable_GreenLeaf_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_GreenLeaf_C, 0x0000);
		}

		// class UAction_Consumable_HeavyWaterElixir_C : public UAction_Buff_DurationMod_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Consumable_HeavyWaterElixir__Action_Consumable_HeavyWaterElixir_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Consumable_HeavyWaterElixir_C, 0x0000);
		}

		// class UAction_Trinket_BloodlettersInsignia_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Trinket_BloodlettersInsignia__Action_Trinket_BloodlettersInsignia_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Trinket_BloodlettersInsignia_C, 0x0000);
		}

		// class AImpactEffect_Weapon_ThrowingKnife_C : public AImpactEffect_Weapon_Blade_Metal_Small_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Weapon_ThrowingKnife__ImpactEffect_Weapon_ThrowingKnife_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Weapon_ThrowingKnife_C, 0x0000);
		}

		// class AWeapon_Melee_SkinnedBase_C : public ARemnantMeleeWeapon
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Melee_SkinnedBase__Weapon_Melee_SkinnedBase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Melee_SkinnedBase_C, 0x0000);
		}

		// class ATOD_PointLight_A_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__TOD_PointLight_A__TOD_PointLight_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATOD_PointLight_A_C, 0x0000);
		}

		// class UWidgetPingWheelCenter_C : public UWidget_PingWheelContext_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__WidgetPingWheelCenter__WidgetPingWheelCenter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetPingWheelCenter_C, 0x0000);
		}

		// class UWidgetPingWheel_Emote_C : public UWidgetPingWheel_Item_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__WidgetPingWheel_Emote__WidgetPingWheel_Emote_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetPingWheel_Emote_C, 0x0000);
		}

		// class UWidget_PingWheel_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_PingWheel__Widget_PingWheel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_PingWheel_C, 0x0000);
		}

		// class AWeapon_IronSentinel_C : public AWeapon_Gun_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_IronSentinel__Weapon_IronSentinel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_IronSentinel_C, 0x0000);
		}

		// class UWidget_Checkpoint_Summon_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Checkpoint_Summon__Widget_Checkpoint_Summon_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Checkpoint_Summon_C, 0x0000);
		}

		// class UWidget_AIDirector_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_AIDirector__Widget_AIDirector_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_AIDirector_C, 0x0000);
		}

		// class UWidget_Subtitles_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Subtitles__Widget_Subtitles_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Subtitles_C, 0x0000);
		}

		// class UWidget_HUD_QuickSelect_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HUD_QuickSelect__Widget_HUD_QuickSelect_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HUD_QuickSelect_C, 0x0000);
		}

		// class UWidget_Mod_HUD_Box_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Mod_HUD_Box__Widget_Mod_HUD_Box_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Mod_HUD_Box_C, 0x0000);
		}

		// class ATPSGameState_C : public ARemnantGameState
		TEST_METHOD(BlueprintGeneratedClass__TPSGameState__TPSGameState_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATPSGameState_C, 0x0000);
		}

		// class UWidget_HUDEquipmentSlot_C : public UWidget_FocusWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HUDEquipmentSlot__Widget_HUDEquipmentSlot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HUDEquipmentSlot_C, 0x0000);
		}

		// class UHandlerComponentFactory : public UObject
		TEST_METHOD(Class__PacketHandler__HandlerComponentFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHandlerComponentFactory, 0x0000);
		}

		// class UNetAnalyticsAggregatorConfig : public UObject
		TEST_METHOD(Class__PacketHandler__NetAnalyticsAggregatorConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetAnalyticsAggregatorConfig, 0x0000);
		}

		// class UPacketHandlerProfileConfig : public UObject
		TEST_METHOD(Class__PacketHandler__PacketHandlerProfileConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPacketHandlerProfileConfig, 0x0000);
		}

		// class UWidget_Dialogue_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Dialogue__Widget_Dialogue_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Dialogue_C, 0x0000);
		}

		// class UWidget_InGameMenu_C : public UWidget_UserWidget_C
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InGameMenu__Widget_InGameMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InGameMenu_C, 0x0000);
		}

		// class UWidget_Quest_Debug_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Quest_Debug__Widget_Quest_Debug_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Quest_Debug_C, 0x0000);
		}

		// class AMod_HuntersMark_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_HuntersMark__Mod_HuntersMark_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_HuntersMark_C, 0x0000);
		}

		// class UWidget_Death_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Death__Widget_Death_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Death_C, 0x0000);
		}

		// class UWidget_MashProgressBar_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_MashProgressBar__Widget_MashProgressBar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_MashProgressBar_C, 0x0000);
		}

		// class ABP_City_Roadblock_C_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Roadblock_C_Breakable_A__BP_City_Roadblock_C_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Roadblock_C_Breakable_A_C, 0x0000);
		}

		// class ABP_PhysicsActor_Folder_04_C : public ABP_PhysicsActor_Folder_01_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Folder_04__BP_PhysicsActor_Folder_04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Folder_04_C, 0x0000);
		}

		// class UWidget_HoldButton_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_HoldButton__Widget_HoldButton_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_HoldButton_C, 0x0000);
		}

		// class UWidget_WaitDialog_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_WaitDialog__Widget_WaitDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_WaitDialog_C, 0x0000);
		}

		// class ACharacter_Wasteland_MiniBoss_Divepoint_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Character_Wasteland_MiniBoss_Divepoint__Character_Wasteland_MiniBoss_Divepoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Wasteland_MiniBoss_Divepoint_C, 0x0000);
		}

		// class UWidget_OkDialog_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_OkDialog__Widget_OkDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_OkDialog_C, 0x0000);
		}

		// class UTutorial_Checkpoint_UpgradeArmor_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_Checkpoint_UpgradeArmor__Tutorial_Checkpoint_UpgradeArmor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_Checkpoint_UpgradeArmor_C, 0x0000);
		}

		// class UTutorial_Checkpoint_Traits_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_Checkpoint_Traits__Tutorial_Checkpoint_Traits_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_Checkpoint_Traits_C, 0x0000);
		}

		// class UTutorial_CheckpointTown_ReRoll_C : public UTutorial_C
		TEST_METHOD(BlueprintGeneratedClass__Tutorial_CheckpointTown_ReRoll__Tutorial_CheckpointTown_ReRoll_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTutorial_CheckpointTown_ReRoll_C, 0x0000);
		}

		// class UItemCategory_Items_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Items__ItemCategory_Items_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Items_C, 0x0000);
		}

		// class ADialog_InGameBase_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_InGameBase__Dialog_InGameBase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_InGameBase_C, 0x0000);
		}

		// class ABP_Inspectable_HUD_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Inspectable_HUD__BP_Inspectable_HUD_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Inspectable_HUD_C, 0x0000);
		}

		// class UWidget_InputConflictDialog_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_InputConflictDialog__Widget_InputConflictDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_InputConflictDialog_C, 0x0000);
		}

		// class ADialog_JoinSpectate_C : public ADialog_Death_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_JoinSpectate__Dialog_JoinSpectate_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_JoinSpectate_C, 0x0000);
		}

		// class ASpawnPoint_PlantInside_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_PlantInside__SpawnPoint_PlantInside_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_PlantInside_C, 0x0000);
		}

		// class ADialog_InGameMenu_C : public ADialog_InGameBase_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_InGameMenu__Dialog_InGameMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_InGameMenu_C, 0x0000);
		}

		// class UTrait_Climber_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Climber__Trait_Climber_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Climber_C, 0x0000);
		}

		// class AWeapon_Chronos_Sword_C : public AWeapon_Sword_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Chronos_Sword__Weapon_Chronos_Sword_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Chronos_Sword_C, 0x0000);
		}

		// class UAward_Trinket_OnyxPendulum_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Trinket_OnyxPendulum__Award_Trinket_OnyxPendulum_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Trinket_OnyxPendulum_C, 0x0000);
		}

		// class UAward_Armor_Head_Cultist_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Cultist_Skin_PreOrder__Award_Armor_Head_Cultist_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Cultist_Skin_PreOrder_C, 0x0000);
		}

		// class UAward_Armor_Body_Scrapper_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Scrapper_Skin_PreOrder__Award_Armor_Body_Scrapper_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Scrapper_Skin_PreOrder_C, 0x0000);
		}

		// class UAward_Armor_Body_Cultist_Skin_PreOrder_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Cultist_Skin_PreOrder__Award_Armor_Body_Cultist_Skin_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Cultist_Skin_PreOrder_C, 0x0000);
		}

		// class AArmor_Body_Void_C : public AArmor_Body_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Void__Armor_Body_Void_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Void_C, 0x0000);
		}

		// class AArmor_Legs_Adventurer_C : public AArmor_Legs_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Adventurer__Armor_Legs_Adventurer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Adventurer_C, 0x0000);
		}

		// class ATrinket_VulcansDetonator_C : public AItem_Trinket_TriggerOnEquip_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_VulcansDetonator__Trinket_VulcansDetonator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_VulcansDetonator_C, 0x0000);
		}

		// class AArmor_Legs_Carapace_C : public AArmor_Legs_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Carapace__Armor_Legs_Carapace_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Carapace_C, 0x0000);
		}

		// class AResource_Swamp_IskalHusk_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_IskalHusk__Resource_Swamp_IskalHusk_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_IskalHusk_C, 0x0000);
		}

		// class AMod_Seeker_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Seeker__Mod_Seeker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Seeker_C, 0x0000);
		}

		// class UWidget_VoiceInputDeviceUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_VoiceInputDeviceUserSetting__Widget_VoiceInputDeviceUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_VoiceInputDeviceUserSetting_C, 0x0000);
		}

		// class UAOE_Action_Mod_HiveShot_Projectile_Explosion_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__AOE_Action_Mod_HiveShot_Projectile_Explosion__AOE_Action_Mod_HiveShot_Projectile_Explosion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAOE_Action_Mod_HiveShot_Projectile_Explosion_C, 0x0000);
		}

		// class UWidget_ToggleUserSetting_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_ToggleUserSetting__Widget_ToggleUserSetting_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_ToggleUserSetting_C, 0x0000);
		}

		// class ATrinket_StormAmulet_C : public AItem_Trinket_TriggerOnEquip_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_StormAmulet__Trinket_StormAmulet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_StormAmulet_C, 0x0000);
		}

		// class ASpawnPoint_Emerge_Ceiling_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Emerge_Ceiling__SpawnPoint_Emerge_Ceiling_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Emerge_Ceiling_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_B_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_18__City_Street_VISTA_04_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_B_C, 0x0000);
		}

		// class AMod_BreathOfTheDesert_C : public ARangedWeapon_Mod_Action_MultiTarget_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_BreathOfTheDesert__Mod_BreathOfTheDesert_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_BreathOfTheDesert_C, 0x0000);
		}

		// class AMod_Incinerator_C : public ARangedWeapon_Mod_WeaponMode_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Incinerator__Mod_Incinerator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Incinerator_C, 0x0000);
		}

		// class UAction_Mod_SporeShot_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Mod_SporeShot__Action_Mod_SporeShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Mod_SporeShot_C, 0x0000);
		}

		// class ADialog_WaitDialog_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_WaitDialog__Dialog_WaitDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_WaitDialog_C, 0x0000);
		}

		// class ABP_PhysicsActor_RetroCan_B_2_C : public ABP_PhysicsActor_RetroCan_B_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_RetroCan_B_3__BP_PhysicsActor_RetroCan_B_2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_RetroCan_B_2_C, 0x0000);
		}

		// class UCamera_Aim_Scoped_Crouch_Extend_C : public UCamera_Aim_Scoped_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Camera_Aim_Scoped_Crouch_Extend__Camera_Aim_Scoped_Crouch_Extend_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Aim_Scoped_Crouch_Extend_C, 0x0000);
		}

		// class UCamera_Aim_Scoped_Crouch_C : public UCamera_Aim_Scoped_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Camera_Aim_Scoped_Crouch__Camera_Aim_Scoped_Crouch_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Aim_Scoped_Crouch_C, 0x0000);
		}

		// class ABP_AreaTrigger_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_AreaTrigger__BP_AreaTrigger_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_AreaTrigger_C, 0x0000);
		}

		// class UDamageType_DOT_Bleed_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Bleed_Mod__DamageType_DOT_Bleed_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Bleed_Mod_C, 0x0000);
		}

		// class UDamageType_DOT_Melee_Bleed_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT_Melee_Bleed__DamageType_DOT_Melee_Bleed_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_Melee_Bleed_C, 0x0000);
		}

		// class UDamageType_DOT_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_DOT__DamageType_DOT_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_DOT_C, 0x0000);
		}

		// class UAOE_Action_Mod_FrozenMist_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__AOE_Action_Mod_FrozenMist__AOE_Action_Mod_FrozenMist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAOE_Action_Mod_FrozenMist_C, 0x0000);
		}

		// class UAction_AOE_Mod_Incinerator_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Mod_Incinerator__Action_AOE_Mod_Incinerator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Mod_Incinerator_C, 0x0000);
		}

		// class AImpactEffect_Projectile_Bullet_Multiple_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Projectile_Bullet_Multiple__ImpactEffect_Projectile_Bullet_Multiple_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Projectile_Bullet_Multiple_C, 0x0000);
		}

		// class AResource_Wasteland_AncientCore_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Wasteland_AncientCore__Resource_Wasteland_AncientCore_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Wasteland_AncientCore_C, 0x0000);
		}

		// class AResource_Swamp_LuminousGland_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_LuminousGland__Resource_Swamp_LuminousGland_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_LuminousGland_C, 0x0000);
		}

		// class AResource_Pan_ZephyrsConduit_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_ZephyrsConduit__Resource_Pan_ZephyrsConduit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_ZephyrsConduit_C, 0x0000);
		}

		// class AResource_Pan_StormCrystal_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Pan_StormCrystal__Resource_Pan_StormCrystal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Pan_StormCrystal_C, 0x0000);
		}

		// class AResource_City_FleshBarb_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_City_FleshBarb__Resource_City_FleshBarb_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_City_FleshBarb_C, 0x0000);
		}

		// class AResource_Special_Simulacrum_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Special_Simulacrum__Resource_Special_Simulacrum_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Special_Simulacrum_C, 0x0000);
		}

		// class AImpactEffect_Player_Bodyfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Player_Bodyfall__ImpactEffect_Player_Bodyfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Player_Bodyfall_C, 0x0000);
		}

		// class ACity_Street_VISTA_03_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_15__City_Street_VISTA_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_03_C, 0x0000);
		}

		// class AImpactEffect_Player_Bodyfall_UltraHeavy_C : public AImpactEffect_Player_Bodyfall_C
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Player_Bodyfall_UltraHeavy__ImpactEffect_Player_Bodyfall_UltraHeavy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Player_Bodyfall_UltraHeavy_C, 0x0000);
		}

		// class AMod_SeedCaller_C : public ARangedWeapon_Mod_Action_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_SeedCaller__Mod_SeedCaller_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_SeedCaller_C, 0x0000);
		}

		// class AWeapon_Wasteland_WorldBreaker_C : public AWeapon_Hammer_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Wasteland_WorldBreaker__Weapon_Wasteland_WorldBreaker_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWeapon_Wasteland_WorldBreaker_C, 0x0000);
		}

		// class AMod_Swarm_C : public ARangedWeapon_Mod_Action_MultiTarget_C
		TEST_METHOD(BlueprintGeneratedClass__Mod_Swarm__Mod_Swarm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMod_Swarm_C, 0x0000);
		}

		// class ACity_Street_VISTA_04_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_24__City_Street_VISTA_04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_VISTA_04_C, 0x0000);
		}

		// class ACity_Street_END_Transition_PocketDungeon_01_C : public ALevelScriptActorGunfire
		TEST_METHOD(BlueprintGeneratedClass__Zone_3_8__City_Street_END_Transition_PocketDungeon_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACity_Street_END_Transition_PocketDungeon_01_C, 0x0000);
		}

		// class UCreditsFL_C : public UBlueprintFunctionLibrary
		TEST_METHOD(BlueprintGeneratedClass__CreditsFL__CreditsFL_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCreditsFL_C, 0x0000);
		}

		// class ABP_Teleport_LocationDreamer_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__BP_Teleport_LocationDreamer__BP_Teleport_LocationDreamer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Teleport_LocationDreamer_C, 0x0000);
		}

		// class AQuest_Ward17_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Ward17__Quest_Ward17_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Ward17_C, 0x0000);
		}

		// class AInteractive_ZoneDoor_SpawnPoint_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__Interactive_ZoneDoor_SpawnPoint__Interactive_ZoneDoor_SpawnPoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_ZoneDoor_SpawnPoint_C, 0x0000);
		}

		// class AQuest_Event_TraitBook_Jungle_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_TraitBook_Jungle__Quest_Event_TraitBook_Jungle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_TraitBook_Jungle_C, 0x0000);
		}

		// class AInteractive_Bell_C : public ADamageableActor
		TEST_METHOD(BlueprintGeneratedClass__Interactive_Bell__Interactive_Bell_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_Bell_C, 0x0000);
		}

		// class USpeaker_Flautist_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Flautist__Speaker_Flautist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Flautist_C, 0x0000);
		}

		// class UTrait_Triage_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_Triage__Trait_Triage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_Triage_C, 0x0000);
		}

		// class AQuest_Campaign_Jungle_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Campaign_Jungle__Quest_Campaign_Jungle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Campaign_Jungle_C, 0x0000);
		}

		// class UZoneDef_Jungle_Overworld01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Jungle_Overworld01__ZoneDef_Jungle_Overworld01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Jungle_Overworld01_C, 0x0000);
		}

		// class UZoneDef_Jungle_Overworld02_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Jungle_Overworld02__ZoneDef_Jungle_Overworld02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Jungle_Overworld02_C, 0x0000);
		}

		// class AQuest_SmallD_TheCleanRoom_C : public AQuest_Dungeon_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_SmallD_TheCleanRoom__Quest_SmallD_TheCleanRoom_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_SmallD_TheCleanRoom_C, 0x0000);
		}

		// class AQuest_Dungeon_POILink_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Dungeon_POILink__Quest_Dungeon_POILink_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Dungeon_POILink_C, 0x0000);
		}

		// class AQuest_GuardiansHeart_C : public ABP_Quest_Item_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_GuardiansHeart__Quest_GuardiansHeart_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_GuardiansHeart_C, 0x0000);
		}

		// class UEmote_Talk_01_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Talk_01__Emote_Talk_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Talk_01_C, 0x0000);
		}

		// class AQuest_UndyingKing_C : public AQuest_POI_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_UndyingKing__Quest_UndyingKing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_UndyingKing_C, 0x0000);
		}

		// class AQuest_AkariWanderer_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_AkariWanderer__Quest_AkariWanderer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_AkariWanderer_C, 0x0000);
		}

		// class UZoneDef_Wasteland_BuriedCity01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Wasteland_BuriedCity01__ZoneDef_Wasteland_BuriedCity01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Wasteland_BuriedCity01_C, 0x0000);
		}

		// class AQuest_SmallD_ArmorVault_C : public AQuest_Dungeon_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_SmallD_ArmorVault__Quest_SmallD_ArmorVault_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_SmallD_ArmorVault_C, 0x0000);
		}

		// class AQuest_Campaign_Wasteland_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_Campaign_Wasteland__Quest_Campaign_Wasteland_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Campaign_Wasteland_C, 0x0000);
		}

		// class ABP_Shockwave_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Shockwave__BP_Shockwave_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Shockwave_C, 0x0000);
		}

		// class AQuest_Church_Shockwave_KillAll_C : public AQuest_Church_Shockwave_KillEnemies_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Church_Shockwave_KillAll__Quest_Church_Shockwave_KillAll_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Church_Shockwave_KillAll_C, 0x0000);
		}

		// class AQuest_Dungeon_POI_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Dungeon_POI__Quest_Dungeon_POI_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Dungeon_POI_C, 0x0000);
		}

		// class AQuest_SmallD_RootCultist_C : public AQuest_Dungeon_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_SmallD_RootCultist__Quest_SmallD_RootCultist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_SmallD_RootCultist_C, 0x0000);
		}

		// class UQuestLoreItem_C : public URemnantQuestEntity
		TEST_METHOD(BlueprintGeneratedClass__QuestLoreItem__QuestLoreItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestLoreItem_C, 0x0000);
		}

		// class AInteractive_DragonCrystal_C : public AInteractive_Checkpoint_C
		TEST_METHOD(BlueprintGeneratedClass__Interactive_DragonCrystal__Interactive_DragonCrystal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractive_DragonCrystal_C, 0x0000);
		}

		// class ABP_PhysicsActor_Caster_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Caster__BP_PhysicsActor_Caster_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Caster_C, 0x0000);
		}

		// class ABP_PhysicsActor_GasTank_02_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_GasTank_02__BP_PhysicsActor_GasTank_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_GasTank_02_C, 0x0000);
		}

		// class ABP_BasicLight_Barrel_B_C : public ABP_BasicLight_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_BasicLight_Barrel_B__BP_BasicLight_Barrel_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BasicLight_Barrel_B_C, 0x0000);
		}

		// class ABP_PhysicsActor_FileBox_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_FileBox__BP_PhysicsActor_FileBox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_FileBox_C, 0x0000);
		}

		// class ABP_PhysicsActor_Hammer_2_C : public ABP_PhysicsActor_Hammer_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Hammer_3__BP_PhysicsActor_Hammer_2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Hammer_2_C, 0x0000);
		}

		// class ABP_PhysicsActor_Pan01_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Pan01__BP_PhysicsActor_Pan01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Pan01_C, 0x0000);
		}

		// class ABP_PhysicsActor_Stool_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Stool__BP_PhysicsActor_Stool_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Stool_C, 0x0000);
		}

		// class ABP_ZoneDoor_GenericTiles_City_Default_C : public AInteractive_ZoneDoor_Default_C
		TEST_METHOD(BlueprintGeneratedClass__BP_ZoneDoor_GenericTiles_City_Default__BP_ZoneDoor_GenericTiles_City_Default_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_ZoneDoor_GenericTiles_City_Default_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_O_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_O__BP_RandomBuilding_4x4_Side1_O_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_O_C, 0x0000);
		}

		// class UGunfireTechRequirementsImplGDK : public UGunfireTechRequirementsImpl
		TEST_METHOD(Class__GunfireTechRequirementsGDK__GunfireTechRequirementsImplGDK)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGunfireTechRequirementsImplGDK, 0x0000);
		}

		// class UDamageType_AOE_Corrosive_Boss_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Corrosive_Boss__DamageType_AOE_Corrosive_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Corrosive_Boss_C, 0x0000);
		}

		// class UDamageType_AOE_Boss_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Boss__DamageType_AOE_Boss_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Boss_C, 0x0000);
		}

		// class USignificanceManager : public UObject
		TEST_METHOD(Class__SignificanceManager__SignificanceManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USignificanceManager, 0x0000);
		}

		// class ACharacter_Root_Brute_C : public ACharacter_Root_Brute_Parent_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Brute__Character_Root_Brute_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_Root_Brute_C, 0x0000);
		}

		// class UCharacter_Brute_ComputedStats_C : public UCharacter_Base_ComputedStats_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Brute_ComputedStats__Character_Brute_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Brute_ComputedStats_C, 0x0000);
		}

		// class ATrinket_MothersRing_C : public AItem_Trinket_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Trinket_MothersRing__Trinket_MothersRing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATrinket_MothersRing_C, 0x0000);
		}

		// class AArmor_Legs_Void_C : public AArmor_Legs_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Void__Armor_Legs_Void_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Void_C, 0x0000);
		}

		// class UCameraShake_Light_Short_Horizontal_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Light_Short_Horizontal__CameraShake_Light_Short_Horizontal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Light_Short_Horizontal_C, 0x0000);
		}

		// class UWidget_Weapon_Gun_Scope_Base_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Weapon_Gun_Scope_Base__Widget_Weapon_Gun_Scope_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Weapon_Gun_Scope_Base_C, 0x0000);
		}

		// class UWeaponProfile_HuntingRifle_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_HuntingRifle__WeaponProfile_HuntingRifle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_HuntingRifle_C, 0x0000);
		}

		// class UDamageType_AOE_Physical_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Physical__DamageType_AOE_Physical_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Physical_C, 0x0000);
		}

		// class ABP_City_Corpse_Vingette_11_C : public ABP_Corpse_Vignette_Base_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Corpse_Vingette_12__BP_City_Corpse_Vingette_11_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Corpse_Vingette_11_C, 0x0000);
		}

		// class UAction_Debuff_Radiation_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Debuff_Radiation__Action_Debuff_Radiation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Debuff_Radiation_C, 0x0000);
		}

		// class UAction_DOT_Bleeding_C : public UAction_DOT_C
		TEST_METHOD(BlueprintGeneratedClass__Action_DOT_Bleeding__Action_DOT_Bleeding_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_DOT_Bleeding_C, 0x0000);
		}

		// class ABP_Root_Rot_Cloud_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Root_Rot_Cloud__BP_Root_Rot_Cloud_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Root_Rot_Cloud_C, 0x0000);
		}

		// class UCharacter_Root_Brute_AnimsBP_C : public URemnantAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Root_Brute_AnimsBP__Character_Root_Brute_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Brute_AnimsBP_C, 0x0000);
		}

		// class UAction_Character_Root_Brute_Enrage_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Character_Root_Brute_Enrage__Action_Character_Root_Brute_Enrage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Character_Root_Brute_Enrage_C, 0x0000);
		}

		// class UDamageType_Flop_Blowback_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Flop_Blowback__DamageType_Flop_Blowback_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Flop_Blowback_C, 0x0000);
		}

		// class UWidget_Debug_QuestTree_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_Debug_QuestTree__Widget_Debug_QuestTree_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_Debug_QuestTree_C, 0x0000);
		}

		// class UWeaponProfile_Defiler_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Defiler__WeaponProfile_Defiler_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Defiler_C, 0x0000);
		}

		// class UDamageType_Ranged_Defiler_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Defiler__DamageType_Ranged_Defiler_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Defiler_C, 0x0000);
		}

		// class UDamageType_Ranged_Frost_FromPlayer_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged_Frost_FromPlayer__DamageType_Ranged_Frost_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_Frost_FromPlayer_C, 0x0000);
		}

		// class UDamageType_AOE_Radiation_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Radiation_Mod__DamageType_AOE_Radiation_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Radiation_Mod_C, 0x0000);
		}

		// class AProjectile_Homing_Mod_BreathOfTheDesert_C : public ABP_Projectile_Homing_MultiTarget_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Homing_Mod_BreathOfTheDesert__Projectile_Homing_Mod_BreathOfTheDesert_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Homing_Mod_BreathOfTheDesert_C, 0x0000);
		}

		// class ABP_Projectile_Sphere_Base_C : public AProjectileSphere
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile_Sphere_Base__BP_Projectile_Sphere_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_Sphere_Base_C, 0x0000);
		}

		// class UDamageType_Explosion_Ranged_Corrosive_Power_02_FromPlayer_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Ranged_Corrosive_Power_02_FromPlayer__DamageType_Explosion_Ranged_Corrosive_Power_02_FromPlayer_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Ranged_Corrosive_Power_02_FromPlayer_C, 0x0000);
		}

		// class UDamageType_Explosion_Fire_Power_02_FromPlayer_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Explosion_Fire_Power_02_FromPlayer_Mod__DamageType_Explosion_Fire_Power_02_FromPlayer_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Explosion_Fire_Power_02_FromPlayer_Mod_C, 0x0000);
		}

		// class UEventTreeNode_HideMenu_C : public UEventTreeNode
		TEST_METHOD(BlueprintGeneratedClass__EventTreeNode_HideMenu__EventTreeNode_HideMenu_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEventTreeNode_HideMenu_C, 0x0000);
		}

		// class USpeaker_Townsperson_Ruth_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_Townsperson_Ruth__Speaker_Townsperson_Ruth_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_Townsperson_Ruth_C, 0x0000);
		}

		// class UEmote_Happy_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Happy__Emote_Happy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Happy_C, 0x0000);
		}

		// class USpeaker_AvaMcCabe_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_AvaMcCabe__Speaker_AvaMcCabe_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_AvaMcCabe_C, 0x0000);
		}

		// class UEmote_Talk_01_Short_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_Talk_01_Short__Emote_Talk_01_Short_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_Talk_01_Short_C, 0x0000);
		}

		// class ABP_ImpactVisualization_Base_NonFireMode_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_ImpactVisualization_Base_NonFireMode__BP_ImpactVisualization_Base_NonFireMode_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_ImpactVisualization_Base_NonFireMode_C, 0x0000);
		}

		// class UDamageType_Projectile_Physical_Power_01_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Projectile_Physical_Power_01_Mod__DamageType_Projectile_Physical_Power_01_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Projectile_Physical_Power_01_Mod_C, 0x0000);
		}

		// class UWidget_BreathOfTheDesert_Indicator_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_BreathOfTheDesert_Indicator__Widget_BreathOfTheDesert_Indicator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_BreathOfTheDesert_Indicator_C, 0x0000);
		}

		// class UDamageClass_Elemental_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Elemental__DamageClass_Elemental_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Elemental_C, 0x0000);
		}

		// class UWeaponProfile_Mod_Banish_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_Banish__WeaponProfile_Mod_Banish_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_Banish_C, 0x0000);
		}

		// class UWeaponProfile_Mod_Incinerator_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_Incinerator__WeaponProfile_Mod_Incinerator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_Incinerator_C, 0x0000);
		}

		// class UWeaponProfile_Mod_Vampiric_C : public URangedWeaponProfile
		TEST_METHOD(BlueprintGeneratedClass__WeaponProfile_Mod_Vampiric__WeaponProfile_Mod_Vampiric_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeaponProfile_Mod_Vampiric_C, 0x0000);
		}

		// class AProjectile_Mod_Vampiric_C : public ABP_Projectile_Homing_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Mod_Vampiric__Projectile_Mod_Vampiric_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Mod_Vampiric_C, 0x0000);
		}

		// class UItemType_Ward13_C : public UQuestItemType
		TEST_METHOD(BlueprintGeneratedClass__ItemType_Ward13__ItemType_Ward13_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemType_Ward13_C, 0x0000);
		}

		// class AResource_Swamp_UncleanHeart_C : public AItem_Material_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Resource_Swamp_UncleanHeart__Resource_Swamp_UncleanHeart_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AResource_Swamp_UncleanHeart_C, 0x0000);
		}

		// class AItem_DragonHeartUpgrade_C : public AItem
		TEST_METHOD(BlueprintGeneratedClass__Item_DragonHeartUpgrade__Item_DragonHeartUpgrade_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AItem_DragonHeartUpgrade_C, 0x0000);
		}

		// class UAction_AOE_Flop_C : public UAction_AOE_Attack_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Flop__Action_AOE_Flop_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Flop_C, 0x0000);
		}

		// class UCharacterMod_Vicious_C : public UCharacterMod_Base_C
		TEST_METHOD(BlueprintGeneratedClass__CharacterMod_Vicious__CharacterMod_Vicious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMod_Vicious_C, 0x0000);
		}

		// class UTrait_MothersBlessing_C : public UBP_RemnantTrait_C
		TEST_METHOD(BlueprintGeneratedClass__Trait_MothersBlessing__Trait_MothersBlessing_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTrait_MothersBlessing_C, 0x0000);
		}

		// class UAction_AOE_Attack_Hammer_Slam_Charge_C : public UAction_AOE_Attack_Hammer_Slam_C
		TEST_METHOD(BlueprintGeneratedClass__Action_AOE_Attack_Hammer_Slam_Charge__Action_AOE_Attack_Hammer_Slam_Charge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_AOE_Attack_Hammer_Slam_Charge_C, 0x0000);
		}

		// class UCharacter_Player_Male_AnimDynamics_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Character_Player_Male_AnimDynamics_AnimsBP__Character_Player_Male_AnimDynamics_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Player_Male_AnimDynamics_AnimsBP_C, 0x0000);
		}

		// class ABP_RandomBuilding_4x4_Side1_A_C : public ABP_RandomBuilding_Master_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomBuilding_4x4_Side1_A__BP_RandomBuilding_4x4_Side1_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomBuilding_4x4_Side1_A_C, 0x0000);
		}

		// class ABP_City_Crate_B_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Crate_B__BP_City_Crate_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Crate_B_C, 0x0000);
		}

		// class ABP_PhysicsActor_Paperbox_C : public ABP_PhysicsActor_FileBox_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Paperbox__BP_PhysicsActor_Paperbox_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Paperbox_C, 0x0000);
		}

		// class AConsumable_Bandage_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_Bandage__Consumable_Bandage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_Bandage_C, 0x0000);
		}

		// class UDamageType_AOE_Shock_NoFriendly_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_AOE_Shock_NoFriendly_Mod__DamageType_AOE_Shock_NoFriendly_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_AOE_Shock_NoFriendly_Mod_C, 0x0000);
		}

		// class ABP_PhysicsActor_Tire_Wheel_C : public ABP_PhysicsActor_Tire_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Tire_Wheel__BP_PhysicsActor_Tire_Wheel_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Tire_Wheel_C, 0x0000);
		}

		// class UDamageType_Ranged_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Ranged__DamageType_Ranged_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Ranged_C, 0x0000);
		}

		// class UAction_Trait_Teamwork_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Trait_Teamwork__Action_Trait_Teamwork_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Trait_Teamwork_C, 0x0000);
		}

		// class ACharacter_RiftWalker_Clone_Base_C : public AAICharacter
		TEST_METHOD(BlueprintGeneratedClass__Character_RiftWalker_Clone_Base__Character_RiftWalker_Clone_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter_RiftWalker_Clone_Base_C, 0x0000);
		}

		// class AMultispawn_Waypoint_SpawnPoint_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__Multispawn_Waypoint_SpawnPoint__Multispawn_Waypoint_SpawnPoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMultispawn_Waypoint_SpawnPoint_C, 0x0000);
		}

		// class UNavArea_VaultUp_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_VaultUp__NavArea_VaultUp_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_VaultUp_C, 0x0000);
		}

		// class UNavArea_Fall_C : public UAINavArea
		TEST_METHOD(BlueprintGeneratedClass__NavArea_Fall__NavArea_Fall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Fall_C, 0x0000);
		}

		// class ABP_City_OfficeTable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_OfficeTable_A__BP_City_OfficeTable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_OfficeTable_A_C, 0x0000);
		}

		// class ABP_Crate_A_Breakable_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Crate_A_Breakable_A__BP_Crate_A_Breakable_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Crate_A_Breakable_A_C, 0x0000);
		}

		// class ABP_Readable_Wall_Note_C : public ABP_Readable_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Readable_Wall_Note__BP_Readable_Wall_Note_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Readable_Wall_Note_C, 0x0000);
		}

		// class UWidget_PersistenceIO_Indicator_C : public UPreservedUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_PersistenceIO_Indicator__Widget_PersistenceIO_Indicator_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_PersistenceIO_Indicator_C, 0x0000);
		}

		// class ADialog_OkDialog_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_OkDialog__Dialog_OkDialog_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_OkDialog_C, 0x0000);
		}

		// class ABP_Worldbuilding_Light_C : public APointLight
		TEST_METHOD(BlueprintGeneratedClass__BP_Worldbuilding_Light__BP_Worldbuilding_Light_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Worldbuilding_Light_C, 0x0000);
		}

		// class UCamera_Aim_Scoped_Base_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Aim_Scoped_Base__Camera_Aim_Scoped_Base_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Aim_Scoped_Base_C, 0x0000);
		}

		// class UAward_Armor_Legs_Adventurer_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Adventurer_Skin__Award_Armor_Legs_Adventurer_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Adventurer_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Warlord_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Warlord_Skin__Award_Armor_Head_Warlord_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Warlord_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Void_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Void_Skin__Award_Armor_Head_Void_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Void_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Twisted_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Twisted_Skin__Award_Armor_Head_Twisted_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Twisted_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Slayer_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Slayer_Skin__Award_Armor_Head_Slayer_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Slayer_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Cultist_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Cultist_Skin__Award_Armor_Head_Cultist_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Cultist_Skin_C, 0x0000);
		}

		// class UAward_Armor_Head_Bandit_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Head_Bandit_Skin__Award_Armor_Head_Bandit_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Head_Bandit_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Warlord_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Warlord_Skin__Award_Armor_Body_Warlord_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Warlord_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Slayer_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Slayer_Skin__Award_Armor_Body_Slayer_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Slayer_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Scrapper_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Scrapper_Skin__Award_Armor_Body_Scrapper_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Scrapper_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Hunter_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Hunter_Skin__Award_Armor_Body_Hunter_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Hunter_Skin_C, 0x0000);
		}

		// class UAward_Armor_Body_Adventurer_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Body_Adventurer_Skin__Award_Armor_Body_Adventurer_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Body_Adventurer_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Slayer_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Slayer_Skin__Award_Armor_Legs_Slayer_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Slayer_Skin_C, 0x0000);
		}

		// class UAward_Armor_Legs_Scrapper_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Scrapper_Skin__Award_Armor_Legs_Scrapper_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Scrapper_Skin_C, 0x0000);
		}

		// class ADialog_KickBan_C : public ADialog_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Dialog_KickBan__Dialog_KickBan_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADialog_KickBan_C, 0x0000);
		}

		// class AQuest_OverworldPOI_ElfQueen_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_OverworldPOI_ElfQueen__Quest_OverworldPOI_ElfQueen_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_ElfQueen_C, 0x0000);
		}

		// class UEmote_GetItem_C : public UDialog_Emote
		TEST_METHOD(BlueprintGeneratedClass__Emote_GetItem__Emote_GetItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEmote_GetItem_C, 0x0000);
		}

		// class UCharacter_Swamp_SlimeHulk_Projectile_Hit_C : public UAction_Buff_C
		TEST_METHOD(BlueprintGeneratedClass__Character_Swamp_SlimeHulk_Projectile_Hit__Character_Swamp_SlimeHulk_Projectile_Hit_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Swamp_SlimeHulk_Projectile_Hit_C, 0x0000);
		}

		// class AQuest_Boss_SwampGuardian_C : public AQuest_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Boss_SwampGuardian__Quest_Boss_SwampGuardian_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Boss_SwampGuardian_C, 0x0000);
		}

		// class AQuest_Boss_Fatty_C : public AQuest_POI_Boss_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Boss_Fatty__Quest_Boss_Fatty_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Boss_Fatty_C, 0x0000);
		}

		// class UResourceDef_Swamp_C : public UResourceDef
		TEST_METHOD(BlueprintGeneratedClass__ResourceDef_Swamp__ResourceDef_Swamp_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UResourceDef_Swamp_C, 0x0000);
		}

		// class UZoneDef_Swamp_Overworld01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Swamp_Overworld01__ZoneDef_Swamp_Overworld01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Swamp_Overworld01_C, 0x0000);
		}

		// class AQuest_FoundersPrison_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_FoundersPrison__Quest_FoundersPrison_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_FoundersPrison_C, 0x0000);
		}

		// class AQuest_SlaveRevolt_C : public AQuest_POI_Siege_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_SlaveRevolt__Quest_SlaveRevolt_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_SlaveRevolt_C, 0x0000);
		}

		// class USpeaker_RebelLeader_C : public UDialog_Speaker
		TEST_METHOD(BlueprintGeneratedClass__Speaker_RebelLeader__Speaker_RebelLeader_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpeaker_RebelLeader_C, 0x0000);
		}

		// class UZoneDef_Wasteland_Canyon01_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Wasteland_Canyon01__ZoneDef_Wasteland_Canyon01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Wasteland_Canyon01_C, 0x0000);
		}

		// class ABP_PhysicsActor_PictureFrame_C : public ABP_PhysicsActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_PictureFrame__BP_PhysicsActor_PictureFrame_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_PictureFrame_C, 0x0000);
		}

		// class ABP_PhysicsActor_GasContainer_B_C : public ABP_PhysicsActor_GasContainer_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_GasContainer_B__BP_PhysicsActor_GasContainer_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_GasContainer_B_C, 0x0000);
		}

		// class ABP_City_Crate_A_C : public ABP_BreakableActor_2States_C
		TEST_METHOD(BlueprintGeneratedClass__BP_City_Crate_A__BP_City_Crate_A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_City_Crate_A_C, 0x0000);
		}

		// class AImpactEffect_Creature_Large_Bodyfall_C : public AImpactEffect
		TEST_METHOD(BlueprintGeneratedClass__ImpactEffect_Creature_Large_Bodyfall__ImpactEffect_Creature_Large_Bodyfall_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AImpactEffect_Creature_Large_Bodyfall_C, 0x0000);
		}

		// class UAction_Sound_Awareness_C : public UActionBase
		TEST_METHOD(BlueprintGeneratedClass__Action_Sound_Awareness__Action_Sound_Awareness_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Sound_Awareness_C, 0x0000);
		}

		// class UItemCategory_Weapons_C : public UItemCategory
		TEST_METHOD(BlueprintGeneratedClass__ItemCategory_Weapons__ItemCategory_Weapons_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemCategory_Weapons_C, 0x0000);
		}

		// class UWeapon_Shotgun_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Shotgun_AnimsBP__Weapon_Shotgun_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Shotgun_AnimsBP_C, 0x0000);
		}

		// class UCharacter_Root_Broken_NoVisibleTarget_C : public UAIDefaultTargetSelector
		TEST_METHOD(BlueprintGeneratedClass__Character_Root_Broken_NoVisibleTarget__Character_Root_Broken_NoVisibleTarget_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacter_Root_Broken_NoVisibleTarget_C, 0x0000);
		}

		// class UWeapon_Boss_ComputedStats_C : public UWeapon_ComputedStats_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Boss_ComputedStats__Weapon_Boss_ComputedStats_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Boss_ComputedStats_C, 0x0000);
		}

		// class UWidget_FocusWidget_C : public UFocusWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Widget_FocusWidget__Widget_FocusWidget_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget_FocusWidget_C, 0x0000);
		}

		// class UAction_Wasteland_Stalker_Interactive_Damage_C : public UAction_Interactive_Damage_C
		TEST_METHOD(BlueprintGeneratedClass__Action_Wasteland_Stalker_Interactive_Damage__Action_Wasteland_Stalker_Interactive_Damage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAction_Wasteland_Stalker_Interactive_Damage_C, 0x0000);
		}

		// class UCameraShake_Explosion_MediumHeavy_Impact_C : public UCameraShake
		TEST_METHOD(BlueprintGeneratedClass__CameraShake_Explosion_MediumHeavy_Impact__CameraShake_Explosion_MediumHeavy_Impact_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake_Explosion_MediumHeavy_Impact_C, 0x0000);
		}

		// class ATracer_Fire_C : public ATracer
		TEST_METHOD(BlueprintGeneratedClass__Tracer_Fire__Tracer_Fire_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATracer_Fire_C, 0x0000);
		}

		// class UWeapon_Submachinegun_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Weapon_Submachinegun_AnimsBP__Weapon_Submachinegun_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Submachinegun_AnimsBP_C, 0x0000);
		}

		// class AConsumable_GreenLeaf_C : public AItem_Potion_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Consumable_GreenLeaf__Consumable_GreenLeaf_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AConsumable_GreenLeaf_C, 0x0000);
		}

		// class UDamageType_Projectile_Shock_Mod_C : public UDamageTypeGunfire
		TEST_METHOD(BlueprintGeneratedClass__DamageType_Projectile_Shock_Mod__DamageType_Projectile_Shock_Mod_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType_Projectile_Shock_Mod_C, 0x0000);
		}

		// class UWeapon_Pan_EyeOfTheStorm_Actions_C : public UAction_List_C
		TEST_METHOD(BlueprintGeneratedClass__Weapon_Pan_EyeOfTheStorm_Actions__Weapon_Pan_EyeOfTheStorm_Actions_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeapon_Pan_EyeOfTheStorm_Actions_C, 0x0000);
		}

		// class AArmor_Legs_Hunter_C : public AArmor_Legs_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Armor_Legs_Hunter__Armor_Legs_Hunter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Legs_Hunter_C, 0x0000);
		}

		// class ABP_RandomStaticActor_Vehicle_C : public ABP_RandomStaticActor_C
		TEST_METHOD(BlueprintGeneratedClass__BP_RandomStaticActor_Vehicle__BP_RandomStaticActor_Vehicle_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_RandomStaticActor_Vehicle_C, 0x0000);
		}

		// class UCamera_Sprint_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Sprint__Camera_Sprint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Sprint_C, 0x0000);
		}

		// class UCamera_Melee_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Melee__Camera_Melee_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Melee_C, 0x0000);
		}

		// class UCamera_Ladder_Top_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Ladder_Top__Camera_Ladder_Top_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Ladder_Top_C, 0x0000);
		}

		// class UCamera_Float_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Float__Camera_Float_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Float_C, 0x0000);
		}

		// class UCamera_Crouch_Vault_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Crouch_Vault__Camera_Crouch_Vault_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Crouch_Vault_C, 0x0000);
		}

		// class UDamageClass_Root_C : public UDamageClass
		TEST_METHOD(BlueprintGeneratedClass__DamageClass_Root__DamageClass_Root_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageClass_Root_C, 0x0000);
		}

		// class ASpawnPoint_Waypoint_C : public ASpawnPoint
		TEST_METHOD(BlueprintGeneratedClass__SpawnPoint_Waypoint__SpawnPoint_Waypoint_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpawnPoint_Waypoint_C, 0x0000);
		}

		// class ABP_PhysicsActor_Telephone_B_C : public ABP_PhysicsActor_Telephone_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_Telephone_B__BP_PhysicsActor_Telephone_B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_Telephone_B_C, 0x0000);
		}

		// class UArchetype_Hunter_UI_C : public URemnantArchetype
		TEST_METHOD(BlueprintGeneratedClass__Archetype_Hunter_UI__Archetype_Hunter_UI_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArchetype_Hunter_UI_C, 0x0000);
		}

		// class AAIPOI_Patrol_C : public AAIPointOfInterest
		TEST_METHOD(BlueprintGeneratedClass__AIPOI_Patrol__AIPOI_Patrol_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIPOI_Patrol_C, 0x0000);
		}

		// class AArmor_Body_Scrapper_PreOrder_C : public AEquipmentSkin
		TEST_METHOD(BlueprintGeneratedClass__Armor_Body_Scrapper_PreOrder__Armor_Body_Scrapper_PreOrder_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArmor_Body_Scrapper_PreOrder_C, 0x0000);
		}

		// class AQuest_Event_AbrasiveAmulet_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_AbrasiveAmulet__Quest_Event_AbrasiveAmulet_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_AbrasiveAmulet_C, 0x0000);
		}

		// class AQuest_Event_BloodFont_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_BloodFont__Quest_Event_BloodFont_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_BloodFont_C, 0x0000);
		}

		// class ABP_SpacerBlock_C : public AStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_SpacerBlock__BP_SpacerBlock_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_SpacerBlock_C, 0x0000);
		}

		// class UCamera_Crouch_Aim_C : public UThirdPersonCameraState
		TEST_METHOD(BlueprintGeneratedClass__Camera_Crouch_Aim__Camera_Crouch_Aim_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCamera_Crouch_Aim_C, 0x0000);
		}

		// class ABP_PhysicsActor_FileHolder_C_C : public ABP_PhysicsActor_FileHolder_A_C
		TEST_METHOD(BlueprintGeneratedClass__BP_PhysicsActor_FileHolder_C__BP_PhysicsActor_FileHolder_C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_PhysicsActor_FileHolder_C_C, 0x0000);
		}

		// class UAward_Trinket_WhiteRose_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Trinket_WhiteRose__Award_Trinket_WhiteRose_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Trinket_WhiteRose_C, 0x0000);
		}

		// class UAward_Trinket_BlackCatBand_C : public UItemAward
		TEST_METHOD(BlueprintGeneratedClass__Award_Trinket_BlackCatBand__Award_Trinket_BlackCatBand_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Trinket_BlackCatBand_C, 0x0000);
		}

		// class UAward_Armor_Legs_Warlord_Skin_C : public UAccountAwardSkins_C
		TEST_METHOD(BlueprintGeneratedClass__Award_Armor_Legs_Warlord_Skin__Award_Armor_Legs_Warlord_Skin_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAward_Armor_Legs_Warlord_Skin_C, 0x0000);
		}

		// class UZoneDef_Jungle_POI_C : public UZoneDef
		TEST_METHOD(BlueprintGeneratedClass__ZoneDef_Jungle_POI__ZoneDef_Jungle_POI_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UZoneDef_Jungle_POI_C, 0x0000);
		}

		// class AQuest_Event_RingOfEvasion_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_RingOfEvasion__Quest_Event_RingOfEvasion_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_RingOfEvasion_C, 0x0000);
		}

		// class AQuest_Event_BandOfCastor_C : public AQuest_Event_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event_BandOfCastor__Quest_Event_BandOfCastor_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_BandOfCastor_C, 0x0000);
		}

		// class AQuest_OverworldPOI_Settlement_C : public ARemnantQuest
		TEST_METHOD(BlueprintGeneratedClass__Quest_OverworldPOI_Settlement__Quest_OverworldPOI_Settlement_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_OverworldPOI_Settlement_C, 0x0000);
		}

		// class AQuest_Event_C : public AQuest_Base_C
		TEST_METHOD(BlueprintGeneratedClass__Quest_Event__Quest_Event_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuest_Event_C, 0x0000);
		}

		// class UInteractive_Crystal_Campfire_AnimsBP_C : public UAnimInstanceGunfire
		TEST_METHOD(AnimBlueprintGeneratedClass__Interactive_Crystal_Campfire_AnimsBP__Interactive_Crystal_Campfire_AnimsBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractive_Crystal_Campfire_AnimsBP_C, 0x0000);
		}

		// struct FDistributionLookupTable
		TEST_METHOD(ScriptStruct__Engine__DistributionLookupTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDistributionLookupTable, 0x0000);
		}

		// struct FRawDistribution
		TEST_METHOD(ScriptStruct__Engine__RawDistribution)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawDistribution, 0x0000);
		}

		// struct FFloatDistribution
		TEST_METHOD(ScriptStruct__Engine__FloatDistribution)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatDistribution, 0x0000);
		}

		// struct FVectorDistribution
		TEST_METHOD(ScriptStruct__Engine__VectorDistribution)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorDistribution, 0x0000);
		}

		// struct FVector4Distribution
		TEST_METHOD(ScriptStruct__Engine__Vector4Distribution)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector4Distribution, 0x0000);
		}

		// struct FFloatRK4SpringInterpolator
		TEST_METHOD(ScriptStruct__Engine__FloatRK4SpringInterpolator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatRK4SpringInterpolator, 0x0000);
		}

		// struct FVectorRK4SpringInterpolator
		TEST_METHOD(ScriptStruct__Engine__VectorRK4SpringInterpolator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorRK4SpringInterpolator, 0x0000);
		}

		// struct FFormatArgumentData
		TEST_METHOD(ScriptStruct__Engine__FormatArgumentData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFormatArgumentData, 0x0000);
		}

		// struct FExpressionInput
		TEST_METHOD(ScriptStruct__Engine__ExpressionInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExpressionInput, 0x0000);
		}

		// struct FMaterialAttributesInput : public FExpressionInput
		TEST_METHOD(ScriptStruct__Engine__MaterialAttributesInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialAttributesInput, 0x0000);
		}

		// struct FExpressionOutput
		TEST_METHOD(ScriptStruct__Engine__ExpressionOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExpressionOutput, 0x0000);
		}

		// struct FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__MaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialInput, 0x0000);
		}

		// struct FColorMaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__ColorMaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorMaterialInput, 0x0000);
		}

		// struct FScalarMaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__ScalarMaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarMaterialInput, 0x0000);
		}

		// struct FVectorMaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__VectorMaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorMaterialInput, 0x0000);
		}

		// struct FVector2MaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__Vector2MaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector2MaterialInput, 0x0000);
		}

		// struct FHitResult
		TEST_METHOD(ScriptStruct__Engine__HitResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHitResult, 0x0000);
		}

		// struct FVector_NetQuantize : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantize, 0x0000);
		}

		// struct FVector_NetQuantizeNormal : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantizeNormal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantizeNormal, 0x0000);
		}

		// struct FBranchingPointNotifyPayload
		TEST_METHOD(ScriptStruct__Engine__BranchingPointNotifyPayload)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchingPointNotifyPayload, 0x0000);
		}

		// struct FSimpleMemberReference
		TEST_METHOD(ScriptStruct__Engine__SimpleMemberReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimpleMemberReference, 0x0000);
		}

		// struct FTickFunction
		TEST_METHOD(ScriptStruct__Engine__TickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTickFunction, 0x0000);
		}

		// struct FActorComponentTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__ActorComponentTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorComponentTickFunction, 0x0000);
		}

		// struct FSubtitleCue
		TEST_METHOD(ScriptStruct__Engine__SubtitleCue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubtitleCue, 0x0000);
		}

		// struct FInterpControlPoint
		TEST_METHOD(ScriptStruct__Engine__InterpControlPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpControlPoint, 0x0000);
		}

		// struct FPlatformInterfaceDelegateResult
		TEST_METHOD(ScriptStruct__Engine__PlatformInterfaceDelegateResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlatformInterfaceDelegateResult, 0x0000);
		}

		// struct FPlatformInterfaceData
		TEST_METHOD(ScriptStruct__Engine__PlatformInterfaceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlatformInterfaceData, 0x0000);
		}

		// struct FDebugFloatHistory
		TEST_METHOD(ScriptStruct__Engine__DebugFloatHistory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebugFloatHistory, 0x0000);
		}

		// struct FLatentActionInfo
		TEST_METHOD(ScriptStruct__Engine__LatentActionInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLatentActionInfo, 0x0000);
		}

		// struct FTimerHandle
		TEST_METHOD(ScriptStruct__Engine__TimerHandle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimerHandle, 0x0000);
		}

		// struct FCollisionProfileName
		TEST_METHOD(ScriptStruct__Engine__CollisionProfileName)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionProfileName, 0x0000);
		}

		// struct FGenericStruct
		TEST_METHOD(ScriptStruct__Engine__GenericStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGenericStruct, 0x0000);
		}

		// struct FUserActivity
		TEST_METHOD(ScriptStruct__Engine__UserActivity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUserActivity, 0x0000);
		}

		// struct FDamageEvent
		TEST_METHOD(ScriptStruct__Engine__DamageEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDamageEvent, 0x0000);
		}

		// struct FTableRowBase
		TEST_METHOD(ScriptStruct__Engine__TableRowBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTableRowBase, 0x0000);
		}

		// struct FUniqueNetIdRepl : public FUniqueNetIdWrapper
		TEST_METHOD(ScriptStruct__Engine__UniqueNetIdRepl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUniqueNetIdRepl, 0x0000);
		}

		// struct FDirectoryPath
		TEST_METHOD(ScriptStruct__Engine__DirectoryPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectoryPath, 0x0000);
		}

		// struct FPerPlatformFloat
		TEST_METHOD(ScriptStruct__Engine__PerPlatformFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerPlatformFloat, 0x0000);
		}

		// struct FPerPlatformInt
		TEST_METHOD(ScriptStruct__Engine__PerPlatformInt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerPlatformInt, 0x0000);
		}

		// struct FPerPlatformBool
		TEST_METHOD(ScriptStruct__Engine__PerPlatformBool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerPlatformBool, 0x0000);
		}

		// struct FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Base, 0x0000);
		}

		// struct FInputScaleBiasClamp
		TEST_METHOD(ScriptStruct__Engine__InputScaleBiasClamp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputScaleBiasClamp, 0x0000);
		}

		// struct FInputRange
		TEST_METHOD(ScriptStruct__Engine__InputRange)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputRange, 0x0000);
		}

		// struct FInputAlphaBoolBlend
		TEST_METHOD(ScriptStruct__Engine__InputAlphaBoolBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAlphaBoolBlend, 0x0000);
		}

		// struct FAlphaBlend
		TEST_METHOD(ScriptStruct__Engine__AlphaBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAlphaBlend, 0x0000);
		}

		// struct FInputScaleBias
		TEST_METHOD(ScriptStruct__Engine__InputScaleBias)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputScaleBias, 0x0000);
		}

		// struct FPoseLinkBase
		TEST_METHOD(ScriptStruct__Engine__PoseLinkBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseLinkBase, 0x0000);
		}

		// struct FComponentSpacePoseLink : public FPoseLinkBase
		TEST_METHOD(ScriptStruct__Engine__ComponentSpacePoseLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentSpacePoseLink, 0x0000);
		}

		// struct FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__Engine__AnimInstanceProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimInstanceProxy, 0x0000);
		}

		// struct FRuntimeFloatCurve
		TEST_METHOD(ScriptStruct__Engine__RuntimeFloatCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRuntimeFloatCurve, 0x0000);
		}

		// struct FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__IndexedCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIndexedCurve, 0x0000);
		}

		// struct FKeyHandleMap
		TEST_METHOD(ScriptStruct__Engine__KeyHandleMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyHandleMap, 0x0000);
		}

		// struct FRealCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__RealCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRealCurve, 0x0000);
		}

		// struct FRichCurve : public FRealCurve
		TEST_METHOD(ScriptStruct__Engine__RichCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichCurve, 0x0000);
		}

		// struct FRichCurveKey
		TEST_METHOD(ScriptStruct__Engine__RichCurveKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichCurveKey, 0x0000);
		}

		// struct FNavigationLinkBase
		TEST_METHOD(ScriptStruct__Engine__NavigationLinkBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationLinkBase, 0x0000);
		}

		// struct FNavAgentSelector
		TEST_METHOD(ScriptStruct__Engine__NavAgentSelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAgentSelector, 0x0000);
		}

		// struct FInterpolationParameter
		TEST_METHOD(ScriptStruct__Engine__InterpolationParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpolationParameter, 0x0000);
		}

		// struct FPoseLink : public FPoseLinkBase
		TEST_METHOD(ScriptStruct__Engine__PoseLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseLink, 0x0000);
		}

		// struct FBlendSampleData
		TEST_METHOD(ScriptStruct__Engine__BlendSampleData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendSampleData, 0x0000);
		}

		// struct FAnimNode_AssetPlayerBase : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_AssetPlayerBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_AssetPlayerBase, 0x0000);
		}

		// struct FInteriorSettings
		TEST_METHOD(ScriptStruct__Engine__InteriorSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInteriorSettings, 0x0000);
		}

		// struct FReverbSettings
		TEST_METHOD(ScriptStruct__Engine__ReverbSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReverbSettings, 0x0000);
		}

		// struct FInputActionKeyMapping
		TEST_METHOD(ScriptStruct__Engine__InputActionKeyMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputActionKeyMapping, 0x0000);
		}

		// struct FInputAxisKeyMapping
		TEST_METHOD(ScriptStruct__Engine__InputAxisKeyMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAxisKeyMapping, 0x0000);
		}

		// struct FLightingChannels
		TEST_METHOD(ScriptStruct__Engine__LightingChannels)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightingChannels, 0x0000);
		}

		// struct FKeyHandleLookupTable
		TEST_METHOD(ScriptStruct__Engine__KeyHandleLookupTable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyHandleLookupTable, 0x0000);
		}

		// struct FBoneReference
		TEST_METHOD(ScriptStruct__Engine__BoneReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneReference, 0x0000);
		}

		// struct FPerBoneBlendWeight
		TEST_METHOD(ScriptStruct__Engine__PerBoneBlendWeight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerBoneBlendWeight, 0x0000);
		}

		// struct FInputBlendPose
		TEST_METHOD(ScriptStruct__Engine__InputBlendPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputBlendPose, 0x0000);
		}

		// struct FBranchFilter
		TEST_METHOD(ScriptStruct__Engine__BranchFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchFilter, 0x0000);
		}

		// struct FPoseSnapshot
		TEST_METHOD(ScriptStruct__Engine__PoseSnapshot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseSnapshot, 0x0000);
		}

		// struct FAnimCurveParam
		TEST_METHOD(ScriptStruct__Engine__AnimCurveParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimCurveParam, 0x0000);
		}

		// struct FActorComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__ActorComponentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorComponentInstanceData, 0x0000);
		}

		// struct FActorComponentDuplicatedObjectData
		TEST_METHOD(ScriptStruct__Engine__ActorComponentDuplicatedObjectData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorComponentDuplicatedObjectData, 0x0000);
		}

		// struct FSceneComponentInstanceData : public FActorComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__SceneComponentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSceneComponentInstanceData, 0x0000);
		}

		// struct FRepAttachment
		TEST_METHOD(ScriptStruct__Engine__RepAttachment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRepAttachment, 0x0000);
		}

		// struct FVector_NetQuantize100 : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantize100)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantize100, 0x0000);
		}

		// struct FRepMovement
		TEST_METHOD(ScriptStruct__Engine__RepMovement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRepMovement, 0x0000);
		}

		// struct FActorTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__ActorTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorTickFunction, 0x0000);
		}

		// struct FKAggregateGeom
		TEST_METHOD(ScriptStruct__Engine__KAggregateGeom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKAggregateGeom, 0x0000);
		}

		// struct FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KShapeElem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKShapeElem, 0x0000);
		}

		// struct FKTaperedCapsuleElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KTaperedCapsuleElem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKTaperedCapsuleElem, 0x0000);
		}

		// struct FKConvexElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KConvexElem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKConvexElem, 0x0000);
		}

		// struct FKSphylElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KSphylElem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKSphylElem, 0x0000);
		}

		// struct FKBoxElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KBoxElem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKBoxElem, 0x0000);
		}

		// struct FKSphereElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KSphereElem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKSphereElem, 0x0000);
		}

		// struct FAnimationGroupReference
		TEST_METHOD(ScriptStruct__Engine__AnimationGroupReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationGroupReference, 0x0000);
		}

		// struct FRootMotionMovementParams
		TEST_METHOD(ScriptStruct__Engine__RootMotionMovementParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionMovementParams, 0x0000);
		}

		// struct FAnimGroupInstance
		TEST_METHOD(ScriptStruct__Engine__AnimGroupInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimGroupInstance, 0x0000);
		}

		// struct FAnimTickRecord
		TEST_METHOD(ScriptStruct__Engine__AnimTickRecord)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimTickRecord, 0x0000);
		}

		// struct FMarkerSyncAnimPosition
		TEST_METHOD(ScriptStruct__Engine__MarkerSyncAnimPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMarkerSyncAnimPosition, 0x0000);
		}

		// struct FBlendFilter
		TEST_METHOD(ScriptStruct__Engine__BlendFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendFilter, 0x0000);
		}

		// struct FAnimationRecordingSettings
		TEST_METHOD(ScriptStruct__Engine__AnimationRecordingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationRecordingSettings, 0x0000);
		}

		// struct FComponentSpacePose
		TEST_METHOD(ScriptStruct__Engine__ComponentSpacePose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentSpacePose, 0x0000);
		}

		// struct FLocalSpacePose
		TEST_METHOD(ScriptStruct__Engine__LocalSpacePose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLocalSpacePose, 0x0000);
		}

		// struct FNamedTransform
		TEST_METHOD(ScriptStruct__Engine__NamedTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedTransform, 0x0000);
		}

		// struct FNamedColor
		TEST_METHOD(ScriptStruct__Engine__NamedColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedColor, 0x0000);
		}

		// struct FNamedVector
		TEST_METHOD(ScriptStruct__Engine__NamedVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedVector, 0x0000);
		}

		// struct FNamedFloat
		TEST_METHOD(ScriptStruct__Engine__NamedFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedFloat, 0x0000);
		}

		// struct FAnimParentNodeAssetOverride
		TEST_METHOD(ScriptStruct__Engine__AnimParentNodeAssetOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimParentNodeAssetOverride, 0x0000);
		}

		// struct FAnimGroupInfo
		TEST_METHOD(ScriptStruct__Engine__AnimGroupInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimGroupInfo, 0x0000);
		}

		// struct FAnimBlueprintDebugData
		TEST_METHOD(ScriptStruct__Engine__AnimBlueprintDebugData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimBlueprintDebugData, 0x0000);
		}

		// struct FAnimationFrameSnapshot
		TEST_METHOD(ScriptStruct__Engine__AnimationFrameSnapshot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationFrameSnapshot, 0x0000);
		}

		// struct FStateMachineDebugData
		TEST_METHOD(ScriptStruct__Engine__StateMachineDebugData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStateMachineDebugData, 0x0000);
		}

		// struct FAnimTrack
		TEST_METHOD(ScriptStruct__Engine__AnimTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimTrack, 0x0000);
		}

		// struct FAnimSegment
		TEST_METHOD(ScriptStruct__Engine__AnimSegment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSegment, 0x0000);
		}

		// struct FRootMotionExtractionStep
		TEST_METHOD(ScriptStruct__Engine__RootMotionExtractionStep)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionExtractionStep, 0x0000);
		}

		// struct FRawCurveTracks
		TEST_METHOD(ScriptStruct__Engine__RawCurveTracks)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawCurveTracks, 0x0000);
		}

		// struct FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__AnimCurveBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimCurveBase, 0x0000);
		}

		// struct FSmartName
		TEST_METHOD(ScriptStruct__Engine__SmartName)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSmartName, 0x0000);
		}

		// struct FFloatCurve : public FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__FloatCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatCurve, 0x0000);
		}

		// struct FTransformCurve : public FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__TransformCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformCurve, 0x0000);
		}

		// struct FVectorCurve : public FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__VectorCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorCurve, 0x0000);
		}

		// struct FSlotEvaluationPose
		TEST_METHOD(ScriptStruct__Engine__SlotEvaluationPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlotEvaluationPose, 0x0000);
		}

		// struct FA2Pose
		TEST_METHOD(ScriptStruct__Engine__A2Pose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FA2Pose, 0x0000);
		}

		// struct FA2CSPose : public FA2Pose
		TEST_METHOD(ScriptStruct__Engine__A2CSPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FA2CSPose, 0x0000);
		}

		// struct FQueuedDrawDebugItem
		TEST_METHOD(ScriptStruct__Engine__QueuedDrawDebugItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQueuedDrawDebugItem, 0x0000);
		}

		// struct FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__AnimLinkableElement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimLinkableElement, 0x0000);
		}

		// struct FAnimMontageInstance
		TEST_METHOD(ScriptStruct__Engine__AnimMontageInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimMontageInstance, 0x0000);
		}

		// struct FAnimNotifyEvent : public FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyEvent, 0x0000);
		}

		// struct FBranchingPointMarker
		TEST_METHOD(ScriptStruct__Engine__BranchingPointMarker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchingPointMarker, 0x0000);
		}

		// struct FBranchingPoint : public FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__BranchingPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchingPoint, 0x0000);
		}

		// struct FSlotAnimationTrack
		TEST_METHOD(ScriptStruct__Engine__SlotAnimationTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlotAnimationTrack, 0x0000);
		}

		// struct FCompositeSection : public FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__CompositeSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeSection, 0x0000);
		}

		// struct FAnimNode_ApplyMeshSpaceAdditive : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_ApplyMeshSpaceAdditive)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ApplyMeshSpaceAdditive, 0x0000);
		}

		// struct FAnimNode_SaveCachedPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SaveCachedPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SaveCachedPose, 0x0000);
		}

		// struct FAnimNode_SequencePlayer : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SequencePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SequencePlayer, 0x0000);
		}

		// struct FAnimNode_StateMachine : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_StateMachine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_StateMachine, 0x0000);
		}

		// struct FAnimationPotentialTransition
		TEST_METHOD(ScriptStruct__Engine__AnimationPotentialTransition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationPotentialTransition, 0x0000);
		}

		// struct FAnimationActiveTransitionEntry
		TEST_METHOD(ScriptStruct__Engine__AnimationActiveTransitionEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationActiveTransitionEntry, 0x0000);
		}

		// struct FAnimNode_SubInput : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SubInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SubInput, 0x0000);
		}

		// struct FAnimNode_SubInstance : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SubInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SubInstance, 0x0000);
		}

		// struct FAnimNode_TransitionPoseEvaluator : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_TransitionPoseEvaluator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TransitionPoseEvaluator, 0x0000);
		}

		// struct FAnimNode_TransitionResult : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_TransitionResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TransitionResult, 0x0000);
		}

		// struct FAnimNode_UseCachedPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_UseCachedPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_UseCachedPose, 0x0000);
		}

		// struct FExposedValueHandler
		TEST_METHOD(ScriptStruct__Engine__ExposedValueHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExposedValueHandler, 0x0000);
		}

		// struct FExposedValueCopyRecord
		TEST_METHOD(ScriptStruct__Engine__ExposedValueCopyRecord)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExposedValueCopyRecord, 0x0000);
		}

		// struct FAnimNode_ConvertLocalToComponentSpace : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_ConvertLocalToComponentSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ConvertLocalToComponentSpace, 0x0000);
		}

		// struct FAnimNode_ConvertComponentToLocalSpace : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_ConvertComponentToLocalSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ConvertComponentToLocalSpace, 0x0000);
		}

		// struct FAnimNotifyQueue
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyQueue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyQueue, 0x0000);
		}

		// struct FAnimNotifyArray
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyArray)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyArray, 0x0000);
		}

		// struct FAnimNotifyEventReference
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyEventReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyEventReference, 0x0000);
		}

		// struct FCompressedSegment
		TEST_METHOD(ScriptStruct__Engine__CompressedSegment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompressedSegment, 0x0000);
		}

		// struct FCompressedTrack
		TEST_METHOD(ScriptStruct__Engine__CompressedTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompressedTrack, 0x0000);
		}

		// struct FCurveTrack
		TEST_METHOD(ScriptStruct__Engine__CurveTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveTrack, 0x0000);
		}

		// struct FScaleTrack
		TEST_METHOD(ScriptStruct__Engine__ScaleTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScaleTrack, 0x0000);
		}

		// struct FRotationTrack
		TEST_METHOD(ScriptStruct__Engine__RotationTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRotationTrack, 0x0000);
		}

		// struct FTranslationTrack
		TEST_METHOD(ScriptStruct__Engine__TranslationTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTranslationTrack, 0x0000);
		}

		// struct FTrackToSkeletonMap
		TEST_METHOD(ScriptStruct__Engine__TrackToSkeletonMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTrackToSkeletonMap, 0x0000);
		}

		// struct FAnimSequenceTrackContainer
		TEST_METHOD(ScriptStruct__Engine__AnimSequenceTrackContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSequenceTrackContainer, 0x0000);
		}

		// struct FRawAnimSequenceTrack
		TEST_METHOD(ScriptStruct__Engine__RawAnimSequenceTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawAnimSequenceTrack, 0x0000);
		}

		// struct FAnimSetMeshLinkup
		TEST_METHOD(ScriptStruct__Engine__AnimSetMeshLinkup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSetMeshLinkup, 0x0000);
		}

		// struct FAnimSingleNodeInstanceProxy : public FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__Engine__AnimSingleNodeInstanceProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSingleNodeInstanceProxy, 0x0000);
		}

		// struct FAnimNode_SingleNode : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SingleNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SingleNode, 0x0000);
		}

		// struct FBakedAnimationStateMachine
		TEST_METHOD(ScriptStruct__Engine__BakedAnimationStateMachine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBakedAnimationStateMachine, 0x0000);
		}

		// struct FAnimationStateBase
		TEST_METHOD(ScriptStruct__Engine__AnimationStateBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationStateBase, 0x0000);
		}

		// struct FAnimationTransitionBetweenStates : public FAnimationStateBase
		TEST_METHOD(ScriptStruct__Engine__AnimationTransitionBetweenStates)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationTransitionBetweenStates, 0x0000);
		}

		// struct FBakedAnimationState
		TEST_METHOD(ScriptStruct__Engine__BakedAnimationState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBakedAnimationState, 0x0000);
		}

		// struct FBakedStateExitTransition
		TEST_METHOD(ScriptStruct__Engine__BakedStateExitTransition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBakedStateExitTransition, 0x0000);
		}

		// struct FAnimationState : public FAnimationStateBase
		TEST_METHOD(ScriptStruct__Engine__AnimationState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationState, 0x0000);
		}

		// struct FAnimationTransitionRule
		TEST_METHOD(ScriptStruct__Engine__AnimationTransitionRule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationTransitionRule, 0x0000);
		}

		// struct FMarkerSyncData
		TEST_METHOD(ScriptStruct__Engine__MarkerSyncData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMarkerSyncData, 0x0000);
		}

		// struct FAnimSyncMarker
		TEST_METHOD(ScriptStruct__Engine__AnimSyncMarker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSyncMarker, 0x0000);
		}

		// struct FAnimNotifyTrack
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyTrack, 0x0000);
		}

		// struct FPerBoneBlendWeights
		TEST_METHOD(ScriptStruct__Engine__PerBoneBlendWeights)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerBoneBlendWeights, 0x0000);
		}

		// struct FAssetImportInfo
		TEST_METHOD(ScriptStruct__Engine__AssetImportInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetImportInfo, 0x0000);
		}

		// struct FPrimaryAssetRulesCustomOverride
		TEST_METHOD(ScriptStruct__Engine__PrimaryAssetRulesCustomOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetRulesCustomOverride, 0x0000);
		}

		// struct FPrimaryAssetRules
		TEST_METHOD(ScriptStruct__Engine__PrimaryAssetRules)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetRules, 0x0000);
		}

		// struct FPrimaryAssetRulesOverride
		TEST_METHOD(ScriptStruct__Engine__PrimaryAssetRulesOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetRulesOverride, 0x0000);
		}

		// struct FAssetManagerRedirect
		TEST_METHOD(ScriptStruct__Engine__AssetManagerRedirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetManagerRedirect, 0x0000);
		}

		// struct FPrimaryAssetTypeInfo
		TEST_METHOD(ScriptStruct__Engine__PrimaryAssetTypeInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetTypeInfo, 0x0000);
		}

		// struct FAssetMapping
		TEST_METHOD(ScriptStruct__Engine__AssetMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetMapping, 0x0000);
		}

		// struct FAtmospherePrecomputeInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__AtmospherePrecomputeInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtmospherePrecomputeInstanceData, 0x0000);
		}

		// struct FAtmospherePrecomputeParameters
		TEST_METHOD(ScriptStruct__Engine__AtmospherePrecomputeParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtmospherePrecomputeParameters, 0x0000);
		}

		// struct FBaseAttenuationSettings
		TEST_METHOD(ScriptStruct__Engine__BaseAttenuationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBaseAttenuationSettings, 0x0000);
		}

		// struct FAudioComponentParam
		TEST_METHOD(ScriptStruct__Engine__AudioComponentParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAudioComponentParam, 0x0000);
		}

		// struct FAudioQualitySettings
		TEST_METHOD(ScriptStruct__Engine__AudioQualitySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAudioQualitySettings, 0x0000);
		}

		// struct FLaunchOnTestSettings
		TEST_METHOD(ScriptStruct__Engine__LaunchOnTestSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLaunchOnTestSettings, 0x0000);
		}

		// struct FFilePath
		TEST_METHOD(ScriptStruct__Engine__FilePath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFilePath, 0x0000);
		}

		// struct FEditorMapPerformanceTestDefinition
		TEST_METHOD(ScriptStruct__Engine__EditorMapPerformanceTestDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorMapPerformanceTestDefinition, 0x0000);
		}

		// struct FBuildPromotionTestSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionTestSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionTestSettings, 0x0000);
		}

		// struct FBuildPromotionNewProjectSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionNewProjectSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionNewProjectSettings, 0x0000);
		}

		// struct FBuildPromotionOpenAssetSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionOpenAssetSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionOpenAssetSettings, 0x0000);
		}

		// struct FBuildPromotionImportWorkflowSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionImportWorkflowSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionImportWorkflowSettings, 0x0000);
		}

		// struct FEditorImportWorkflowDefinition
		TEST_METHOD(ScriptStruct__Engine__EditorImportWorkflowDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorImportWorkflowDefinition, 0x0000);
		}

		// struct FImportFactorySettingValues
		TEST_METHOD(ScriptStruct__Engine__ImportFactorySettingValues)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImportFactorySettingValues, 0x0000);
		}

		// struct FBlueprintEditorPromotionSettings
		TEST_METHOD(ScriptStruct__Engine__BlueprintEditorPromotionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintEditorPromotionSettings, 0x0000);
		}

		// struct FParticleEditorPromotionSettings
		TEST_METHOD(ScriptStruct__Engine__ParticleEditorPromotionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleEditorPromotionSettings, 0x0000);
		}

		// struct FMaterialEditorPromotionSettings
		TEST_METHOD(ScriptStruct__Engine__MaterialEditorPromotionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialEditorPromotionSettings, 0x0000);
		}

		// struct FEditorImportExportTestDefinition
		TEST_METHOD(ScriptStruct__Engine__EditorImportExportTestDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorImportExportTestDefinition, 0x0000);
		}

		// struct FExternalToolDefinition
		TEST_METHOD(ScriptStruct__Engine__ExternalToolDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExternalToolDefinition, 0x0000);
		}

		// struct FNavAvoidanceData
		TEST_METHOD(ScriptStruct__Engine__NavAvoidanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAvoidanceData, 0x0000);
		}

		// struct FBlendProfileBoneEntry
		TEST_METHOD(ScriptStruct__Engine__BlendProfileBoneEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendProfileBoneEntry, 0x0000);
		}

		// struct FPerBoneInterpolation
		TEST_METHOD(ScriptStruct__Engine__PerBoneInterpolation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerBoneInterpolation, 0x0000);
		}

		// struct FGridBlendSample
		TEST_METHOD(ScriptStruct__Engine__GridBlendSample)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGridBlendSample, 0x0000);
		}

		// struct FEditorElement
		TEST_METHOD(ScriptStruct__Engine__EditorElement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorElement, 0x0000);
		}

		// struct FBlendSample
		TEST_METHOD(ScriptStruct__Engine__BlendSample)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendSample, 0x0000);
		}

		// struct FBlendParameter
		TEST_METHOD(ScriptStruct__Engine__BlendParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendParameter, 0x0000);
		}

		// struct FBPEditorBookmarkNode
		TEST_METHOD(ScriptStruct__Engine__BPEditorBookmarkNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPEditorBookmarkNode, 0x0000);
		}

		// struct FEditedDocumentInfo
		TEST_METHOD(ScriptStruct__Engine__EditedDocumentInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditedDocumentInfo, 0x0000);
		}

		// struct FBPInterfaceDescription
		TEST_METHOD(ScriptStruct__Engine__BPInterfaceDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPInterfaceDescription, 0x0000);
		}

		// struct FBPVariableDescription
		TEST_METHOD(ScriptStruct__Engine__BPVariableDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPVariableDescription, 0x0000);
		}

		// struct FBPVariableMetaDataEntry
		TEST_METHOD(ScriptStruct__Engine__BPVariableMetaDataEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPVariableMetaDataEntry, 0x0000);
		}

		// struct FEdGraphPinType
		TEST_METHOD(ScriptStruct__Engine__EdGraphPinType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphPinType, 0x0000);
		}

		// struct FEdGraphTerminalType
		TEST_METHOD(ScriptStruct__Engine__EdGraphTerminalType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphTerminalType, 0x0000);
		}

		// struct FBlueprintMacroCosmeticInfo
		TEST_METHOD(ScriptStruct__Engine__BlueprintMacroCosmeticInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintMacroCosmeticInfo, 0x0000);
		}

		// struct FCompilerNativizationOptions
		TEST_METHOD(ScriptStruct__Engine__CompilerNativizationOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompilerNativizationOptions, 0x0000);
		}

		// struct FBlueprintCookedComponentInstancingData
		TEST_METHOD(ScriptStruct__Engine__BlueprintCookedComponentInstancingData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintCookedComponentInstancingData, 0x0000);
		}

		// struct FBlueprintComponentChangedPropertyInfo
		TEST_METHOD(ScriptStruct__Engine__BlueprintComponentChangedPropertyInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintComponentChangedPropertyInfo, 0x0000);
		}

		// struct FEventGraphFastCallPair
		TEST_METHOD(ScriptStruct__Engine__EventGraphFastCallPair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventGraphFastCallPair, 0x0000);
		}

		// struct FBlueprintDebugData
		TEST_METHOD(ScriptStruct__Engine__BlueprintDebugData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintDebugData, 0x0000);
		}

		// struct FPointerToUberGraphFrame
		TEST_METHOD(ScriptStruct__Engine__PointerToUberGraphFrame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPointerToUberGraphFrame, 0x0000);
		}

		// struct FDebuggingInfoForSingleFunction
		TEST_METHOD(ScriptStruct__Engine__DebuggingInfoForSingleFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebuggingInfoForSingleFunction, 0x0000);
		}

		// struct FNodeToCodeAssociation
		TEST_METHOD(ScriptStruct__Engine__NodeToCodeAssociation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeToCodeAssociation, 0x0000);
		}

		// struct FBodyInstance
		TEST_METHOD(ScriptStruct__Engine__BodyInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBodyInstance, 0x0000);
		}

		// struct FWalkableSlopeOverride
		TEST_METHOD(ScriptStruct__Engine__WalkableSlopeOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWalkableSlopeOverride, 0x0000);
		}

		// struct FCollisionResponse
		TEST_METHOD(ScriptStruct__Engine__CollisionResponse)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionResponse, 0x0000);
		}

		// struct FResponseChannel
		TEST_METHOD(ScriptStruct__Engine__ResponseChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FResponseChannel, 0x0000);
		}

		// struct FCollisionResponseContainer
		TEST_METHOD(ScriptStruct__Engine__CollisionResponseContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionResponseContainer, 0x0000);
		}

		// struct FAnimCurveType
		TEST_METHOD(ScriptStruct__Engine__AnimCurveType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimCurveType, 0x0000);
		}

		// struct FBookmarkBaseJumpToSettings
		TEST_METHOD(ScriptStruct__Engine__BookmarkBaseJumpToSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBookmarkBaseJumpToSettings, 0x0000);
		}

		// struct FBookmarkJumpToSettings : public FBookmarkBaseJumpToSettings
		TEST_METHOD(ScriptStruct__Engine__BookmarkJumpToSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBookmarkJumpToSettings, 0x0000);
		}

		// struct FBookmark2DJumpToSettings
		TEST_METHOD(ScriptStruct__Engine__Bookmark2DJumpToSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBookmark2DJumpToSettings, 0x0000);
		}

		// struct FGeomSelection
		TEST_METHOD(ScriptStruct__Engine__GeomSelection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeomSelection, 0x0000);
		}

		// struct FBuilderPoly
		TEST_METHOD(ScriptStruct__Engine__BuilderPoly)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuilderPoly, 0x0000);
		}

		// struct FCachedAnimTransitionData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimTransitionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimTransitionData, 0x0000);
		}

		// struct FCachedAnimRelevancyData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimRelevancyData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimRelevancyData, 0x0000);
		}

		// struct FCachedAnimAssetPlayerData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimAssetPlayerData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimAssetPlayerData, 0x0000);
		}

		// struct FCachedAnimStateArray
		TEST_METHOD(ScriptStruct__Engine__CachedAnimStateArray)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimStateArray, 0x0000);
		}

		// struct FCachedAnimStateData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimStateData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimStateData, 0x0000);
		}

		// struct FPooledCameraShakes
		TEST_METHOD(ScriptStruct__Engine__PooledCameraShakes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPooledCameraShakes, 0x0000);
		}

		// struct FVOscillator
		TEST_METHOD(ScriptStruct__Engine__VOscillator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVOscillator, 0x0000);
		}

		// struct FFOscillator
		TEST_METHOD(ScriptStruct__Engine__FOscillator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFOscillator, 0x0000);
		}

		// struct FROscillator
		TEST_METHOD(ScriptStruct__Engine__ROscillator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FROscillator, 0x0000);
		}

		// struct FDummySpacerCameraTypes
		TEST_METHOD(ScriptStruct__Engine__DummySpacerCameraTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDummySpacerCameraTypes, 0x0000);
		}

		// struct FMinimalViewInfo
		TEST_METHOD(ScriptStruct__Engine__MinimalViewInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMinimalViewInfo, 0x0000);
		}

		// struct FPostProcessSettings
		TEST_METHOD(ScriptStruct__Engine__PostProcessSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPostProcessSettings, 0x0000);
		}

		// struct FWeightedBlendables
		TEST_METHOD(ScriptStruct__Engine__WeightedBlendables)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeightedBlendables, 0x0000);
		}

		// struct FWeightedBlendable
		TEST_METHOD(ScriptStruct__Engine__WeightedBlendable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeightedBlendable, 0x0000);
		}

		// struct FCanvasIcon
		TEST_METHOD(ScriptStruct__Engine__CanvasIcon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCanvasIcon, 0x0000);
		}

		// struct FWrappedStringElement
		TEST_METHOD(ScriptStruct__Engine__WrappedStringElement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWrappedStringElement, 0x0000);
		}

		// struct FTextSizingParameters
		TEST_METHOD(ScriptStruct__Engine__TextSizingParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextSizingParameters, 0x0000);
		}

		// struct FBasedMovementInfo
		TEST_METHOD(ScriptStruct__Engine__BasedMovementInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBasedMovementInfo, 0x0000);
		}

		// struct FSimulatedRootMotionReplicatedMove
		TEST_METHOD(ScriptStruct__Engine__SimulatedRootMotionReplicatedMove)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimulatedRootMotionReplicatedMove, 0x0000);
		}

		// struct FRepRootMotionMontage
		TEST_METHOD(ScriptStruct__Engine__RepRootMotionMontage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRepRootMotionMontage, 0x0000);
		}

		// struct FVector_NetQuantize10 : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantize10)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantize10, 0x0000);
		}

		// struct FRootMotionSourceGroup
		TEST_METHOD(ScriptStruct__Engine__RootMotionSourceGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSourceGroup, 0x0000);
		}

		// struct FRootMotionSourceSettings
		TEST_METHOD(ScriptStruct__Engine__RootMotionSourceSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSourceSettings, 0x0000);
		}

		// struct FCharacterMovementComponentPostPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__CharacterMovementComponentPostPhysicsTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCharacterMovementComponentPostPhysicsTickFunction, 0x0000);
		}

		// struct FFindFloorResult
		TEST_METHOD(ScriptStruct__Engine__FindFloorResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFindFloorResult, 0x0000);
		}

		// struct FChildActorComponentInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__ChildActorComponentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChildActorComponentInstanceData, 0x0000);
		}

		// struct FChildActorAttachedActorInfo
		TEST_METHOD(ScriptStruct__Engine__ChildActorAttachedActorInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChildActorAttachedActorInfo, 0x0000);
		}

		// struct FCustomProfile
		TEST_METHOD(ScriptStruct__Engine__CustomProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomProfile, 0x0000);
		}

		// struct FCustomChannelSetup
		TEST_METHOD(ScriptStruct__Engine__CustomChannelSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomChannelSetup, 0x0000);
		}

		// struct FCollisionResponseTemplate
		TEST_METHOD(ScriptStruct__Engine__CollisionResponseTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionResponseTemplate, 0x0000);
		}

		// struct FBlueprintComponentDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintComponentDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintComponentDelegateBinding, 0x0000);
		}

		// struct FMeshUVChannelInfo
		TEST_METHOD(ScriptStruct__Engine__MeshUVChannelInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshUVChannelInfo, 0x0000);
		}

		// struct FAutoCompleteNode
		TEST_METHOD(ScriptStruct__Engine__AutoCompleteNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutoCompleteNode, 0x0000);
		}

		// struct FAngularDriveConstraint
		TEST_METHOD(ScriptStruct__Engine__AngularDriveConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAngularDriveConstraint, 0x0000);
		}

		// struct FConstraintDrive
		TEST_METHOD(ScriptStruct__Engine__ConstraintDrive)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDrive, 0x0000);
		}

		// struct FLinearDriveConstraint
		TEST_METHOD(ScriptStruct__Engine__LinearDriveConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLinearDriveConstraint, 0x0000);
		}

		// struct FConstraintInstance
		TEST_METHOD(ScriptStruct__Engine__ConstraintInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintInstance, 0x0000);
		}

		// struct FConstraintProfileProperties
		TEST_METHOD(ScriptStruct__Engine__ConstraintProfileProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintProfileProperties, 0x0000);
		}

		// struct FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__ConstraintBaseParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintBaseParams, 0x0000);
		}

		// struct FTwistConstraint : public FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__TwistConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTwistConstraint, 0x0000);
		}

		// struct FConeConstraint : public FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__ConeConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConeConstraint, 0x0000);
		}

		// struct FLinearConstraint : public FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__LinearConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLinearConstraint, 0x0000);
		}

		// struct FCullDistanceSizePair
		TEST_METHOD(ScriptStruct__Engine__CullDistanceSizePair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCullDistanceSizePair, 0x0000);
		}

		// struct FRuntimeCurveLinearColor
		TEST_METHOD(ScriptStruct__Engine__RuntimeCurveLinearColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRuntimeCurveLinearColor, 0x0000);
		}

		// struct FNamedCurveValue
		TEST_METHOD(ScriptStruct__Engine__NamedCurveValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedCurveValue, 0x0000);
		}

		// struct FCurveTableRowHandle
		TEST_METHOD(ScriptStruct__Engine__CurveTableRowHandle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveTableRowHandle, 0x0000);
		}

		// struct FDataTableCategoryHandle
		TEST_METHOD(ScriptStruct__Engine__DataTableCategoryHandle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDataTableCategoryHandle, 0x0000);
		}

		// struct FDataTableRowHandle
		TEST_METHOD(ScriptStruct__Engine__DataTableRowHandle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDataTableRowHandle, 0x0000);
		}

		// struct FDebugDisplayProperty
		TEST_METHOD(ScriptStruct__Engine__DebugDisplayProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebugDisplayProperty, 0x0000);
		}

		// struct FDebugTextInfo
		TEST_METHOD(ScriptStruct__Engine__DebugTextInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebugTextInfo, 0x0000);
		}

		// struct FRollbackNetStartupActorInfo
		TEST_METHOD(ScriptStruct__Engine__RollbackNetStartupActorInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRollbackNetStartupActorInfo, 0x0000);
		}

		// struct FLevelNameAndTime
		TEST_METHOD(ScriptStruct__Engine__LevelNameAndTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelNameAndTime, 0x0000);
		}

		// struct FDialogueWaveParameter
		TEST_METHOD(ScriptStruct__Engine__DialogueWaveParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogueWaveParameter, 0x0000);
		}

		// struct FDialogueContext
		TEST_METHOD(ScriptStruct__Engine__DialogueContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogueContext, 0x0000);
		}

		// struct FDialogueContextMapping
		TEST_METHOD(ScriptStruct__Engine__DialogueContextMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogueContextMapping, 0x0000);
		}

		// struct FRawDistributionFloat : public FRawDistribution
		TEST_METHOD(ScriptStruct__Engine__RawDistributionFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawDistributionFloat, 0x0000);
		}

		// struct FRawDistributionVector : public FRawDistribution
		TEST_METHOD(ScriptStruct__Engine__RawDistributionVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawDistributionVector, 0x0000);
		}

		// struct FGraphReference
		TEST_METHOD(ScriptStruct__Engine__GraphReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGraphReference, 0x0000);
		}

		// struct FEdGraphPinReference
		TEST_METHOD(ScriptStruct__Engine__EdGraphPinReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphPinReference, 0x0000);
		}

		// struct FEdGraphSchemaAction
		TEST_METHOD(ScriptStruct__Engine__EdGraphSchemaAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphSchemaAction, 0x0000);
		}

		// struct FEdGraphSchemaAction_NewNode : public FEdGraphSchemaAction
		TEST_METHOD(ScriptStruct__Engine__EdGraphSchemaAction_NewNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphSchemaAction_NewNode, 0x0000);
		}

		// struct FPluginRedirect
		TEST_METHOD(ScriptStruct__Engine__PluginRedirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPluginRedirect, 0x0000);
		}

		// struct FStructRedirect
		TEST_METHOD(ScriptStruct__Engine__StructRedirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructRedirect, 0x0000);
		}

		// struct FClassRedirect
		TEST_METHOD(ScriptStruct__Engine__ClassRedirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClassRedirect, 0x0000);
		}

		// struct FGameNameRedirect
		TEST_METHOD(ScriptStruct__Engine__GameNameRedirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameNameRedirect, 0x0000);
		}

		// struct FScreenMessageString
		TEST_METHOD(ScriptStruct__Engine__ScreenMessageString)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScreenMessageString, 0x0000);
		}

		// struct FDropNoteInfo
		TEST_METHOD(ScriptStruct__Engine__DropNoteInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDropNoteInfo, 0x0000);
		}

		// struct FStatColorMapping
		TEST_METHOD(ScriptStruct__Engine__StatColorMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatColorMapping, 0x0000);
		}

		// struct FStatColorMapEntry
		TEST_METHOD(ScriptStruct__Engine__StatColorMapEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatColorMapEntry, 0x0000);
		}

		// struct FWorldContext
		TEST_METHOD(ScriptStruct__Engine__WorldContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldContext, 0x0000);
		}

		// struct FNamedNetDriver
		TEST_METHOD(ScriptStruct__Engine__NamedNetDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedNetDriver, 0x0000);
		}

		// struct FLevelStreamingStatus
		TEST_METHOD(ScriptStruct__Engine__LevelStreamingStatus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelStreamingStatus, 0x0000);
		}

		// struct FFullyLoadedPackagesInfo
		TEST_METHOD(ScriptStruct__Engine__FullyLoadedPackagesInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFullyLoadedPackagesInfo, 0x0000);
		}

		// struct FURL
		TEST_METHOD(ScriptStruct__Engine__URL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FURL, 0x0000);
		}

		// struct FNetDriverDefinition
		TEST_METHOD(ScriptStruct__Engine__NetDriverDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNetDriverDefinition, 0x0000);
		}

		// struct FExposureSettings
		TEST_METHOD(ScriptStruct__Engine__ExposureSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExposureSettings, 0x0000);
		}

		// struct FPrimitiveComponentPostPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__PrimitiveComponentPostPhysicsTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimitiveComponentPostPhysicsTickFunction, 0x0000);
		}

		// struct FTickPrerequisite
		TEST_METHOD(ScriptStruct__Engine__TickPrerequisite)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTickPrerequisite, 0x0000);
		}

		// struct FCanvasUVTri
		TEST_METHOD(ScriptStruct__Engine__CanvasUVTri)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCanvasUVTri, 0x0000);
		}

		// struct FFontRenderInfo
		TEST_METHOD(ScriptStruct__Engine__FontRenderInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontRenderInfo, 0x0000);
		}

		// struct FDepthFieldGlowInfo
		TEST_METHOD(ScriptStruct__Engine__DepthFieldGlowInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDepthFieldGlowInfo, 0x0000);
		}

		// struct FRedirector
		TEST_METHOD(ScriptStruct__Engine__Redirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRedirector, 0x0000);
		}

		// struct FCollectionReference
		TEST_METHOD(ScriptStruct__Engine__CollectionReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionReference, 0x0000);
		}

		// struct FComponentReference
		TEST_METHOD(ScriptStruct__Engine__ComponentReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentReference, 0x0000);
		}

		// struct FConstrainComponentPropName
		TEST_METHOD(ScriptStruct__Engine__ConstrainComponentPropName)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstrainComponentPropName, 0x0000);
		}

		// struct FRadialDamageEvent : public FDamageEvent
		TEST_METHOD(ScriptStruct__Engine__RadialDamageEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRadialDamageEvent, 0x0000);
		}

		// struct FRadialDamageParams
		TEST_METHOD(ScriptStruct__Engine__RadialDamageParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRadialDamageParams, 0x0000);
		}

		// struct FPointDamageEvent : public FDamageEvent
		TEST_METHOD(ScriptStruct__Engine__PointDamageEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPointDamageEvent, 0x0000);
		}

		// struct FMeshBuildSettings
		TEST_METHOD(ScriptStruct__Engine__MeshBuildSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshBuildSettings, 0x0000);
		}

		// struct FPOV
		TEST_METHOD(ScriptStruct__Engine__POV)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPOV, 0x0000);
		}

		// struct FAnimUpdateRateParameters
		TEST_METHOD(ScriptStruct__Engine__AnimUpdateRateParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimUpdateRateParameters, 0x0000);
		}

		// struct FAnimSlotDesc
		TEST_METHOD(ScriptStruct__Engine__AnimSlotDesc)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSlotDesc, 0x0000);
		}

		// struct FAnimSlotInfo
		TEST_METHOD(ScriptStruct__Engine__AnimSlotInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSlotInfo, 0x0000);
		}

		// struct FMTDResult
		TEST_METHOD(ScriptStruct__Engine__MTDResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMTDResult, 0x0000);
		}

		// struct FOverlapResult
		TEST_METHOD(ScriptStruct__Engine__OverlapResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOverlapResult, 0x0000);
		}

		// struct FPrimitiveMaterialRef
		TEST_METHOD(ScriptStruct__Engine__PrimitiveMaterialRef)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimitiveMaterialRef, 0x0000);
		}

		// struct FSwarmDebugOptions
		TEST_METHOD(ScriptStruct__Engine__SwarmDebugOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSwarmDebugOptions, 0x0000);
		}

		// struct FLightmassDebugOptions
		TEST_METHOD(ScriptStruct__Engine__LightmassDebugOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassDebugOptions, 0x0000);
		}

		// struct FLightmassPrimitiveSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassPrimitiveSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassPrimitiveSettings, 0x0000);
		}

		// struct FLightmassLightSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassLightSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassLightSettings, 0x0000);
		}

		// struct FLightmassDirectionalLightSettings : public FLightmassLightSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassDirectionalLightSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassDirectionalLightSettings, 0x0000);
		}

		// struct FLightmassPointLightSettings : public FLightmassLightSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassPointLightSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassPointLightSettings, 0x0000);
		}

		// struct FBasedPosition
		TEST_METHOD(ScriptStruct__Engine__BasedPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBasedPosition, 0x0000);
		}

		// struct FFractureEffect
		TEST_METHOD(ScriptStruct__Engine__FractureEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFractureEffect, 0x0000);
		}

		// struct FCollisionImpactData
		TEST_METHOD(ScriptStruct__Engine__CollisionImpactData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionImpactData, 0x0000);
		}

		// struct FRigidBodyContactInfo
		TEST_METHOD(ScriptStruct__Engine__RigidBodyContactInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigidBodyContactInfo, 0x0000);
		}

		// struct FRigidBodyErrorCorrection
		TEST_METHOD(ScriptStruct__Engine__RigidBodyErrorCorrection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigidBodyErrorCorrection, 0x0000);
		}

		// struct FRigidBodyState
		TEST_METHOD(ScriptStruct__Engine__RigidBodyState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigidBodyState, 0x0000);
		}

		// struct FExponentialHeightFogData
		TEST_METHOD(ScriptStruct__Engine__ExponentialHeightFogData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExponentialHeightFogData, 0x0000);
		}

		// struct FFontCharacter
		TEST_METHOD(ScriptStruct__Engine__FontCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontCharacter, 0x0000);
		}

		// struct FFontImportOptionsData
		TEST_METHOD(ScriptStruct__Engine__FontImportOptionsData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontImportOptionsData, 0x0000);
		}

		// struct FForceFeedbackAttenuationSettings : public FBaseAttenuationSettings
		TEST_METHOD(ScriptStruct__Engine__ForceFeedbackAttenuationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForceFeedbackAttenuationSettings, 0x0000);
		}

		// struct FActiveForceFeedbackEffect
		TEST_METHOD(ScriptStruct__Engine__ActiveForceFeedbackEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActiveForceFeedbackEffect, 0x0000);
		}

		// struct FForceFeedbackParameters
		TEST_METHOD(ScriptStruct__Engine__ForceFeedbackParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForceFeedbackParameters, 0x0000);
		}

		// struct FForceFeedbackChannelDetails
		TEST_METHOD(ScriptStruct__Engine__ForceFeedbackChannelDetails)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForceFeedbackChannelDetails, 0x0000);
		}

		// struct FPredictProjectilePathResult
		TEST_METHOD(ScriptStruct__Engine__PredictProjectilePathResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPredictProjectilePathResult, 0x0000);
		}

		// struct FPredictProjectilePathPointData
		TEST_METHOD(ScriptStruct__Engine__PredictProjectilePathPointData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPredictProjectilePathPointData, 0x0000);
		}

		// struct FPredictProjectilePathParams
		TEST_METHOD(ScriptStruct__Engine__PredictProjectilePathParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPredictProjectilePathParams, 0x0000);
		}

		// struct FActiveHapticFeedbackEffect
		TEST_METHOD(ScriptStruct__Engine__ActiveHapticFeedbackEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActiveHapticFeedbackEffect, 0x0000);
		}

		// struct FHapticFeedbackDetails_Curve
		TEST_METHOD(ScriptStruct__Engine__HapticFeedbackDetails_Curve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHapticFeedbackDetails_Curve, 0x0000);
		}

		// struct FClusterNode
		TEST_METHOD(ScriptStruct__Engine__ClusterNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClusterNode, 0x0000);
		}

		// struct FClusterNode_DEPRECATED
		TEST_METHOD(ScriptStruct__Engine__ClusterNode_DEPRECATED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClusterNode_DEPRECATED, 0x0000);
		}

		// struct FHLODProxyMesh
		TEST_METHOD(ScriptStruct__Engine__HLODProxyMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHLODProxyMesh, 0x0000);
		}

		// struct FSoundModulation
		TEST_METHOD(ScriptStruct__Engine__SoundModulation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundModulation, 0x0000);
		}

		// struct FImportanceTexture
		TEST_METHOD(ScriptStruct__Engine__ImportanceTexture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImportanceTexture, 0x0000);
		}

		// struct FComponentOverrideRecord
		TEST_METHOD(ScriptStruct__Engine__ComponentOverrideRecord)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentOverrideRecord, 0x0000);
		}

		// struct FComponentKey
		TEST_METHOD(ScriptStruct__Engine__ComponentKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentKey, 0x0000);
		}

		// struct FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputDelegateBinding, 0x0000);
		}

		// struct FBlueprintInputActionDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputActionDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputActionDelegateBinding, 0x0000);
		}

		// struct FBlueprintInputAxisDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputAxisDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputAxisDelegateBinding, 0x0000);
		}

		// struct FBlueprintInputAxisKeyDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputAxisKeyDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputAxisKeyDelegateBinding, 0x0000);
		}

		// struct FCachedKeyToActionInfo
		TEST_METHOD(ScriptStruct__Engine__CachedKeyToActionInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedKeyToActionInfo, 0x0000);
		}

		// struct FBlueprintInputKeyDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputKeyDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputKeyDelegateBinding, 0x0000);
		}

		// struct FBlueprintInputTouchDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputTouchDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputTouchDelegateBinding, 0x0000);
		}

		// struct FInstancedStaticMeshComponentInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__InstancedStaticMeshComponentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInstancedStaticMeshComponentInstanceData, 0x0000);
		}

		// struct FInstancedStaticMeshInstanceData
		TEST_METHOD(ScriptStruct__Engine__InstancedStaticMeshInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInstancedStaticMeshInstanceData, 0x0000);
		}

		// struct FInstancedStaticMeshLightMapInstanceData
		TEST_METHOD(ScriptStruct__Engine__InstancedStaticMeshLightMapInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInstancedStaticMeshLightMapInstanceData, 0x0000);
		}

		// struct FInstancedStaticMeshMappingInfo
		TEST_METHOD(ScriptStruct__Engine__InstancedStaticMeshMappingInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInstancedStaticMeshMappingInfo, 0x0000);
		}

		// struct FIntegralCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__IntegralCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntegralCurve, 0x0000);
		}

		// struct FIntegralKey
		TEST_METHOD(ScriptStruct__Engine__IntegralKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntegralKey, 0x0000);
		}

		// struct FCurveEdTab
		TEST_METHOD(ScriptStruct__Engine__CurveEdTab)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveEdTab, 0x0000);
		}

		// struct FCurveEdEntry
		TEST_METHOD(ScriptStruct__Engine__CurveEdEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveEdEntry, 0x0000);
		}

		// struct FInterpEdSelKey
		TEST_METHOD(ScriptStruct__Engine__InterpEdSelKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpEdSelKey, 0x0000);
		}

		// struct FCameraPreviewInfo
		TEST_METHOD(ScriptStruct__Engine__CameraPreviewInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraPreviewInfo, 0x0000);
		}

		// struct FSubTrackGroup
		TEST_METHOD(ScriptStruct__Engine__SubTrackGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubTrackGroup, 0x0000);
		}

		// struct FSupportedSubTrackInfo
		TEST_METHOD(ScriptStruct__Engine__SupportedSubTrackInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportedSubTrackInfo, 0x0000);
		}

		// struct FAnimControlTrackKey
		TEST_METHOD(ScriptStruct__Engine__AnimControlTrackKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimControlTrackKey, 0x0000);
		}

		// struct FBoolTrackKey
		TEST_METHOD(ScriptStruct__Engine__BoolTrackKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoolTrackKey, 0x0000);
		}

		// struct FDirectorTrackCut
		TEST_METHOD(ScriptStruct__Engine__DirectorTrackCut)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectorTrackCut, 0x0000);
		}

		// struct FEventTrackKey
		TEST_METHOD(ScriptStruct__Engine__EventTrackKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventTrackKey, 0x0000);
		}

		// struct FInterpLookupTrack
		TEST_METHOD(ScriptStruct__Engine__InterpLookupTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpLookupTrack, 0x0000);
		}

		// struct FInterpLookupPoint
		TEST_METHOD(ScriptStruct__Engine__InterpLookupPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpLookupPoint, 0x0000);
		}

		// struct FParticleReplayTrackKey
		TEST_METHOD(ScriptStruct__Engine__ParticleReplayTrackKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleReplayTrackKey, 0x0000);
		}

		// struct FSoundTrackKey
		TEST_METHOD(ScriptStruct__Engine__SoundTrackKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundTrackKey, 0x0000);
		}

		// struct FToggleTrackKey
		TEST_METHOD(ScriptStruct__Engine__ToggleTrackKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FToggleTrackKey, 0x0000);
		}

		// struct FVisibilityTrackKey
		TEST_METHOD(ScriptStruct__Engine__VisibilityTrackKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisibilityTrackKey, 0x0000);
		}

		// struct FVectorSpringState
		TEST_METHOD(ScriptStruct__Engine__VectorSpringState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorSpringState, 0x0000);
		}

		// struct FFloatSpringState
		TEST_METHOD(ScriptStruct__Engine__FloatSpringState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatSpringState, 0x0000);
		}

		// struct FDrawToRenderTargetContext
		TEST_METHOD(ScriptStruct__Engine__DrawToRenderTargetContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDrawToRenderTargetContext, 0x0000);
		}

		// struct FLatentActionManager
		TEST_METHOD(ScriptStruct__Engine__LatentActionManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLatentActionManager, 0x0000);
		}

		// struct FLayerActorStats
		TEST_METHOD(ScriptStruct__Engine__LayerActorStats)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLayerActorStats, 0x0000);
		}

		// struct FReplicatedStaticActorDestructionInfo
		TEST_METHOD(ScriptStruct__Engine__ReplicatedStaticActorDestructionInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedStaticActorDestructionInfo, 0x0000);
		}

		// struct FLevelSimplificationDetails
		TEST_METHOD(ScriptStruct__Engine__LevelSimplificationDetails)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSimplificationDetails, 0x0000);
		}

		// struct FMaterialProxySettings
		TEST_METHOD(ScriptStruct__Engine__MaterialProxySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialProxySettings, 0x0000);
		}

		// struct FStreamableTextureInstance
		TEST_METHOD(ScriptStruct__Engine__StreamableTextureInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamableTextureInstance, 0x0000);
		}

		// struct FDynamicTextureInstance : public FStreamableTextureInstance
		TEST_METHOD(ScriptStruct__Engine__DynamicTextureInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDynamicTextureInstance, 0x0000);
		}

		// struct FPrecomputedLightInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__PrecomputedLightInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrecomputedLightInstanceData, 0x0000);
		}

		// struct FBatchedPoint
		TEST_METHOD(ScriptStruct__Engine__BatchedPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBatchedPoint, 0x0000);
		}

		// struct FBatchedLine
		TEST_METHOD(ScriptStruct__Engine__BatchedLine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBatchedLine, 0x0000);
		}

		// struct FClientReceiveData
		TEST_METHOD(ScriptStruct__Engine__ClientReceiveData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClientReceiveData, 0x0000);
		}

		// struct FParameterGroupData
		TEST_METHOD(ScriptStruct__Engine__ParameterGroupData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParameterGroupData, 0x0000);
		}

		// struct FMaterialParameterCollectionInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialParameterCollectionInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialParameterCollectionInfo, 0x0000);
		}

		// struct FMaterialFunctionInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialFunctionInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialFunctionInfo, 0x0000);
		}

		// struct FMaterialSpriteElement
		TEST_METHOD(ScriptStruct__Engine__MaterialSpriteElement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialSpriteElement, 0x0000);
		}

		// struct FCustomInput
		TEST_METHOD(ScriptStruct__Engine__CustomInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomInput, 0x0000);
		}

		// struct FFunctionExpressionOutput
		TEST_METHOD(ScriptStruct__Engine__FunctionExpressionOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFunctionExpressionOutput, 0x0000);
		}

		// struct FFunctionExpressionInput
		TEST_METHOD(ScriptStruct__Engine__FunctionExpressionInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFunctionExpressionInput, 0x0000);
		}

		// struct FFontParameterValue
		TEST_METHOD(ScriptStruct__Engine__FontParameterValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontParameterValue, 0x0000);
		}

		// struct FMaterialParameterInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialParameterInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialParameterInfo, 0x0000);
		}

		// struct FTextureParameterValue
		TEST_METHOD(ScriptStruct__Engine__TextureParameterValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextureParameterValue, 0x0000);
		}

		// struct FVectorParameterValue
		TEST_METHOD(ScriptStruct__Engine__VectorParameterValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorParameterValue, 0x0000);
		}

		// struct FScalarParameterValue
		TEST_METHOD(ScriptStruct__Engine__ScalarParameterValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarParameterValue, 0x0000);
		}

		// struct FScalarParameterAtlasInstanceData
		TEST_METHOD(ScriptStruct__Engine__ScalarParameterAtlasInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarParameterAtlasInstanceData, 0x0000);
		}

		// struct FMaterialInstanceBasePropertyOverrides
		TEST_METHOD(ScriptStruct__Engine__MaterialInstanceBasePropertyOverrides)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialInstanceBasePropertyOverrides, 0x0000);
		}

		// struct FMaterialTextureInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialTextureInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialTextureInfo, 0x0000);
		}

		// struct FLightmassMaterialInterfaceSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassMaterialInterfaceSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassMaterialInterfaceSettings, 0x0000);
		}

		// struct FMaterialLayersFunctions
		TEST_METHOD(ScriptStruct__Engine__MaterialLayersFunctions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialLayersFunctions, 0x0000);
		}

		// struct FCollectionParameterBase
		TEST_METHOD(ScriptStruct__Engine__CollectionParameterBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionParameterBase, 0x0000);
		}

		// struct FCollectionVectorParameter : public FCollectionParameterBase
		TEST_METHOD(ScriptStruct__Engine__CollectionVectorParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionVectorParameter, 0x0000);
		}

		// struct FCollectionScalarParameter : public FCollectionParameterBase
		TEST_METHOD(ScriptStruct__Engine__CollectionScalarParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionScalarParameter, 0x0000);
		}

		// struct FInterpGroupActorInfo
		TEST_METHOD(ScriptStruct__Engine__InterpGroupActorInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpGroupActorInfo, 0x0000);
		}

		// struct FCameraCutInfo
		TEST_METHOD(ScriptStruct__Engine__CameraCutInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraCutInfo, 0x0000);
		}

		// struct FMemberReference
		TEST_METHOD(ScriptStruct__Engine__MemberReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMemberReference, 0x0000);
		}

		// struct FMeshInstancingSettings
		TEST_METHOD(ScriptStruct__Engine__MeshInstancingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshInstancingSettings, 0x0000);
		}

		// struct FMeshMergingSettings
		TEST_METHOD(ScriptStruct__Engine__MeshMergingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshMergingSettings, 0x0000);
		}

		// struct FMeshProxySettings
		TEST_METHOD(ScriptStruct__Engine__MeshProxySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshProxySettings, 0x0000);
		}

		// struct FMeshReductionSettings
		TEST_METHOD(ScriptStruct__Engine__MeshReductionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshReductionSettings, 0x0000);
		}

		// struct FPurchaseInfo
		TEST_METHOD(ScriptStruct__Engine__PurchaseInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPurchaseInfo, 0x0000);
		}

		// struct FNameCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__NameCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNameCurve, 0x0000);
		}

		// struct FNameCurveKey
		TEST_METHOD(ScriptStruct__Engine__NameCurveKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNameCurveKey, 0x0000);
		}

		// struct FNavAvoidanceMask
		TEST_METHOD(ScriptStruct__Engine__NavAvoidanceMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAvoidanceMask, 0x0000);
		}

		// struct FMovementProperties
		TEST_METHOD(ScriptStruct__Engine__MovementProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovementProperties, 0x0000);
		}

		// struct FNavAgentProperties : public FMovementProperties
		TEST_METHOD(ScriptStruct__Engine__NavAgentProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAgentProperties, 0x0000);
		}

		// struct FNavDataConfig : public FNavAgentProperties
		TEST_METHOD(ScriptStruct__Engine__NavDataConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavDataConfig, 0x0000);
		}

		// struct FNavigationSegmentLink : public FNavigationLinkBase
		TEST_METHOD(ScriptStruct__Engine__NavigationSegmentLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationSegmentLink, 0x0000);
		}

		// struct FNavigationLink : public FNavigationLinkBase
		TEST_METHOD(ScriptStruct__Engine__NavigationLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationLink, 0x0000);
		}

		// struct FChannelDefinition
		TEST_METHOD(ScriptStruct__Engine__ChannelDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChannelDefinition, 0x0000);
		}

		// struct FPacketSimulationSettings
		TEST_METHOD(ScriptStruct__Engine__PacketSimulationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPacketSimulationSettings, 0x0000);
		}

		// struct FFastArraySerializer
		TEST_METHOD(ScriptStruct__Engine__FastArraySerializer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFastArraySerializer, 0x0000);
		}

		// struct FFastArraySerializerItem
		TEST_METHOD(ScriptStruct__Engine__FastArraySerializerItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFastArraySerializerItem, 0x0000);
		}

		// struct FNodeItem
		TEST_METHOD(ScriptStruct__Engine__NodeItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeItem, 0x0000);
		}

		// struct FParticleBurst
		TEST_METHOD(ScriptStruct__Engine__ParticleBurst)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleBurst, 0x0000);
		}

		// struct FParticleRandomSeedInfo
		TEST_METHOD(ScriptStruct__Engine__ParticleRandomSeedInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleRandomSeedInfo, 0x0000);
		}

		// struct FParticleCurvePair
		TEST_METHOD(ScriptStruct__Engine__ParticleCurvePair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleCurvePair, 0x0000);
		}

		// struct FBeamModifierOptions
		TEST_METHOD(ScriptStruct__Engine__BeamModifierOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBeamModifierOptions, 0x0000);
		}

		// struct FParticleEvent_GenerateInfo
		TEST_METHOD(ScriptStruct__Engine__ParticleEvent_GenerateInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleEvent_GenerateInfo, 0x0000);
		}

		// struct FLocationBoneSocketInfo
		TEST_METHOD(ScriptStruct__Engine__LocationBoneSocketInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLocationBoneSocketInfo, 0x0000);
		}

		// struct FOrbitOptions
		TEST_METHOD(ScriptStruct__Engine__OrbitOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOrbitOptions, 0x0000);
		}

		// struct FEmitterDynamicParameter
		TEST_METHOD(ScriptStruct__Engine__EmitterDynamicParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEmitterDynamicParameter, 0x0000);
		}

		// struct FBeamTargetData
		TEST_METHOD(ScriptStruct__Engine__BeamTargetData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBeamTargetData, 0x0000);
		}

		// struct FGPUSpriteResourceData
		TEST_METHOD(ScriptStruct__Engine__GPUSpriteResourceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGPUSpriteResourceData, 0x0000);
		}

		// struct FGPUSpriteEmitterInfo
		TEST_METHOD(ScriptStruct__Engine__GPUSpriteEmitterInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGPUSpriteEmitterInfo, 0x0000);
		}

		// struct FGPUSpriteLocalVectorFieldInfo
		TEST_METHOD(ScriptStruct__Engine__GPUSpriteLocalVectorFieldInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGPUSpriteLocalVectorFieldInfo, 0x0000);
		}

		// struct FNamedEmitterMaterial
		TEST_METHOD(ScriptStruct__Engine__NamedEmitterMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedEmitterMaterial, 0x0000);
		}

		// struct FLODSoloTrack
		TEST_METHOD(ScriptStruct__Engine__LODSoloTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLODSoloTrack, 0x0000);
		}

		// struct FParticleSystemLOD
		TEST_METHOD(ScriptStruct__Engine__ParticleSystemLOD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleSystemLOD, 0x0000);
		}

		// struct FParticleSysParam
		TEST_METHOD(ScriptStruct__Engine__ParticleSysParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleSysParam, 0x0000);
		}

		// struct FParticleSystemWorldManagerTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__ParticleSystemWorldManagerTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleSystemWorldManagerTickFunction, 0x0000);
		}

		// struct FParticleSystemReplayFrame
		TEST_METHOD(ScriptStruct__Engine__ParticleSystemReplayFrame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleSystemReplayFrame, 0x0000);
		}

		// struct FParticleEmitterReplayFrame
		TEST_METHOD(ScriptStruct__Engine__ParticleEmitterReplayFrame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleEmitterReplayFrame, 0x0000);
		}

		// struct FPhysicalAnimationData
		TEST_METHOD(ScriptStruct__Engine__PhysicalAnimationData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicalAnimationData, 0x0000);
		}

		// struct FTireFrictionScalePair
		TEST_METHOD(ScriptStruct__Engine__TireFrictionScalePair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTireFrictionScalePair, 0x0000);
		}

		// struct FPhysicalAnimationProfile
		TEST_METHOD(ScriptStruct__Engine__PhysicalAnimationProfile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicalAnimationProfile, 0x0000);
		}

		// struct FPhysicsConstraintProfileHandle
		TEST_METHOD(ScriptStruct__Engine__PhysicsConstraintProfileHandle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicsConstraintProfileHandle, 0x0000);
		}

		// struct FPhysicalSurfaceName
		TEST_METHOD(ScriptStruct__Engine__PhysicalSurfaceName)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicalSurfaceName, 0x0000);
		}

		// struct FDelegateArray
		TEST_METHOD(ScriptStruct__Engine__DelegateArray)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDelegateArray, 0x0000);
		}

		// struct FViewTargetTransitionParams
		TEST_METHOD(ScriptStruct__Engine__ViewTargetTransitionParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FViewTargetTransitionParams, 0x0000);
		}

		// struct FTViewTarget
		TEST_METHOD(ScriptStruct__Engine__TViewTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTViewTarget, 0x0000);
		}

		// struct FCameraCacheEntry
		TEST_METHOD(ScriptStruct__Engine__CameraCacheEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraCacheEntry, 0x0000);
		}

		// struct FUpdateLevelVisibilityLevelInfo
		TEST_METHOD(ScriptStruct__Engine__UpdateLevelVisibilityLevelInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUpdateLevelVisibilityLevelInfo, 0x0000);
		}

		// struct FUpdateLevelStreamingLevelStatus
		TEST_METHOD(ScriptStruct__Engine__UpdateLevelStreamingLevelStatus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUpdateLevelStreamingLevelStatus, 0x0000);
		}

		// struct FInputAxisConfigEntry
		TEST_METHOD(ScriptStruct__Engine__InputAxisConfigEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAxisConfigEntry, 0x0000);
		}

		// struct FInputAxisProperties
		TEST_METHOD(ScriptStruct__Engine__InputAxisProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAxisProperties, 0x0000);
		}

		// struct FKeyBind
		TEST_METHOD(ScriptStruct__Engine__KeyBind)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyBind, 0x0000);
		}

		// struct FPlayerMuteList
		TEST_METHOD(ScriptStruct__Engine__PlayerMuteList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlayerMuteList, 0x0000);
		}

		// struct FPoseDataContainer
		TEST_METHOD(ScriptStruct__Engine__PoseDataContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseDataContainer, 0x0000);
		}

		// struct FPoseData
		TEST_METHOD(ScriptStruct__Engine__PoseData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseData, 0x0000);
		}

		// struct FPreviewAssetAttachContainer
		TEST_METHOD(ScriptStruct__Engine__PreviewAssetAttachContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPreviewAssetAttachContainer, 0x0000);
		}

		// struct FPreviewAttachedObjectPair
		TEST_METHOD(ScriptStruct__Engine__PreviewAttachedObjectPair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPreviewAttachedObjectPair, 0x0000);
		}

		// struct FPreviewMeshCollectionEntry
		TEST_METHOD(ScriptStruct__Engine__PreviewMeshCollectionEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPreviewMeshCollectionEntry, 0x0000);
		}

		// struct FPrimitiveComponentInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__PrimitiveComponentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimitiveComponentInstanceData, 0x0000);
		}

		// struct FSpriteCategoryInfo
		TEST_METHOD(ScriptStruct__Engine__SpriteCategoryInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteCategoryInfo, 0x0000);
		}

		// struct FCompressedRichCurve
		TEST_METHOD(ScriptStruct__Engine__CompressedRichCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompressedRichCurve, 0x0000);
		}

		// struct FTransformBase
		TEST_METHOD(ScriptStruct__Engine__TransformBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformBase, 0x0000);
		}

		// struct FTransformBaseConstraint
		TEST_METHOD(ScriptStruct__Engine__TransformBaseConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformBaseConstraint, 0x0000);
		}

		// struct FRigTransformConstraint
		TEST_METHOD(ScriptStruct__Engine__RigTransformConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigTransformConstraint, 0x0000);
		}

		// struct FNode
		TEST_METHOD(ScriptStruct__Engine__Node)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNode, 0x0000);
		}

		// struct FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource, 0x0000);
		}

		// struct FRootMotionFinishVelocitySettings
		TEST_METHOD(ScriptStruct__Engine__RootMotionFinishVelocitySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionFinishVelocitySettings, 0x0000);
		}

		// struct FRootMotionSourceStatus
		TEST_METHOD(ScriptStruct__Engine__RootMotionSourceStatus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSourceStatus, 0x0000);
		}

		// struct FRootMotionSource_JumpForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_JumpForce)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_JumpForce, 0x0000);
		}

		// struct FRootMotionSource_MoveToDynamicForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_MoveToDynamicForce)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_MoveToDynamicForce, 0x0000);
		}

		// struct FRootMotionSource_MoveToForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_MoveToForce)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_MoveToForce, 0x0000);
		}

		// struct FRootMotionSource_RadialForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_RadialForce)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_RadialForce, 0x0000);
		}

		// struct FRootMotionSource_ConstantForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_ConstantForce)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_ConstantForce, 0x0000);
		}

		// struct FCameraExposureSettings
		TEST_METHOD(ScriptStruct__Engine__CameraExposureSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraExposureSettings, 0x0000);
		}

		// struct FLensSettings
		TEST_METHOD(ScriptStruct__Engine__LensSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLensSettings, 0x0000);
		}

		// struct FLensImperfectionSettings
		TEST_METHOD(ScriptStruct__Engine__LensImperfectionSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLensImperfectionSettings, 0x0000);
		}

		// struct FLensBloomSettings
		TEST_METHOD(ScriptStruct__Engine__LensBloomSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLensBloomSettings, 0x0000);
		}

		// struct FConvolutionBloomSettings
		TEST_METHOD(ScriptStruct__Engine__ConvolutionBloomSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConvolutionBloomSettings, 0x0000);
		}

		// struct FGaussianSumBloomSettings
		TEST_METHOD(ScriptStruct__Engine__GaussianSumBloomSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGaussianSumBloomSettings, 0x0000);
		}

		// struct FFilmStockSettings
		TEST_METHOD(ScriptStruct__Engine__FilmStockSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFilmStockSettings, 0x0000);
		}

		// struct FColorGradingSettings
		TEST_METHOD(ScriptStruct__Engine__ColorGradingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorGradingSettings, 0x0000);
		}

		// struct FColorGradePerRangeSettings
		TEST_METHOD(ScriptStruct__Engine__ColorGradePerRangeSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorGradePerRangeSettings, 0x0000);
		}

		// struct FEngineShowFlagsSetting
		TEST_METHOD(ScriptStruct__Engine__EngineShowFlagsSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineShowFlagsSetting, 0x0000);
		}

		// struct FSimpleCurve : public FRealCurve
		TEST_METHOD(ScriptStruct__Engine__SimpleCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimpleCurve, 0x0000);
		}

		// struct FSimpleCurveKey
		TEST_METHOD(ScriptStruct__Engine__SimpleCurveKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimpleCurveKey, 0x0000);
		}

		// struct FSingleAnimationPlayData
		TEST_METHOD(ScriptStruct__Engine__SingleAnimationPlayData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSingleAnimationPlayData, 0x0000);
		}

		// struct FSkeletalMaterial
		TEST_METHOD(ScriptStruct__Engine__SkeletalMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMaterial, 0x0000);
		}

		// struct FClothingAssetData_Legacy
		TEST_METHOD(ScriptStruct__Engine__ClothingAssetData_Legacy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothingAssetData_Legacy, 0x0000);
		}

		// struct FClothPhysicsProperties_Legacy
		TEST_METHOD(ScriptStruct__Engine__ClothPhysicsProperties_Legacy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothPhysicsProperties_Legacy, 0x0000);
		}

		// struct FSkeletalMeshLODInfo
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshLODInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshLODInfo, 0x0000);
		}

		// struct FSkeletalMeshOptimizationSettings
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshOptimizationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshOptimizationSettings, 0x0000);
		}

		// struct FSkeletalMeshClothBuildParams
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshClothBuildParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshClothBuildParams, 0x0000);
		}

		// struct FBoneMirrorExport
		TEST_METHOD(ScriptStruct__Engine__BoneMirrorExport)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneMirrorExport, 0x0000);
		}

		// struct FBoneMirrorInfo
		TEST_METHOD(ScriptStruct__Engine__BoneMirrorInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneMirrorInfo, 0x0000);
		}

		// struct FSkeletalMeshComponentClothTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshComponentClothTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshComponentClothTickFunction, 0x0000);
		}

		// struct FSkeletalMeshComponentEndPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshComponentEndPhysicsTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshComponentEndPhysicsTickFunction, 0x0000);
		}

		// struct FSkeletalMeshLODGroupSettings
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshLODGroupSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshLODGroupSettings, 0x0000);
		}

		// struct FBoneFilter
		TEST_METHOD(ScriptStruct__Engine__BoneFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneFilter, 0x0000);
		}

		// struct FSkeletalMeshSamplingInfo
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingInfo, 0x0000);
		}

		// struct FSkeletalMeshSamplingBuiltData
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingBuiltData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingBuiltData, 0x0000);
		}

		// struct FSkeletalMeshSamplingRegionBuiltData
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegionBuiltData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegionBuiltData, 0x0000);
		}

		// struct FSkeletalMeshSamplingLODBuiltData
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingLODBuiltData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingLODBuiltData, 0x0000);
		}

		// struct FSkeletalMeshSamplingRegion
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegion, 0x0000);
		}

		// struct FSkeletalMeshSamplingRegionBoneFilter
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegionBoneFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegionBoneFilter, 0x0000);
		}

		// struct FSkeletalMeshSamplingRegionMaterialFilter
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegionMaterialFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegionMaterialFilter, 0x0000);
		}

		// struct FVirtualBone
		TEST_METHOD(ScriptStruct__Engine__VirtualBone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVirtualBone, 0x0000);
		}

		// struct FAnimSlotGroup
		TEST_METHOD(ScriptStruct__Engine__AnimSlotGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSlotGroup, 0x0000);
		}

		// struct FRigConfiguration
		TEST_METHOD(ScriptStruct__Engine__RigConfiguration)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigConfiguration, 0x0000);
		}

		// struct FNameMapping
		TEST_METHOD(ScriptStruct__Engine__NameMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNameMapping, 0x0000);
		}

		// struct FBoneReductionSetting
		TEST_METHOD(ScriptStruct__Engine__BoneReductionSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneReductionSetting, 0x0000);
		}

		// struct FReferencePose
		TEST_METHOD(ScriptStruct__Engine__ReferencePose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferencePose, 0x0000);
		}

		// struct FBoneNode
		TEST_METHOD(ScriptStruct__Engine__BoneNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneNode, 0x0000);
		}

		// struct FSkeletonToMeshLinkup
		TEST_METHOD(ScriptStruct__Engine__SkeletonToMeshLinkup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletonToMeshLinkup, 0x0000);
		}

		// struct FSkelMeshComponentLODInfo
		TEST_METHOD(ScriptStruct__Engine__SkelMeshComponentLODInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkelMeshComponentLODInfo, 0x0000);
		}

		// struct FSkelMeshSkinWeightInfo
		TEST_METHOD(ScriptStruct__Engine__SkelMeshSkinWeightInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkelMeshSkinWeightInfo, 0x0000);
		}

		// struct FPrecomputedSkyLightInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__PrecomputedSkyLightInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrecomputedSkyLightInstanceData, 0x0000);
		}

		// struct FSmartNameContainer
		TEST_METHOD(ScriptStruct__Engine__SmartNameContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSmartNameContainer, 0x0000);
		}

		// struct FSmartNameMapping
		TEST_METHOD(ScriptStruct__Engine__SmartNameMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSmartNameMapping, 0x0000);
		}

		// struct FCurveMetaData
		TEST_METHOD(ScriptStruct__Engine__CurveMetaData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveMetaData, 0x0000);
		}

		// struct FSoundAttenuationSettings : public FBaseAttenuationSettings
		TEST_METHOD(ScriptStruct__Engine__SoundAttenuationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundAttenuationSettings, 0x0000);
		}

		// struct FSoundAttenuationPluginSettings
		TEST_METHOD(ScriptStruct__Engine__SoundAttenuationPluginSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundAttenuationPluginSettings, 0x0000);
		}

		// struct FPassiveSoundMixModifier
		TEST_METHOD(ScriptStruct__Engine__PassiveSoundMixModifier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPassiveSoundMixModifier, 0x0000);
		}

		// struct FSoundClassProperties
		TEST_METHOD(ScriptStruct__Engine__SoundClassProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundClassProperties, 0x0000);
		}

		// struct FSoundClassEditorData
		TEST_METHOD(ScriptStruct__Engine__SoundClassEditorData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundClassEditorData, 0x0000);
		}

		// struct FSoundConcurrencySettings
		TEST_METHOD(ScriptStruct__Engine__SoundConcurrencySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundConcurrencySettings, 0x0000);
		}

		// struct FSoundNodeEditorData
		TEST_METHOD(ScriptStruct__Engine__SoundNodeEditorData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundNodeEditorData, 0x0000);
		}

		// struct FSourceEffectChainEntry
		TEST_METHOD(ScriptStruct__Engine__SourceEffectChainEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSourceEffectChainEntry, 0x0000);
		}

		// struct FSoundGroup
		TEST_METHOD(ScriptStruct__Engine__SoundGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundGroup, 0x0000);
		}

		// struct FSoundClassAdjuster
		TEST_METHOD(ScriptStruct__Engine__SoundClassAdjuster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundClassAdjuster, 0x0000);
		}

		// struct FAudioEQEffect
		TEST_METHOD(ScriptStruct__Engine__AudioEQEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAudioEQEffect, 0x0000);
		}

		// struct FDistanceDatum
		TEST_METHOD(ScriptStruct__Engine__DistanceDatum)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDistanceDatum, 0x0000);
		}

		// struct FModulatorContinuousParams
		TEST_METHOD(ScriptStruct__Engine__ModulatorContinuousParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FModulatorContinuousParams, 0x0000);
		}

		// struct FSoundSourceBusSendInfo
		TEST_METHOD(ScriptStruct__Engine__SoundSourceBusSendInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundSourceBusSendInfo, 0x0000);
		}

		// struct FSoundSubmixSendInfo
		TEST_METHOD(ScriptStruct__Engine__SoundSubmixSendInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundSubmixSendInfo, 0x0000);
		}

		// struct FSoundWaveEnvelopeTimeData
		TEST_METHOD(ScriptStruct__Engine__SoundWaveEnvelopeTimeData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundWaveEnvelopeTimeData, 0x0000);
		}

		// struct FSoundWaveSpectralTimeData
		TEST_METHOD(ScriptStruct__Engine__SoundWaveSpectralTimeData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundWaveSpectralTimeData, 0x0000);
		}

		// struct FSoundWaveSpectralDataEntry
		TEST_METHOD(ScriptStruct__Engine__SoundWaveSpectralDataEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundWaveSpectralDataEntry, 0x0000);
		}

		// struct FSoundWaveEnvelopeDataPerSound
		TEST_METHOD(ScriptStruct__Engine__SoundWaveEnvelopeDataPerSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundWaveEnvelopeDataPerSound, 0x0000);
		}

		// struct FSoundWaveSpectralDataPerSound
		TEST_METHOD(ScriptStruct__Engine__SoundWaveSpectralDataPerSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundWaveSpectralDataPerSound, 0x0000);
		}

		// struct FSoundWaveSpectralData
		TEST_METHOD(ScriptStruct__Engine__SoundWaveSpectralData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundWaveSpectralData, 0x0000);
		}

		// struct FStreamedAudioPlatformData
		TEST_METHOD(ScriptStruct__Engine__StreamedAudioPlatformData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamedAudioPlatformData, 0x0000);
		}

		// struct FSplineInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__SplineInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineInstanceData, 0x0000);
		}

		// struct FSplineCurves
		TEST_METHOD(ScriptStruct__Engine__SplineCurves)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineCurves, 0x0000);
		}

		// struct FSplinePoint
		TEST_METHOD(ScriptStruct__Engine__SplinePoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplinePoint, 0x0000);
		}

		// struct FSplineMeshInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__SplineMeshInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineMeshInstanceData, 0x0000);
		}

		// struct FSplineMeshParams
		TEST_METHOD(ScriptStruct__Engine__SplineMeshParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineMeshParams, 0x0000);
		}

		// struct FMaterialRemapIndex
		TEST_METHOD(ScriptStruct__Engine__MaterialRemapIndex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialRemapIndex, 0x0000);
		}

		// struct FStaticMaterial
		TEST_METHOD(ScriptStruct__Engine__StaticMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMaterial, 0x0000);
		}

		// struct FAssetEditorOrbitCameraPosition
		TEST_METHOD(ScriptStruct__Engine__AssetEditorOrbitCameraPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetEditorOrbitCameraPosition, 0x0000);
		}

		// struct FMeshSectionInfoMap
		TEST_METHOD(ScriptStruct__Engine__MeshSectionInfoMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshSectionInfoMap, 0x0000);
		}

		// struct FMeshSectionInfo
		TEST_METHOD(ScriptStruct__Engine__MeshSectionInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshSectionInfo, 0x0000);
		}

		// struct FStaticMeshSourceModel
		TEST_METHOD(ScriptStruct__Engine__StaticMeshSourceModel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshSourceModel, 0x0000);
		}

		// struct FStaticMeshOptimizationSettings
		TEST_METHOD(ScriptStruct__Engine__StaticMeshOptimizationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshOptimizationSettings, 0x0000);
		}

		// struct FStaticMeshComponentInstanceData : public FPrimitiveComponentInstanceData
		TEST_METHOD(ScriptStruct__Engine__StaticMeshComponentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshComponentInstanceData, 0x0000);
		}

		// struct FStreamingTextureBuildInfo
		TEST_METHOD(ScriptStruct__Engine__StreamingTextureBuildInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamingTextureBuildInfo, 0x0000);
		}

		// struct FStaticMeshVertexColorLODData
		TEST_METHOD(ScriptStruct__Engine__StaticMeshVertexColorLODData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshVertexColorLODData, 0x0000);
		}

		// struct FPaintedVertex
		TEST_METHOD(ScriptStruct__Engine__PaintedVertex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaintedVertex, 0x0000);
		}

		// struct FStaticMeshComponentLODInfo
		TEST_METHOD(ScriptStruct__Engine__StaticMeshComponentLODInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshComponentLODInfo, 0x0000);
		}

		// struct FStaticParameterSet
		TEST_METHOD(ScriptStruct__Engine__StaticParameterSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticParameterSet, 0x0000);
		}

		// struct FStaticMaterialLayersParameter
		TEST_METHOD(ScriptStruct__Engine__StaticMaterialLayersParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMaterialLayersParameter, 0x0000);
		}

		// struct FStaticTerrainLayerWeightParameter
		TEST_METHOD(ScriptStruct__Engine__StaticTerrainLayerWeightParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticTerrainLayerWeightParameter, 0x0000);
		}

		// struct FStaticComponentMaskParameter
		TEST_METHOD(ScriptStruct__Engine__StaticComponentMaskParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticComponentMaskParameter, 0x0000);
		}

		// struct FStaticSwitchParameter
		TEST_METHOD(ScriptStruct__Engine__StaticSwitchParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticSwitchParameter, 0x0000);
		}

		// struct FStringCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__StringCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStringCurve, 0x0000);
		}

		// struct FStringCurveKey
		TEST_METHOD(ScriptStruct__Engine__StringCurveKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStringCurveKey, 0x0000);
		}

		// struct FSubsurfaceProfileStruct
		TEST_METHOD(ScriptStruct__Engine__SubsurfaceProfileStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubsurfaceProfileStruct, 0x0000);
		}

		// struct FTexturePlatformData
		TEST_METHOD(ScriptStruct__Engine__TexturePlatformData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTexturePlatformData, 0x0000);
		}

		// struct FTextureSource
		TEST_METHOD(ScriptStruct__Engine__TextureSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextureSource, 0x0000);
		}

		// struct FTextureLODGroup
		TEST_METHOD(ScriptStruct__Engine__TextureLODGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextureLODGroup, 0x0000);
		}

		// struct FStreamingTexturePrimitiveInfo
		TEST_METHOD(ScriptStruct__Engine__StreamingTexturePrimitiveInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamingTexturePrimitiveInfo, 0x0000);
		}

		// struct FTimeline
		TEST_METHOD(ScriptStruct__Engine__Timeline)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeline, 0x0000);
		}

		// struct FTimelineLinearColorTrack
		TEST_METHOD(ScriptStruct__Engine__TimelineLinearColorTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineLinearColorTrack, 0x0000);
		}

		// struct FTimelineFloatTrack
		TEST_METHOD(ScriptStruct__Engine__TimelineFloatTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineFloatTrack, 0x0000);
		}

		// struct FTimelineVectorTrack
		TEST_METHOD(ScriptStruct__Engine__TimelineVectorTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineVectorTrack, 0x0000);
		}

		// struct FTimelineEventEntry
		TEST_METHOD(ScriptStruct__Engine__TimelineEventEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineEventEntry, 0x0000);
		}

		// struct FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTTrackBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTTrackBase, 0x0000);
		}

		// struct FTTPropertyTrack : public FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTPropertyTrack, 0x0000);
		}

		// struct FTTLinearColorTrack : public FTTPropertyTrack
		TEST_METHOD(ScriptStruct__Engine__TTLinearColorTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTLinearColorTrack, 0x0000);
		}

		// struct FTTVectorTrack : public FTTPropertyTrack
		TEST_METHOD(ScriptStruct__Engine__TTVectorTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTVectorTrack, 0x0000);
		}

		// struct FTTFloatTrack : public FTTPropertyTrack
		TEST_METHOD(ScriptStruct__Engine__TTFloatTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTFloatTrack, 0x0000);
		}

		// struct FTTEventTrack : public FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTEventTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTEventTrack, 0x0000);
		}

		// struct FTimeStretchCurveInstance
		TEST_METHOD(ScriptStruct__Engine__TimeStretchCurveInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeStretchCurveInstance, 0x0000);
		}

		// struct FTimeStretchCurve
		TEST_METHOD(ScriptStruct__Engine__TimeStretchCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeStretchCurve, 0x0000);
		}

		// struct FTimeStretchCurveMarker
		TEST_METHOD(ScriptStruct__Engine__TimeStretchCurveMarker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeStretchCurveMarker, 0x0000);
		}

		// struct FTouchInputControl
		TEST_METHOD(ScriptStruct__Engine__TouchInputControl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTouchInputControl, 0x0000);
		}

		// struct FHardwareCursorReference
		TEST_METHOD(ScriptStruct__Engine__HardwareCursorReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHardwareCursorReference, 0x0000);
		}

		// struct FVirtualTextureLayer
		TEST_METHOD(ScriptStruct__Engine__VirtualTextureLayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVirtualTextureLayer, 0x0000);
		}

		// struct FVoiceSettings
		TEST_METHOD(ScriptStruct__Engine__VoiceSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVoiceSettings, 0x0000);
		}

		// struct FStreamingLevelsToConsider
		TEST_METHOD(ScriptStruct__Engine__StreamingLevelsToConsider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamingLevelsToConsider, 0x0000);
		}

		// struct FLevelStreamingWrapper
		TEST_METHOD(ScriptStruct__Engine__LevelStreamingWrapper)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelStreamingWrapper, 0x0000);
		}

		// struct FLevelCollection
		TEST_METHOD(ScriptStruct__Engine__LevelCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelCollection, 0x0000);
		}

		// struct FEndPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__EndPhysicsTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEndPhysicsTickFunction, 0x0000);
		}

		// struct FStartPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__StartPhysicsTickFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStartPhysicsTickFunction, 0x0000);
		}

		// struct FLevelViewportInfo
		TEST_METHOD(ScriptStruct__Engine__LevelViewportInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelViewportInfo, 0x0000);
		}

		// struct FWorldPSCPool
		TEST_METHOD(ScriptStruct__Engine__WorldPSCPool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldPSCPool, 0x0000);
		}

		// struct FPSCPool
		TEST_METHOD(ScriptStruct__Engine__PSCPool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPSCPool, 0x0000);
		}

		// struct FPSCPoolElem
		TEST_METHOD(ScriptStruct__Engine__PSCPoolElem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPSCPoolElem, 0x0000);
		}

		// struct FBroadphaseSettings
		TEST_METHOD(ScriptStruct__Engine__BroadphaseSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBroadphaseSettings, 0x0000);
		}

		// struct FHierarchicalSimplification
		TEST_METHOD(ScriptStruct__Engine__HierarchicalSimplification)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHierarchicalSimplification, 0x0000);
		}

		// struct FNetViewer
		TEST_METHOD(ScriptStruct__Engine__NetViewer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNetViewer, 0x0000);
		}

		// struct FLightmassWorldInfoSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassWorldInfoSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassWorldInfoSettings, 0x0000);
		}

		// struct FIntMargin
		TEST_METHOD(ScriptStruct__Paper2D__IntMargin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntMargin, 0x0000);
		}

		// struct FPaperFlipbookKeyFrame
		TEST_METHOD(ScriptStruct__Paper2D__PaperFlipbookKeyFrame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperFlipbookKeyFrame, 0x0000);
		}

		// struct FSpriteInstanceData
		TEST_METHOD(ScriptStruct__Paper2D__SpriteInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteInstanceData, 0x0000);
		}

		// struct FPaperSpriteSocket
		TEST_METHOD(ScriptStruct__Paper2D__PaperSpriteSocket)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperSpriteSocket, 0x0000);
		}

		// struct FPaperSpriteAtlasSlot
		TEST_METHOD(ScriptStruct__Paper2D__PaperSpriteAtlasSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperSpriteAtlasSlot, 0x0000);
		}

		// struct FPaperTerrainMaterialRule
		TEST_METHOD(ScriptStruct__Paper2D__PaperTerrainMaterialRule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTerrainMaterialRule, 0x0000);
		}

		// struct FPaperTileInfo
		TEST_METHOD(ScriptStruct__Paper2D__PaperTileInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTileInfo, 0x0000);
		}

		// struct FPaperTileSetTerrain
		TEST_METHOD(ScriptStruct__Paper2D__PaperTileSetTerrain)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTileSetTerrain, 0x0000);
		}

		// struct FPaperTileMetadata
		TEST_METHOD(ScriptStruct__Paper2D__PaperTileMetadata)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTileMetadata, 0x0000);
		}

		// struct FSpriteGeometryCollection
		TEST_METHOD(ScriptStruct__Paper2D__SpriteGeometryCollection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteGeometryCollection, 0x0000);
		}

		// struct FSpriteGeometryShape
		TEST_METHOD(ScriptStruct__Paper2D__SpriteGeometryShape)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteGeometryShape, 0x0000);
		}

		// struct FSpriteDrawCallRecord
		TEST_METHOD(ScriptStruct__Paper2D__SpriteDrawCallRecord)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteDrawCallRecord, 0x0000);
		}

		// struct FSpriteAssetInitParameters
		TEST_METHOD(ScriptStruct__Paper2D__SpriteAssetInitParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteAssetInitParameters, 0x0000);
		}

		// struct FDamageInfo : public FDamageEvent
		TEST_METHOD(ScriptStruct__GunfireRuntime__DamageInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDamageInfo, 0x0000);
		}

		// struct FDamageInfoVariable
		TEST_METHOD(ScriptStruct__GunfireRuntime__DamageInfoVariable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDamageInfoVariable, 0x0000);
		}

		// struct FContextualDialogResponse : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__ContextualDialogResponse)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FContextualDialogResponse, 0x0000);
		}

		// struct FItemSocketSlot
		TEST_METHOD(ScriptStruct__GunfireRuntime__ItemSocketSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FItemSocketSlot, 0x0000);
		}

		// struct FReceptacleSlot
		TEST_METHOD(ScriptStruct__GunfireRuntime__ReceptacleSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReceptacleSlot, 0x0000);
		}

		// struct FTutorialPrompt : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__TutorialPrompt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTutorialPrompt, 0x0000);
		}

		// struct FSequencerPlayerSettings
		TEST_METHOD(ScriptStruct__GunfireRuntime__SequencerPlayerSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSequencerPlayerSettings, 0x0000);
		}

		// struct FEventTreeStage
		TEST_METHOD(ScriptStruct__GunfireRuntime__EventTreeStage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventTreeStage, 0x0000);
		}

		// struct FEventTreeAttrib
		TEST_METHOD(ScriptStruct__GunfireRuntime__EventTreeAttrib)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventTreeAttrib, 0x0000);
		}

		// struct FTileCoord
		TEST_METHOD(ScriptStruct__GunfireRuntime__TileCoord)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTileCoord, 0x0000);
		}

		// struct FHudInteractive
		TEST_METHOD(ScriptStruct__GunfireRuntime__HudInteractive)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHudInteractive, 0x0000);
		}

		// struct FSpawnList
		TEST_METHOD(ScriptStruct__GunfireRuntime__SpawnList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnList, 0x0000);
		}

		// struct FSpawnEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__SpawnEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnEntry, 0x0000);
		}

		// struct FStatData : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__StatData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatData, 0x0000);
		}

		// struct FAchievementId
		TEST_METHOD(ScriptStruct__GunfireRuntime__AchievementId)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAchievementId, 0x0000);
		}

		// struct FActorStateDecorators
		TEST_METHOD(ScriptStruct__GunfireRuntime__ActorStateDecorators)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorStateDecorators, 0x0000);
		}

		// struct FActorStateID
		TEST_METHOD(ScriptStruct__GunfireRuntime__ActorStateID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorStateID, 0x0000);
		}

		// struct FAdvButtonStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__GunfireRuntime__AdvButtonStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAdvButtonStyle, 0x0000);
		}

		// struct FFontStyleConfigEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__FontStyleConfigEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontStyleConfigEntry, 0x0000);
		}

		// struct FOwnedAIData
		TEST_METHOD(ScriptStruct__GunfireRuntime__OwnedAIData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOwnedAIData, 0x0000);
		}

		// struct FSpawnPointList
		TEST_METHOD(ScriptStruct__GunfireRuntime__SpawnPointList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnPointList, 0x0000);
		}

		// struct FSpawnPointTransform
		TEST_METHOD(ScriptStruct__GunfireRuntime__SpawnPointTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnPointTransform, 0x0000);
		}

		// struct FAINavigationLink : public FNavigationLinkBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__AINavigationLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAINavigationLink, 0x0000);
		}

		// struct FSpawnGenerator
		TEST_METHOD(ScriptStruct__GunfireRuntime__SpawnGenerator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnGenerator, 0x0000);
		}

		// struct FEncounterGroup
		TEST_METHOD(ScriptStruct__GunfireRuntime__EncounterGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEncounterGroup, 0x0000);
		}

		// struct FAIDirectorPlayer
		TEST_METHOD(ScriptStruct__GunfireRuntime__AIDirectorPlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDirectorPlayer, 0x0000);
		}

		// struct FAIDirectorParams : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__AIDirectorParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDirectorParams, 0x0000);
		}

		// struct FEnvQueryQuery : public FEQSParametrizedQueryExecutionRequest
		TEST_METHOD(ScriptStruct__GunfireRuntime__EnvQueryQuery)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvQueryQuery, 0x0000);
		}

		// struct FRelevantActor
		TEST_METHOD(ScriptStruct__GunfireRuntime__RelevantActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRelevantActor, 0x0000);
		}

		// struct FAITacticalPoint
		TEST_METHOD(ScriptStruct__GunfireRuntime__AITacticalPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAITacticalPoint, 0x0000);
		}

		// struct FAmbientAudioChannel
		TEST_METHOD(ScriptStruct__GunfireRuntime__AmbientAudioChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAmbientAudioChannel, 0x0000);
		}

		// struct FAmbientSoundMix
		TEST_METHOD(ScriptStruct__GunfireRuntime__AmbientSoundMix)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAmbientSoundMix, 0x0000);
		}

		// struct FTileAmbientSpawns
		TEST_METHOD(ScriptStruct__GunfireRuntime__TileAmbientSpawns)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTileAmbientSpawns, 0x0000);
		}

		// struct FTileAmbientSpawnRegion
		TEST_METHOD(ScriptStruct__GunfireRuntime__TileAmbientSpawnRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTileAmbientSpawnRegion, 0x0000);
		}

		// struct FAmbientSpawn
		TEST_METHOD(ScriptStruct__GunfireRuntime__AmbientSpawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAmbientSpawn, 0x0000);
		}

		// struct FAnimationHandle
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimationHandle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationHandle, 0x0000);
		}

		// struct FAnimationID
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimationID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationID, 0x0000);
		}

		// struct FAnimationEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimationEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationEntry, 0x0000);
		}

		// struct FGunfireAnimInstanceProxy : public FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__GunfireRuntime__GunfireAnimInstanceProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGunfireAnimInstanceProxy, 0x0000);
		}

		// struct FLegIkEffector
		TEST_METHOD(ScriptStruct__GunfireRuntime__LegIkEffector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLegIkEffector, 0x0000);
		}

		// struct FAnimationLayer
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimationLayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationLayer, 0x0000);
		}

		// struct FAnimNode_3DBlend : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_3DBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_3DBlend, 0x0000);
		}

		// struct FAnimNode_BlendByAnimationID : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_BlendByAnimationID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendByAnimationID, 0x0000);
		}

		// struct FAnimNode_BlendByAnimationID_Anim
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_BlendByAnimationID_Anim)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendByAnimationID_Anim, 0x0000);
		}

		// struct FAnimNode_PlayAnimSetAnim : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_PlayAnimSetAnim)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PlayAnimSetAnim, 0x0000);
		}

		// struct FAnimNode_BlendByAnimationID_Animation
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_BlendByAnimationID_Animation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendByAnimationID_Animation, 0x0000);
		}

		// struct FAnimNode_BlendByAnimTags : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_BlendByAnimTags)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendByAnimTags, 0x0000);
		}

		// struct FAnimNode_BlendByAnimTags_Entry
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_BlendByAnimTags_Entry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendByAnimTags_Entry, 0x0000);
		}

		// struct FAnimNode_CompositeBlendSpacePlayer : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_CompositeBlendSpacePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CompositeBlendSpacePlayer, 0x0000);
		}

		// struct FAnimNode_PlayAnimByAnimTags : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_PlayAnimByAnimTags)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PlayAnimByAnimTags, 0x0000);
		}

		// struct FAnimNode_PlayAnimByAnimTags_AnimEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_PlayAnimByAnimTags_AnimEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PlayAnimByAnimTags_AnimEntry, 0x0000);
		}

		// struct FAnimNode_RandomBlend : public FAnimNode_BlendListBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__AnimNode_RandomBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RandomBlend, 0x0000);
		}

		// struct FTagParticleEffectPair
		TEST_METHOD(ScriptStruct__GunfireRuntime__TagParticleEffectPair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTagParticleEffectPair, 0x0000);
		}

		// struct FAttribute
		TEST_METHOD(ScriptStruct__GunfireRuntime__Attribute)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttribute, 0x0000);
		}

		// struct FAttributeLevel
		TEST_METHOD(ScriptStruct__GunfireRuntime__AttributeLevel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttributeLevel, 0x0000);
		}

		// struct FAudioState
		TEST_METHOD(ScriptStruct__GunfireRuntime__AudioState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAudioState, 0x0000);
		}

		// struct FWorldSound
		TEST_METHOD(ScriptStruct__GunfireRuntime__WorldSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldSound, 0x0000);
		}

		// struct FCustomCameraBlend
		TEST_METHOD(ScriptStruct__GunfireRuntime__CustomCameraBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomCameraBlend, 0x0000);
		}

		// struct FChallengeRank
		TEST_METHOD(ScriptStruct__GunfireRuntime__ChallengeRank)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChallengeRank, 0x0000);
		}

		// struct FChallengeInstance
		TEST_METHOD(ScriptStruct__GunfireRuntime__ChallengeInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChallengeInstance, 0x0000);
		}

		// struct FChallengeRankInstance
		TEST_METHOD(ScriptStruct__GunfireRuntime__ChallengeRankInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChallengeRankInstance, 0x0000);
		}

		// struct FActiveRagdollInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__ActiveRagdollInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActiveRagdollInfo, 0x0000);
		}

		// struct FCooldown : public FStatData
		TEST_METHOD(ScriptStruct__GunfireRuntime__Cooldown)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCooldown, 0x0000);
		}

		// struct FCharacterData : public FStatData
		TEST_METHOD(ScriptStruct__GunfireRuntime__CharacterData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCharacterData, 0x0000);
		}

		// struct FCheatCommands
		TEST_METHOD(ScriptStruct__GunfireRuntime__CheatCommands)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCheatCommands, 0x0000);
		}

		// struct FCheatCommandDetails
		TEST_METHOD(ScriptStruct__GunfireRuntime__CheatCommandDetails)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCheatCommandDetails, 0x0000);
		}

		// struct FCheatInputAction
		TEST_METHOD(ScriptStruct__GunfireRuntime__CheatInputAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCheatInputAction, 0x0000);
		}

		// struct FAttachedChild
		TEST_METHOD(ScriptStruct__GunfireRuntime__AttachedChild)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttachedChild, 0x0000);
		}

		// struct FProjectileParams
		TEST_METHOD(ScriptStruct__GunfireRuntime__ProjectileParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProjectileParams, 0x0000);
		}

		// struct FTargetingColorParams
		TEST_METHOD(ScriptStruct__GunfireRuntime__TargetingColorParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTargetingColorParams, 0x0000);
		}

		// struct FReplicatedHits
		TEST_METHOD(ScriptStruct__GunfireRuntime__ReplicatedHits)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedHits, 0x0000);
		}

		// struct FConditions
		TEST_METHOD(ScriptStruct__GunfireRuntime__Conditions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConditions, 0x0000);
		}

		// struct FRecipeInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__RecipeInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRecipeInfo, 0x0000);
		}

		// struct FIngredientInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__IngredientInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIngredientInfo, 0x0000);
		}

		// struct FRecipe : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__Recipe)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRecipe, 0x0000);
		}

		// struct FRecipeList
		TEST_METHOD(ScriptStruct__GunfireRuntime__RecipeList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRecipeList, 0x0000);
		}

		// struct FDeployableAttributes
		TEST_METHOD(ScriptStruct__GunfireRuntime__DeployableAttributes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDeployableAttributes, 0x0000);
		}

		// struct FDialog
		TEST_METHOD(ScriptStruct__GunfireRuntime__Dialog)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialog, 0x0000);
		}

		// struct FDialogInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__DialogInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogInfo, 0x0000);
		}

		// struct FDialogOption
		TEST_METHOD(ScriptStruct__GunfireRuntime__DialogOption)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogOption, 0x0000);
		}

		// struct FDialogTokenValuePair
		TEST_METHOD(ScriptStruct__GunfireRuntime__DialogTokenValuePair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogTokenValuePair, 0x0000);
		}

		// struct FDifficultyScalingData : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__DifficultyScalingData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDifficultyScalingData, 0x0000);
		}

		// struct FDissolveMaterial
		TEST_METHOD(ScriptStruct__GunfireRuntime__DissolveMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDissolveMaterial, 0x0000);
		}

		// struct FEncounterSpawn
		TEST_METHOD(ScriptStruct__GunfireRuntime__EncounterSpawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEncounterSpawn, 0x0000);
		}

		// struct FEquipmentMods
		TEST_METHOD(ScriptStruct__GunfireRuntime__EquipmentMods)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEquipmentMods, 0x0000);
		}

		// struct FEquipmentModData
		TEST_METHOD(ScriptStruct__GunfireRuntime__EquipmentModData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEquipmentModData, 0x0000);
		}

		// struct FEquipmentModSlot
		TEST_METHOD(ScriptStruct__GunfireRuntime__EquipmentModSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEquipmentModSlot, 0x0000);
		}

		// struct FEquipmentAttachment
		TEST_METHOD(ScriptStruct__GunfireRuntime__EquipmentAttachment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEquipmentAttachment, 0x0000);
		}

		// struct FColorMapping
		TEST_METHOD(ScriptStruct__GunfireRuntime__ColorMapping)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorMapping, 0x0000);
		}

		// struct FEventTreeContext
		TEST_METHOD(ScriptStruct__GunfireRuntime__EventTreeContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventTreeContext, 0x0000);
		}

		// struct FEventTreeNodeCondition
		TEST_METHOD(ScriptStruct__GunfireRuntime__EventTreeNodeCondition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventTreeNodeCondition, 0x0000);
		}

		// struct FNodeDisplayData
		TEST_METHOD(ScriptStruct__GunfireRuntime__NodeDisplayData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeDisplayData, 0x0000);
		}

		// struct FFactionDamageTracker
		TEST_METHOD(ScriptStruct__GunfireRuntime__FactionDamageTracker)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFactionDamageTracker, 0x0000);
		}

		// struct FFactionOverride
		TEST_METHOD(ScriptStruct__GunfireRuntime__FactionOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFactionOverride, 0x0000);
		}

		// struct FFactionAffiliation
		TEST_METHOD(ScriptStruct__GunfireRuntime__FactionAffiliation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFactionAffiliation, 0x0000);
		}

		// struct FTabFocusInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__TabFocusInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTabFocusInfo, 0x0000);
		}

		// struct FTabGroup
		TEST_METHOD(ScriptStruct__GunfireRuntime__TabGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTabGroup, 0x0000);
		}

		// struct FFocusInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__FocusInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFocusInfo, 0x0000);
		}

		// struct FVisitedCoordinates
		TEST_METHOD(ScriptStruct__GunfireRuntime__VisitedCoordinates)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisitedCoordinates, 0x0000);
		}

		// struct FVisibleCoordinate
		TEST_METHOD(ScriptStruct__GunfireRuntime__VisibleCoordinate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisibleCoordinate, 0x0000);
		}

		// struct FMultiplayerScalingData : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__MultiplayerScalingData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMultiplayerScalingData, 0x0000);
		}

		// struct FEnumCVDUserSettingEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__EnumCVDUserSettingEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnumCVDUserSettingEntry, 0x0000);
		}

		// struct FEnumUserSettingEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__EnumUserSettingEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnumUserSettingEntry, 0x0000);
		}

		// struct FCachedMaterialState
		TEST_METHOD(ScriptStruct__GunfireRuntime__CachedMaterialState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedMaterialState, 0x0000);
		}

		// struct FActorQueryResult
		TEST_METHOD(ScriptStruct__GunfireRuntime__ActorQueryResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorQueryResult, 0x0000);
		}

		// struct FActorQueryFilter
		TEST_METHOD(ScriptStruct__GunfireRuntime__ActorQueryFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorQueryFilter, 0x0000);
		}

		// struct FSimplePoolPrecache
		TEST_METHOD(ScriptStruct__GunfireRuntime__SimplePoolPrecache)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimplePoolPrecache, 0x0000);
		}

		// struct FHeuristicBoundsTraceParams
		TEST_METHOD(ScriptStruct__GunfireRuntime__HeuristicBoundsTraceParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHeuristicBoundsTraceParams, 0x0000);
		}

		// struct FHeuristicBoundsHitResult
		TEST_METHOD(ScriptStruct__GunfireRuntime__HeuristicBoundsHitResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHeuristicBoundsHitResult, 0x0000);
		}

		// struct FHitLocationInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__HitLocationInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHitLocationInfo, 0x0000);
		}

		// struct FImpactFX
		TEST_METHOD(ScriptStruct__GunfireRuntime__ImpactFX)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImpactFX, 0x0000);
		}

		// struct FImpactFXDecalCurves
		TEST_METHOD(ScriptStruct__GunfireRuntime__ImpactFXDecalCurves)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImpactFXDecalCurves, 0x0000);
		}

		// struct FRebindedInputAxis
		TEST_METHOD(ScriptStruct__GunfireRuntime__RebindedInputAxis)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRebindedInputAxis, 0x0000);
		}

		// struct FRebindedInputAction
		TEST_METHOD(ScriptStruct__GunfireRuntime__RebindedInputAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRebindedInputAction, 0x0000);
		}

		// struct FGenericInput
		TEST_METHOD(ScriptStruct__GunfireRuntime__GenericInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGenericInput, 0x0000);
		}

		// struct FInputButton
		TEST_METHOD(ScriptStruct__GunfireRuntime__InputButton)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputButton, 0x0000);
		}

		// struct FInputActivity
		TEST_METHOD(ScriptStruct__GunfireRuntime__InputActivity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputActivity, 0x0000);
		}

		// struct FInspectInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__InspectInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInspectInfo, 0x0000);
		}

		// struct FInspectMod
		TEST_METHOD(ScriptStruct__GunfireRuntime__InspectMod)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInspectMod, 0x0000);
		}

		// struct FInspectStat
		TEST_METHOD(ScriptStruct__GunfireRuntime__InspectStat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInspectStat, 0x0000);
		}

		// struct FStatInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__StatInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatInfo, 0x0000);
		}

		// struct FInterpolatedSoundClassAdjuster
		TEST_METHOD(ScriptStruct__GunfireRuntime__InterpolatedSoundClassAdjuster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpolatedSoundClassAdjuster, 0x0000);
		}

		// struct FInventoryScalingInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__InventoryScalingInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInventoryScalingInfo, 0x0000);
		}

		// struct FInventoryResult
		TEST_METHOD(ScriptStruct__GunfireRuntime__InventoryResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInventoryResult, 0x0000);
		}

		// struct FEquipmentSlot
		TEST_METHOD(ScriptStruct__GunfireRuntime__EquipmentSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEquipmentSlot, 0x0000);
		}

		// struct FEquipmentAttachPointOverride
		TEST_METHOD(ScriptStruct__GunfireRuntime__EquipmentAttachPointOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEquipmentAttachPointOverride, 0x0000);
		}

		// struct FInventoryItem
		TEST_METHOD(ScriptStruct__GunfireRuntime__InventoryItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInventoryItem, 0x0000);
		}

		// struct FItemGenRequest
		TEST_METHOD(ScriptStruct__GunfireRuntime__ItemGenRequest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FItemGenRequest, 0x0000);
		}

		// struct FItemGenResult
		TEST_METHOD(ScriptStruct__GunfireRuntime__ItemGenResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FItemGenResult, 0x0000);
		}

		// struct FItemQueryResult
		TEST_METHOD(ScriptStruct__GunfireRuntime__ItemQueryResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FItemQueryResult, 0x0000);
		}

		// struct FItemQueryFilter
		TEST_METHOD(ScriptStruct__GunfireRuntime__ItemQueryFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FItemQueryFilter, 0x0000);
		}

		// struct FItemStatInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__ItemStatInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FItemStatInfo, 0x0000);
		}

		// struct FLevelInstanceStatus
		TEST_METHOD(ScriptStruct__GunfireRuntime__LevelInstanceStatus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelInstanceStatus, 0x0000);
		}

		// struct FLevelInstanceInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__LevelInstanceInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelInstanceInfo, 0x0000);
		}

		// struct FLODVolumeSubFilter
		TEST_METHOD(ScriptStruct__GunfireRuntime__LODVolumeSubFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLODVolumeSubFilter, 0x0000);
		}

		// struct FLODVolumeDistanceFilter : public FLODVolumeSubFilter
		TEST_METHOD(ScriptStruct__GunfireRuntime__LODVolumeDistanceFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLODVolumeDistanceFilter, 0x0000);
		}

		// struct FLODVolumeInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__LODVolumeInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLODVolumeInfo, 0x0000);
		}

		// struct FMapSettings
		TEST_METHOD(ScriptStruct__GunfireRuntime__MapSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMapSettings, 0x0000);
		}

		// struct FMiniMapActorRef
		TEST_METHOD(ScriptStruct__GunfireRuntime__MiniMapActorRef)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMiniMapActorRef, 0x0000);
		}

		// struct FTransformWithSnapResults
		TEST_METHOD(ScriptStruct__GunfireRuntime__TransformWithSnapResults)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformWithSnapResults, 0x0000);
		}

		// struct FMiniMapEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__MiniMapEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMiniMapEntry, 0x0000);
		}

		// struct FMiniMapMeshMapIndex : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__MiniMapMeshMapIndex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMiniMapMeshMapIndex, 0x0000);
		}

		// struct FMiniMapActorInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__MiniMapActorInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMiniMapActorInfo, 0x0000);
		}

		// struct FMovieSceneDialogSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__GunfireRuntime__MovieSceneDialogSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneDialogSectionTemplate, 0x0000);
		}

		// struct FMovieSceneDialogSectionTemplateData
		TEST_METHOD(ScriptStruct__GunfireRuntime__MovieSceneDialogSectionTemplateData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneDialogSectionTemplateData, 0x0000);
		}

		// struct FMovieSceneEventTreeSectionData : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__GunfireRuntime__MovieSceneEventTreeSectionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventTreeSectionData, 0x0000);
		}

		// struct FEventTreePayload
		TEST_METHOD(ScriptStruct__GunfireRuntime__EventTreePayload)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventTreePayload, 0x0000);
		}

		// struct FMovieSceneEventTreeSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__GunfireRuntime__MovieSceneEventTreeSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventTreeSectionTemplate, 0x0000);
		}

		// struct FMovieSceneSoundSetSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__GunfireRuntime__MovieSceneSoundSetSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSoundSetSectionTemplate, 0x0000);
		}

		// struct FMovieSceneSoundSetSectionTemplateData
		TEST_METHOD(ScriptStruct__GunfireRuntime__MovieSceneSoundSetSectionTemplateData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSoundSetSectionTemplateData, 0x0000);
		}

		// struct FActiveMusicSet
		TEST_METHOD(ScriptStruct__GunfireRuntime__ActiveMusicSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActiveMusicSet, 0x0000);
		}

		// struct FMusicStinger
		TEST_METHOD(ScriptStruct__GunfireRuntime__MusicStinger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMusicStinger, 0x0000);
		}

		// struct FMusicState
		TEST_METHOD(ScriptStruct__GunfireRuntime__MusicState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMusicState, 0x0000);
		}

		// struct FLookTarget
		TEST_METHOD(ScriptStruct__GunfireRuntime__LookTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLookTarget, 0x0000);
		}

		// struct FPerNodePathSharingData
		TEST_METHOD(ScriptStruct__GunfireRuntime__PerNodePathSharingData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerNodePathSharingData, 0x0000);
		}

		// struct FPhysicsImpactSoundInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__PhysicsImpactSoundInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicsImpactSoundInfo, 0x0000);
		}

		// struct FCachedPhysicsComponent
		TEST_METHOD(ScriptStruct__GunfireRuntime__CachedPhysicsComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedPhysicsComponent, 0x0000);
		}

		// struct FPlayStateContext
		TEST_METHOD(ScriptStruct__GunfireRuntime__PlayStateContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlayStateContext, 0x0000);
		}

		// struct FPositionValue
		TEST_METHOD(ScriptStruct__GunfireRuntime__PositionValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPositionValue, 0x0000);
		}

		// struct FExperienceData : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__ExperienceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExperienceData, 0x0000);
		}

		// struct FProjectileVisualizationContext
		TEST_METHOD(ScriptStruct__GunfireRuntime__ProjectileVisualizationContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProjectileVisualizationContext, 0x0000);
		}

		// struct FProjectileVisualizationParams
		TEST_METHOD(ScriptStruct__GunfireRuntime__ProjectileVisualizationParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProjectileVisualizationParams, 0x0000);
		}

		// struct FQuestEntityEventTree
		TEST_METHOD(ScriptStruct__GunfireRuntime__QuestEntityEventTree)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQuestEntityEventTree, 0x0000);
		}

		// struct FQuestDebugProperty
		TEST_METHOD(ScriptStruct__GunfireRuntime__QuestDebugProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQuestDebugProperty, 0x0000);
		}

		// struct FRangedWeaponMode
		TEST_METHOD(ScriptStruct__GunfireRuntime__RangedWeaponMode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRangedWeaponMode, 0x0000);
		}

		// struct FWeaponStatData : public FStatData
		TEST_METHOD(ScriptStruct__GunfireRuntime__WeaponStatData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeaponStatData, 0x0000);
		}

		// struct FRangedWeaponData : public FWeaponStatData
		TEST_METHOD(ScriptStruct__GunfireRuntime__RangedWeaponData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRangedWeaponData, 0x0000);
		}

		// struct FCustomWeaponSpread
		TEST_METHOD(ScriptStruct__GunfireRuntime__CustomWeaponSpread)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomWeaponSpread, 0x0000);
		}

		// struct FReplicatedLocation
		TEST_METHOD(ScriptStruct__GunfireRuntime__ReplicatedLocation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedLocation, 0x0000);
		}

		// struct FReplicatedTrace : public FReplicatedLocation
		TEST_METHOD(ScriptStruct__GunfireRuntime__ReplicatedTrace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedTrace, 0x0000);
		}

		// struct FReplicatedHit : public FReplicatedTrace
		TEST_METHOD(ScriptStruct__GunfireRuntime__ReplicatedHit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedHit, 0x0000);
		}

		// struct FReplicatedMovementInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__ReplicatedMovementInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedMovementInfo, 0x0000);
		}

		// struct FTileResources
		TEST_METHOD(ScriptStruct__GunfireRuntime__TileResources)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTileResources, 0x0000);
		}

		// struct FResourceType
		TEST_METHOD(ScriptStruct__GunfireRuntime__ResourceType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FResourceType, 0x0000);
		}

		// struct FRuleData : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__RuleData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRuleData, 0x0000);
		}

		// struct FLevelSequencePossession
		TEST_METHOD(ScriptStruct__GunfireRuntime__LevelSequencePossession)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequencePossession, 0x0000);
		}

		// struct FQueuedSpawn
		TEST_METHOD(ScriptStruct__GunfireRuntime__QueuedSpawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQueuedSpawn, 0x0000);
		}

		// struct FSpawnPointInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__SpawnPointInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnPointInfo, 0x0000);
		}

		// struct FSpawnedActor
		TEST_METHOD(ScriptStruct__GunfireRuntime__SpawnedActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnedActor, 0x0000);
		}

		// struct FInteractiveInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__InteractiveInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInteractiveInfo, 0x0000);
		}

		// struct FStateID
		TEST_METHOD(ScriptStruct__GunfireRuntime__StateID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStateID, 0x0000);
		}

		// struct FStateMachineSubobjectArray
		TEST_METHOD(ScriptStruct__GunfireRuntime__StateMachineSubobjectArray)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStateMachineSubobjectArray, 0x0000);
		}

		// struct FStateMachineSubobjectArrayElement
		TEST_METHOD(ScriptStruct__GunfireRuntime__StateMachineSubobjectArrayElement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStateMachineSubobjectArrayElement, 0x0000);
		}

		// struct FStatDecoratorStat
		TEST_METHOD(ScriptStruct__GunfireRuntime__StatDecoratorStat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDecoratorStat, 0x0000);
		}

		// struct FStatValue
		TEST_METHOD(ScriptStruct__GunfireRuntime__StatValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatValue, 0x0000);
		}

		// struct FSubtitleInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__SubtitleInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubtitleInfo, 0x0000);
		}

		// struct FSurfaceOrientFeeler
		TEST_METHOD(ScriptStruct__GunfireRuntime__SurfaceOrientFeeler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSurfaceOrientFeeler, 0x0000);
		}

		// struct FTargetAlignRequest
		TEST_METHOD(ScriptStruct__GunfireRuntime__TargetAlignRequest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTargetAlignRequest, 0x0000);
		}

		// struct FTargetTraceParams
		TEST_METHOD(ScriptStruct__GunfireRuntime__TargetTraceParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTargetTraceParams, 0x0000);
		}

		// struct FTileSpawnList
		TEST_METHOD(ScriptStruct__GunfireRuntime__TileSpawnList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTileSpawnList, 0x0000);
		}

		// struct FTileBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__TileBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTileBase, 0x0000);
		}

		// struct FTile : public FTileBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__Tile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTile, 0x0000);
		}

		// struct FMapGenAttribute
		TEST_METHOD(ScriptStruct__GunfireRuntime__MapGenAttribute)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMapGenAttribute, 0x0000);
		}

		// struct FTileEdges
		TEST_METHOD(ScriptStruct__GunfireRuntime__TileEdges)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTileEdges, 0x0000);
		}

		// struct FTimeDilationEffectHandle
		TEST_METHOD(ScriptStruct__GunfireRuntime__TimeDilationEffectHandle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeDilationEffectHandle, 0x0000);
		}

		// struct FTraitSlot
		TEST_METHOD(ScriptStruct__GunfireRuntime__TraitSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTraitSlot, 0x0000);
		}

		// struct FTraitInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__TraitInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTraitInfo, 0x0000);
		}

		// struct FTraitPointsPerLevelData : public FTableRowBase
		TEST_METHOD(ScriptStruct__GunfireRuntime__TraitPointsPerLevelData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTraitPointsPerLevelData, 0x0000);
		}

		// struct FDamageNumberParameters
		TEST_METHOD(ScriptStruct__GunfireRuntime__DamageNumberParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDamageNumberParameters, 0x0000);
		}

		// struct FVariableInfo
		TEST_METHOD(ScriptStruct__GunfireRuntime__VariableInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVariableInfo, 0x0000);
		}

		// struct FBlackboardObjectValue
		TEST_METHOD(ScriptStruct__GunfireRuntime__BlackboardObjectValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardObjectValue, 0x0000);
		}

		// struct FBlackboardClassValue
		TEST_METHOD(ScriptStruct__GunfireRuntime__BlackboardClassValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardClassValue, 0x0000);
		}

		// struct FBlackboardStringValue
		TEST_METHOD(ScriptStruct__GunfireRuntime__BlackboardStringValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardStringValue, 0x0000);
		}

		// struct FBlackboardBoolValue
		TEST_METHOD(ScriptStruct__GunfireRuntime__BlackboardBoolValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardBoolValue, 0x0000);
		}

		// struct FBlackboardNumValue
		TEST_METHOD(ScriptStruct__GunfireRuntime__BlackboardNumValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardNumValue, 0x0000);
		}

		// struct FRandomStaticMesh
		TEST_METHOD(ScriptStruct__GunfireRuntime__RandomStaticMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRandomStaticMesh, 0x0000);
		}

		// struct FVisualMaterialParam
		TEST_METHOD(ScriptStruct__GunfireRuntime__VisualMaterialParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisualMaterialParam, 0x0000);
		}

		// struct FVisualMaterialReplacement
		TEST_METHOD(ScriptStruct__GunfireRuntime__VisualMaterialReplacement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisualMaterialReplacement, 0x0000);
		}

		// struct FRandomSkinMesh
		TEST_METHOD(ScriptStruct__GunfireRuntime__RandomSkinMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRandomSkinMesh, 0x0000);
		}

		// struct FVisualSceneComponent
		TEST_METHOD(ScriptStruct__GunfireRuntime__VisualSceneComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisualSceneComponent, 0x0000);
		}

		// struct FVisualSlot
		TEST_METHOD(ScriptStruct__GunfireRuntime__VisualSlot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisualSlot, 0x0000);
		}

		// struct FWaterFXOverride
		TEST_METHOD(ScriptStruct__GunfireRuntime__WaterFXOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWaterFXOverride, 0x0000);
		}

		// struct FWaterFXEntry
		TEST_METHOD(ScriptStruct__GunfireRuntime__WaterFXEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWaterFXEntry, 0x0000);
		}

		// struct FWeaponAffinity
		TEST_METHOD(ScriptStruct__GunfireRuntime__WeaponAffinity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeaponAffinity, 0x0000);
		}

		// struct FWeaponPhantomProvider
		TEST_METHOD(ScriptStruct__GunfireRuntime__WeaponPhantomProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeaponPhantomProvider, 0x0000);
		}

		// struct FActiveWeaponPhantom
		TEST_METHOD(ScriptStruct__GunfireRuntime__ActiveWeaponPhantom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActiveWeaponPhantom, 0x0000);
		}

		// struct FPhantomKeyframe
		TEST_METHOD(ScriptStruct__GunfireRuntime__PhantomKeyframe)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhantomKeyframe, 0x0000);
		}

		// struct FWeaponPhantomShape
		TEST_METHOD(ScriptStruct__GunfireRuntime__WeaponPhantomShape)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeaponPhantomShape, 0x0000);
		}

		// struct FWorldSoundList
		TEST_METHOD(ScriptStruct__GunfireRuntime__WorldSoundList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldSoundList, 0x0000);
		}

		// struct FAIRequestID
		TEST_METHOD(ScriptStruct__AIModule__AIRequestID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIRequestID, 0x0000);
		}

		// struct FAIStimulus
		TEST_METHOD(ScriptStruct__AIModule__AIStimulus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIStimulus, 0x0000);
		}

		// struct FEQSParametrizedQueryExecutionRequest
		TEST_METHOD(ScriptStruct__AIModule__EQSParametrizedQueryExecutionRequest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEQSParametrizedQueryExecutionRequest, 0x0000);
		}

		// struct FBlackboardKeySelector
		TEST_METHOD(ScriptStruct__AIModule__BlackboardKeySelector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardKeySelector, 0x0000);
		}

		// struct FAIDynamicParam
		TEST_METHOD(ScriptStruct__AIModule__AIDynamicParam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDynamicParam, 0x0000);
		}

		// struct FAIDataProviderValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderValue, 0x0000);
		}

		// struct FAIDataProviderTypedValue : public FAIDataProviderValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderTypedValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderTypedValue, 0x0000);
		}

		// struct FAIDataProviderBoolValue : public FAIDataProviderTypedValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderBoolValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderBoolValue, 0x0000);
		}

		// struct FAIDataProviderFloatValue : public FAIDataProviderTypedValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderFloatValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderFloatValue, 0x0000);
		}

		// struct FAIDataProviderIntValue : public FAIDataProviderTypedValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderIntValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderIntValue, 0x0000);
		}

		// struct FAIDataProviderStructValue : public FAIDataProviderValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderStructValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderStructValue, 0x0000);
		}

		// struct FActorPerceptionBlueprintInfo
		TEST_METHOD(ScriptStruct__AIModule__ActorPerceptionBlueprintInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorPerceptionBlueprintInfo, 0x0000);
		}

		// struct FAISenseAffiliationFilter
		TEST_METHOD(ScriptStruct__AIModule__AISenseAffiliationFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAISenseAffiliationFilter, 0x0000);
		}

		// struct FAIDamageEvent
		TEST_METHOD(ScriptStruct__AIModule__AIDamageEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDamageEvent, 0x0000);
		}

		// struct FAINoiseEvent
		TEST_METHOD(ScriptStruct__AIModule__AINoiseEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAINoiseEvent, 0x0000);
		}

		// struct FAIPredictionEvent
		TEST_METHOD(ScriptStruct__AIModule__AIPredictionEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIPredictionEvent, 0x0000);
		}

		// struct FAISightEvent
		TEST_METHOD(ScriptStruct__AIModule__AISightEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAISightEvent, 0x0000);
		}

		// struct FAITeamStimulusEvent
		TEST_METHOD(ScriptStruct__AIModule__AITeamStimulusEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAITeamStimulusEvent, 0x0000);
		}

		// struct FAITouchEvent
		TEST_METHOD(ScriptStruct__AIModule__AITouchEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAITouchEvent, 0x0000);
		}

		// struct FAIMoveRequest
		TEST_METHOD(ScriptStruct__AIModule__AIMoveRequest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIMoveRequest, 0x0000);
		}

		// struct FBehaviorTreeTemplateInfo
		TEST_METHOD(ScriptStruct__AIModule__BehaviorTreeTemplateInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBehaviorTreeTemplateInfo, 0x0000);
		}

		// struct FBlackboardEntry
		TEST_METHOD(ScriptStruct__AIModule__BlackboardEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardEntry, 0x0000);
		}

		// struct FBTCompositeChild
		TEST_METHOD(ScriptStruct__AIModule__BTCompositeChild)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBTCompositeChild, 0x0000);
		}

		// struct FBTDecoratorLogic
		TEST_METHOD(ScriptStruct__AIModule__BTDecoratorLogic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBTDecoratorLogic, 0x0000);
		}

		// struct FCrowdAvoidanceSamplingPattern
		TEST_METHOD(ScriptStruct__AIModule__CrowdAvoidanceSamplingPattern)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCrowdAvoidanceSamplingPattern, 0x0000);
		}

		// struct FCrowdAvoidanceConfig
		TEST_METHOD(ScriptStruct__AIModule__CrowdAvoidanceConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCrowdAvoidanceConfig, 0x0000);
		}

		// struct FEnvQueryInstanceCache
		TEST_METHOD(ScriptStruct__AIModule__EnvQueryInstanceCache)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvQueryInstanceCache, 0x0000);
		}

		// struct FEnvQueryRequest
		TEST_METHOD(ScriptStruct__AIModule__EnvQueryRequest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvQueryRequest, 0x0000);
		}

		// struct FEnvQueryResult
		TEST_METHOD(ScriptStruct__AIModule__EnvQueryResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvQueryResult, 0x0000);
		}

		// struct FEnvOverlapData
		TEST_METHOD(ScriptStruct__AIModule__EnvOverlapData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvOverlapData, 0x0000);
		}

		// struct FEnvTraceData
		TEST_METHOD(ScriptStruct__AIModule__EnvTraceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvTraceData, 0x0000);
		}

		// struct FEnvDirection
		TEST_METHOD(ScriptStruct__AIModule__EnvDirection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvDirection, 0x0000);
		}

		// struct FEnvNamedValue
		TEST_METHOD(ScriptStruct__AIModule__EnvNamedValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvNamedValue, 0x0000);
		}

		// struct FGenericTeamId
		TEST_METHOD(ScriptStruct__AIModule__GenericTeamId)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGenericTeamId, 0x0000);
		}

		// struct FPawnActionStack
		TEST_METHOD(ScriptStruct__AIModule__PawnActionStack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPawnActionStack, 0x0000);
		}

		// struct FPawnActionEvent
		TEST_METHOD(ScriptStruct__AIModule__PawnActionEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPawnActionEvent, 0x0000);
		}

		// struct FARSharedWorldReplicationState
		TEST_METHOD(ScriptStruct__AugmentedReality__ARSharedWorldReplicationState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FARSharedWorldReplicationState, 0x0000);
		}

		// struct FARTraceResult
		TEST_METHOD(ScriptStruct__AugmentedReality__ARTraceResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FARTraceResult, 0x0000);
		}

		// struct FARVideoFormat
		TEST_METHOD(ScriptStruct__AugmentedReality__ARVideoFormat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FARVideoFormat, 0x0000);
		}

		// struct FARSessionStatus
		TEST_METHOD(ScriptStruct__AugmentedReality__ARSessionStatus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FARSessionStatus, 0x0000);
		}

		// struct FInAppPurchaseProductInfo
		TEST_METHOD(ScriptStruct__OnlineSubsystem__InAppPurchaseProductInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInAppPurchaseProductInfo, 0x0000);
		}

		// struct FInAppPurchaseRestoreInfo
		TEST_METHOD(ScriptStruct__OnlineSubsystem__InAppPurchaseRestoreInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInAppPurchaseRestoreInfo, 0x0000);
		}

		// struct FNamedInterfaceDef
		TEST_METHOD(ScriptStruct__OnlineSubsystem__NamedInterfaceDef)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedInterfaceDef, 0x0000);
		}

		// struct FNamedInterface
		TEST_METHOD(ScriptStruct__OnlineSubsystem__NamedInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedInterface, 0x0000);
		}

		// struct FInAppPurchaseProductRequest
		TEST_METHOD(ScriptStruct__OnlineSubsystem__InAppPurchaseProductRequest)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInAppPurchaseProductRequest, 0x0000);
		}

		// struct FProcMeshSection
		TEST_METHOD(ScriptStruct__ProceduralMeshComponent__ProcMeshSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProcMeshSection, 0x0000);
		}

		// struct FProcMeshVertex
		TEST_METHOD(ScriptStruct__ProceduralMeshComponent__ProcMeshVertex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProcMeshVertex, 0x0000);
		}

		// struct FProcMeshTangent
		TEST_METHOD(ScriptStruct__ProceduralMeshComponent__ProcMeshTangent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProcMeshTangent, 0x0000);
		}

		// struct FStruct_DifficultyDescription
		TEST_METHOD(UserDefinedStruct__Struct_DifficultyDescription__Struct_DifficultyDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStruct_DifficultyDescription, 0x0000);
		}

		// struct FMovieSceneMediaSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MediaCompositing__MovieSceneMediaSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMediaSectionTemplate, 0x0000);
		}

		// struct FMovieSceneMediaSectionParams
		TEST_METHOD(ScriptStruct__MediaCompositing__MovieSceneMediaSectionParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMediaSectionParams, 0x0000);
		}

		// struct FAxis
		TEST_METHOD(ScriptStruct__AnimationCore__Axis)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAxis, 0x0000);
		}

		// struct FConstraintData
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintData, 0x0000);
		}

		// struct FConstraintDescriptor
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintDescriptor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDescriptor, 0x0000);
		}

		// struct FConstraintDescriptionEx
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintDescriptionEx)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDescriptionEx, 0x0000);
		}

		// struct FFilterOptionPerAxis
		TEST_METHOD(ScriptStruct__AnimationCore__FilterOptionPerAxis)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFilterOptionPerAxis, 0x0000);
		}

		// struct FAimConstraintDescription : public FConstraintDescriptionEx
		TEST_METHOD(ScriptStruct__AnimationCore__AimConstraintDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAimConstraintDescription, 0x0000);
		}

		// struct FTransformConstraintDescription : public FConstraintDescriptionEx
		TEST_METHOD(ScriptStruct__AnimationCore__TransformConstraintDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformConstraintDescription, 0x0000);
		}

		// struct FTransformConstraint
		TEST_METHOD(ScriptStruct__AnimationCore__TransformConstraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformConstraint, 0x0000);
		}

		// struct FConstraintDescription
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDescription, 0x0000);
		}

		// struct FConstraintOffset
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintOffset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintOffset, 0x0000);
		}

		// struct FTransformFilter
		TEST_METHOD(ScriptStruct__AnimationCore__TransformFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformFilter, 0x0000);
		}

		// struct FEulerTransform
		TEST_METHOD(ScriptStruct__AnimationCore__EulerTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEulerTransform, 0x0000);
		}

		// struct FNodeChain
		TEST_METHOD(ScriptStruct__AnimationCore__NodeChain)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeChain, 0x0000);
		}

		// struct FNodeHierarchyWithUserData
		TEST_METHOD(ScriptStruct__AnimationCore__NodeHierarchyWithUserData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeHierarchyWithUserData, 0x0000);
		}

		// struct FNodeHierarchyData
		TEST_METHOD(ScriptStruct__AnimationCore__NodeHierarchyData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeHierarchyData, 0x0000);
		}

		// struct FNodeObject
		TEST_METHOD(ScriptStruct__AnimationCore__NodeObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeObject, 0x0000);
		}

		// struct FFunctionCaller
		TEST_METHOD(ScriptStruct__VariantManagerContent__FunctionCaller)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFunctionCaller, 0x0000);
		}

		// struct FCapturedPropSegment
		TEST_METHOD(ScriptStruct__VariantManagerContent__CapturedPropSegment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCapturedPropSegment, 0x0000);
		}

		// struct FStruct_ActionShield
		TEST_METHOD(UserDefinedStruct__Struct_ActionShield__Struct_ActionShield)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStruct_ActionShield, 0x0000);
		}

		// struct FStatDef_Character
		TEST_METHOD(UserDefinedStruct__StatDef_Character__StatDef_Character)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDef_Character, 0x0000);
		}

		// struct FGeomComponentCacheParameters
		TEST_METHOD(ScriptStruct__GeometryCollectionEngine__GeomComponentCacheParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeomComponentCacheParameters, 0x0000);
		}

		// struct FS_Root_Branch
		TEST_METHOD(UserDefinedStruct__S_Root_Branch__S_Root_Branch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FS_Root_Branch, 0x0000);
		}

		// struct FOverlayItem
		TEST_METHOD(ScriptStruct__Overlay__OverlayItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOverlayItem, 0x0000);
		}

		// struct FPaddingMargin
		TEST_METHOD(UserDefinedStruct__PaddingMargin__PaddingMargin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaddingMargin, 0x0000);
		}

		// struct FTextObject
		TEST_METHOD(UserDefinedStruct__TextObject__TextObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextObject, 0x0000);
		}

		// struct FRoleDefaults
		TEST_METHOD(UserDefinedStruct__RoleDefaults__RoleDefaults)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRoleDefaults, 0x0000);
		}

		// struct FJsonObjectWrapper
		TEST_METHOD(ScriptStruct__JsonUtilities__JsonObjectWrapper)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FJsonObjectWrapper, 0x0000);
		}

		// struct FLoadingScreenTips_STRUCT
		TEST_METHOD(UserDefinedStruct__LoadingScreenTips_STRUCT__LoadingScreenTips_STRUCT)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingScreenTips_STRUCT, 0x0000);
		}

		// struct FSTR_Radial
		TEST_METHOD(UserDefinedStruct__STR_Radial__STR_Radial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSTR_Radial, 0x0000);
		}

		// struct FMultiTargetProjectileEntry
		TEST_METHOD(UserDefinedStruct__MultiTargetProjectileEntry__MultiTargetProjectileEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMultiTargetProjectileEntry, 0x0000);
		}

		// struct FRoleStructSimple
		TEST_METHOD(UserDefinedStruct__RoleStructSimple__RoleStructSimple)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRoleStructSimple, 0x0000);
		}

		// struct FTextObjectSimple
		TEST_METHOD(UserDefinedStruct__TextObjectSimple__TextObjectSimple)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextObjectSimple, 0x0000);
		}

		// struct FBlueprintSessionResult
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__BlueprintSessionResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintSessionResult, 0x0000);
		}

		// struct FPIELoginSettingsInternal
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__PIELoginSettingsInternal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPIELoginSettingsInternal, 0x0000);
		}

		// struct FPartyReservation
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__PartyReservation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPartyReservation, 0x0000);
		}

		// struct FPlayerReservation
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__PlayerReservation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlayerReservation, 0x0000);
		}

		// struct FSubmixEffectDynamicsProcessorSettings
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectDynamicsProcessorSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectDynamicsProcessorSettings, 0x0000);
		}

		// struct FSubmixEffectSubmixEQSettings
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectSubmixEQSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectSubmixEQSettings, 0x0000);
		}

		// struct FSubmixEffectEQBand
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectEQBand)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectEQBand, 0x0000);
		}

		// struct FSubmixEffectReverbSettings
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectReverbSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectReverbSettings, 0x0000);
		}

		// struct FSubmixEffectReverbFastSettings
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectReverbFastSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectReverbFastSettings, 0x0000);
		}

		// struct FNavCollisionBox
		TEST_METHOD(ScriptStruct__NavigationSystem__NavCollisionBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavCollisionBox, 0x0000);
		}

		// struct FNavCollisionCylinder
		TEST_METHOD(ScriptStruct__NavigationSystem__NavCollisionCylinder)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavCollisionCylinder, 0x0000);
		}

		// struct FSupportedAreaData
		TEST_METHOD(ScriptStruct__NavigationSystem__SupportedAreaData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportedAreaData, 0x0000);
		}

		// struct FNavGraphNode
		TEST_METHOD(ScriptStruct__NavigationSystem__NavGraphNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavGraphNode, 0x0000);
		}

		// struct FNavGraphEdge
		TEST_METHOD(ScriptStruct__NavigationSystem__NavGraphEdge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavGraphEdge, 0x0000);
		}

		// struct FNavigationFilterFlags
		TEST_METHOD(ScriptStruct__NavigationSystem__NavigationFilterFlags)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationFilterFlags, 0x0000);
		}

		// struct FNavigationFilterArea
		TEST_METHOD(ScriptStruct__NavigationSystem__NavigationFilterArea)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationFilterArea, 0x0000);
		}

		// struct FEventReply
		TEST_METHOD(ScriptStruct__UMG__EventReply)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventReply, 0x0000);
		}

		// struct FWidgetTransform
		TEST_METHOD(ScriptStruct__UMG__WidgetTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWidgetTransform, 0x0000);
		}

		// struct FPaintContext
		TEST_METHOD(ScriptStruct__UMG__PaintContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaintContext, 0x0000);
		}

		// struct FShapedTextOptions
		TEST_METHOD(ScriptStruct__UMG__ShapedTextOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FShapedTextOptions, 0x0000);
		}

		// struct FAnchorData
		TEST_METHOD(ScriptStruct__UMG__AnchorData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnchorData, 0x0000);
		}

		// struct FDynamicPropertyPath : public FCachedPropertyPath
		TEST_METHOD(ScriptStruct__UMG__DynamicPropertyPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDynamicPropertyPath, 0x0000);
		}

		// struct FMovieScene2DTransformMask
		TEST_METHOD(ScriptStruct__UMG__MovieScene2DTransformMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene2DTransformMask, 0x0000);
		}

		// struct FMovieScene2DTransformSectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__UMG__MovieScene2DTransformSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene2DTransformSectionTemplate, 0x0000);
		}

		// struct FMovieSceneMarginSectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__UMG__MovieSceneMarginSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMarginSectionTemplate, 0x0000);
		}

		// struct FMovieSceneWidgetMaterialSectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__UMG__MovieSceneWidgetMaterialSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneWidgetMaterialSectionTemplate, 0x0000);
		}

		// struct FRichTextStyleRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__UMG__RichTextStyleRow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichTextStyleRow, 0x0000);
		}

		// struct FRichImageRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__UMG__RichImageRow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichImageRow, 0x0000);
		}

		// struct FSlateMeshVertex
		TEST_METHOD(ScriptStruct__UMG__SlateMeshVertex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateMeshVertex, 0x0000);
		}

		// struct FSlateChildSize
		TEST_METHOD(ScriptStruct__UMG__SlateChildSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateChildSize, 0x0000);
		}

		// struct FNamedSlotBinding
		TEST_METHOD(ScriptStruct__UMG__NamedSlotBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedSlotBinding, 0x0000);
		}

		// struct FAnimationEventBinding
		TEST_METHOD(ScriptStruct__UMG__AnimationEventBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationEventBinding, 0x0000);
		}

		// struct FWidgetAnimationBinding
		TEST_METHOD(ScriptStruct__UMG__WidgetAnimationBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWidgetAnimationBinding, 0x0000);
		}

		// struct FBlueprintWidgetAnimationDelegateBinding
		TEST_METHOD(ScriptStruct__UMG__BlueprintWidgetAnimationDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintWidgetAnimationDelegateBinding, 0x0000);
		}

		// struct FDelegateRuntimeBinding
		TEST_METHOD(ScriptStruct__UMG__DelegateRuntimeBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDelegateRuntimeBinding, 0x0000);
		}

		// struct FWidgetComponentInstanceData : public FSceneComponentInstanceData
		TEST_METHOD(ScriptStruct__UMG__WidgetComponentInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWidgetComponentInstanceData, 0x0000);
		}

		// struct FWidgetNavigationData
		TEST_METHOD(ScriptStruct__UMG__WidgetNavigationData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWidgetNavigationData, 0x0000);
		}

		// struct FKey
		TEST_METHOD(ScriptStruct__InputCore__Key)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKey, 0x0000);
		}

		// struct FProceduralLayer
		TEST_METHOD(ScriptStruct__Landscape__ProceduralLayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProceduralLayer, 0x0000);
		}

		// struct FLandscapeProceduralLayerBrush
		TEST_METHOD(ScriptStruct__Landscape__LandscapeProceduralLayerBrush)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeProceduralLayerBrush, 0x0000);
		}

		// struct FLandscapeComponentMaterialOverride
		TEST_METHOD(ScriptStruct__Landscape__LandscapeComponentMaterialOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeComponentMaterialOverride, 0x0000);
		}

		// struct FWeightmapLayerAllocationInfo
		TEST_METHOD(ScriptStruct__Landscape__WeightmapLayerAllocationInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeightmapLayerAllocationInfo, 0x0000);
		}

		// struct FLandscapeEditToolRenderData
		TEST_METHOD(ScriptStruct__Landscape__LandscapeEditToolRenderData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeEditToolRenderData, 0x0000);
		}

		// struct FGizmoSelectData
		TEST_METHOD(ScriptStruct__Landscape__GizmoSelectData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGizmoSelectData, 0x0000);
		}

		// struct FGrassVariety
		TEST_METHOD(ScriptStruct__Landscape__GrassVariety)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGrassVariety, 0x0000);
		}

		// struct FLandscapeInfoLayerSettings
		TEST_METHOD(ScriptStruct__Landscape__LandscapeInfoLayerSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeInfoLayerSettings, 0x0000);
		}

		// struct FProceduralLayerData
		TEST_METHOD(ScriptStruct__Landscape__ProceduralLayerData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProceduralLayerData, 0x0000);
		}

		// struct FRenderDataPerHeightmap
		TEST_METHOD(ScriptStruct__Landscape__RenderDataPerHeightmap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRenderDataPerHeightmap, 0x0000);
		}

		// struct FLandscapeProxyMaterialOverride
		TEST_METHOD(ScriptStruct__Landscape__LandscapeProxyMaterialOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeProxyMaterialOverride, 0x0000);
		}

		// struct FLandscapeImportLayerInfo
		TEST_METHOD(ScriptStruct__Landscape__LandscapeImportLayerInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeImportLayerInfo, 0x0000);
		}

		// struct FLandscapeLayerStruct
		TEST_METHOD(ScriptStruct__Landscape__LandscapeLayerStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeLayerStruct, 0x0000);
		}

		// struct FLandscapeEditorLayerSettings
		TEST_METHOD(ScriptStruct__Landscape__LandscapeEditorLayerSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeEditorLayerSettings, 0x0000);
		}

		// struct FLandscapeWeightmapUsage
		TEST_METHOD(ScriptStruct__Landscape__LandscapeWeightmapUsage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeWeightmapUsage, 0x0000);
		}

		// struct FLandscapeSplineConnection
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineConnection, 0x0000);
		}

		// struct FForeignWorldSplineData
		TEST_METHOD(ScriptStruct__Landscape__ForeignWorldSplineData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForeignWorldSplineData, 0x0000);
		}

		// struct FForeignSplineSegmentData
		TEST_METHOD(ScriptStruct__Landscape__ForeignSplineSegmentData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForeignSplineSegmentData, 0x0000);
		}

		// struct FForeignControlPointData
		TEST_METHOD(ScriptStruct__Landscape__ForeignControlPointData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForeignControlPointData, 0x0000);
		}

		// struct FLandscapeSplineMeshEntry
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineMeshEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineMeshEntry, 0x0000);
		}

		// struct FLandscapeSplineSegmentConnection
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineSegmentConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineSegmentConnection, 0x0000);
		}

		// struct FLandscapeSplineInterpPoint
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineInterpPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineInterpPoint, 0x0000);
		}

		// struct FGrassInput
		TEST_METHOD(ScriptStruct__Landscape__GrassInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGrassInput, 0x0000);
		}

		// struct FLayerBlendInput
		TEST_METHOD(ScriptStruct__Landscape__LayerBlendInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLayerBlendInput, 0x0000);
		}

		// struct FMovieSceneSequencePlaybackSettings
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequencePlaybackSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequencePlaybackSettings, 0x0000);
		}

		// struct FMovieSceneSequenceLoopCount
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceLoopCount)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceLoopCount, 0x0000);
		}

		// struct FMovieSceneEvalTemplateBase
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvalTemplateBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvalTemplateBase, 0x0000);
		}

		// struct FMovieSceneEvalTemplate : public FMovieSceneEvalTemplateBase
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvalTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvalTemplate, 0x0000);
		}

		// struct FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneChannel, 0x0000);
		}

		// struct FMovieSceneObjectBindingID
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneObjectBindingID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneObjectBindingID, 0x0000);
		}

		// struct FMovieSceneSequenceID
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceID, 0x0000);
		}

		// struct FMovieSceneTrackLabels
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackLabels)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackLabels, 0x0000);
		}

		// struct FMovieSceneEditorData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEditorData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEditorData, 0x0000);
		}

		// struct FMovieSceneExpansionState
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneExpansionState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneExpansionState, 0x0000);
		}

		// struct FMovieSceneMarkedFrame
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneMarkedFrame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMarkedFrame, 0x0000);
		}

		// struct FMovieSceneTimecodeSource
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTimecodeSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTimecodeSource, 0x0000);
		}

		// struct FMovieSceneBinding
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBinding, 0x0000);
		}

		// struct FMovieSceneBindingOverrideData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneBindingOverrideData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBindingOverrideData, 0x0000);
		}

		// struct FOptionalMovieSceneBlendType
		TEST_METHOD(ScriptStruct__MovieScene__OptionalMovieSceneBlendType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOptionalMovieSceneBlendType, 0x0000);
		}

		// struct FMovieSceneBoolChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneBoolChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBoolChannel, 0x0000);
		}

		// struct FMovieSceneByteChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneByteChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneByteChannel, 0x0000);
		}

		// struct FMovieSceneKeyHandleMap : public FKeyHandleLookupTable
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneKeyHandleMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneKeyHandleMap, 0x0000);
		}

		// struct FMovieSceneEvalTemplatePtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvalTemplatePtr)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvalTemplatePtr, 0x0000);
		}

		// struct FMovieSceneEmptyStruct
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEmptyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEmptyStruct, 0x0000);
		}

		// struct FMovieSceneEvaluationField
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationField)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationField, 0x0000);
		}

		// struct FMovieSceneEvaluationMetaData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationMetaData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationMetaData, 0x0000);
		}

		// struct FMovieSceneOrderedEvaluationKey
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneOrderedEvaluationKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneOrderedEvaluationKey, 0x0000);
		}

		// struct FMovieSceneEvaluationKey
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationKey, 0x0000);
		}

		// struct FMovieSceneTrackIdentifier
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackIdentifier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackIdentifier, 0x0000);
		}

		// struct FMovieSceneEvaluationGroup
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationGroup, 0x0000);
		}

		// struct FMovieSceneEvaluationFieldTrackPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationFieldTrackPtr)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationFieldTrackPtr, 0x0000);
		}

		// struct FMovieSceneEvaluationFieldSegmentPtr : public FMovieSceneEvaluationFieldTrackPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationFieldSegmentPtr)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationFieldSegmentPtr, 0x0000);
		}

		// struct FMovieSceneSegmentIdentifier
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSegmentIdentifier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSegmentIdentifier, 0x0000);
		}

		// struct FMovieSceneEvaluationGroupLUTIndex
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationGroupLUTIndex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationGroupLUTIndex, 0x0000);
		}

		// struct FMovieSceneFrameRange
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneFrameRange)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFrameRange, 0x0000);
		}

		// struct FMovieSceneEvaluationOperand
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationOperand)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationOperand, 0x0000);
		}

		// struct FMovieSceneEvaluationTemplate
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTemplate, 0x0000);
		}

		// struct FMovieSceneSubSectionFieldData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSubSectionFieldData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSubSectionFieldData, 0x0000);
		}

		// struct FMovieSceneTrackFieldData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackFieldData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackFieldData, 0x0000);
		}

		// struct FMovieSceneTemplateGenerationLedger
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTemplateGenerationLedger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTemplateGenerationLedger, 0x0000);
		}

		// struct FMovieSceneEvaluationTemplateSerialNumber
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTemplateSerialNumber)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTemplateSerialNumber, 0x0000);
		}

		// struct FMovieSceneSequenceHierarchy
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceHierarchy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceHierarchy, 0x0000);
		}

		// struct FMovieSceneSequenceHierarchyNode
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceHierarchyNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceHierarchyNode, 0x0000);
		}

		// struct FMovieSceneSubSequenceData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSubSequenceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSubSequenceData, 0x0000);
		}

		// struct FMovieSceneSequenceTransform
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceTransform, 0x0000);
		}

		// struct FMovieSceneSequenceInstanceDataPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceInstanceDataPtr)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceInstanceDataPtr, 0x0000);
		}

		// struct FMovieSceneEvaluationTrack
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTrack, 0x0000);
		}

		// struct FMovieSceneTrackImplementationPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackImplementationPtr)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackImplementationPtr, 0x0000);
		}

		// struct FSectionEvaluationDataTree
		TEST_METHOD(ScriptStruct__MovieScene__SectionEvaluationDataTree)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSectionEvaluationDataTree, 0x0000);
		}

		// struct FMovieSceneEvaluationTrackSegments
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTrackSegments)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTrackSegments, 0x0000);
		}

		// struct FMovieSceneSegment
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSegment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSegment, 0x0000);
		}

		// struct FMovieSceneSubSectionData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSubSectionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSubSectionData, 0x0000);
		}

		// struct FMovieSceneRootEvaluationTemplateInstance
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneRootEvaluationTemplateInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneRootEvaluationTemplateInstance, 0x0000);
		}

		// struct FMovieSceneFloatChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneFloatChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFloatChannel, 0x0000);
		}

		// struct FMovieSceneFloatValue
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneFloatValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFloatValue, 0x0000);
		}

		// struct FMovieSceneTangentData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTangentData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTangentData, 0x0000);
		}

		// struct FMovieSceneIntegerChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneIntegerChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneIntegerChannel, 0x0000);
		}

		// struct FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneKeyStruct, 0x0000);
		}

		// struct FMovieSceneKeyTimeStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneKeyTimeStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneKeyTimeStruct, 0x0000);
		}

		// struct FGeneratedMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieScene__GeneratedMovieSceneKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeneratedMovieSceneKeyStruct, 0x0000);
		}

		// struct FMovieSceneObjectPathChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneObjectPathChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneObjectPathChannel, 0x0000);
		}

		// struct FMovieSceneObjectPathChannelKeyValue
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneObjectPathChannelKeyValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneObjectPathChannelKeyValue, 0x0000);
		}

		// struct FMovieScenePossessable
		TEST_METHOD(ScriptStruct__MovieScene__MovieScenePossessable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScenePossessable, 0x0000);
		}

		// struct FMovieScenePropertySectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieScene__MovieScenePropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScenePropertySectionTemplate, 0x0000);
		}

		// struct FMovieScenePropertySectionData
		TEST_METHOD(ScriptStruct__MovieScene__MovieScenePropertySectionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScenePropertySectionData, 0x0000);
		}

		// struct FMovieSceneEasingSettings
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEasingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEasingSettings, 0x0000);
		}

		// struct FMovieSceneSectionEvalOptions
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSectionEvalOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSectionEvalOptions, 0x0000);
		}

		// struct FMovieSceneSectionParameters
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSectionParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSectionParameters, 0x0000);
		}

		// struct FSectionEvaluationData
		TEST_METHOD(ScriptStruct__MovieScene__SectionEvaluationData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSectionEvaluationData, 0x0000);
		}

		// struct FMovieSceneSequenceInstanceData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceInstanceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceInstanceData, 0x0000);
		}

		// struct FMovieSceneSequenceReplProperties
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceReplProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceReplProperties, 0x0000);
		}

		// struct FMovieSceneSpawnable
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSpawnable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSpawnable, 0x0000);
		}

		// struct FTestMovieSceneEvalTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieScene__TestMovieSceneEvalTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTestMovieSceneEvalTemplate, 0x0000);
		}

		// struct FMovieSceneTrackDisplayOptions
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackDisplayOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackDisplayOptions, 0x0000);
		}

		// struct FMovieSceneTrackEvalOptions
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackEvalOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackEvalOptions, 0x0000);
		}

		// struct FMovieSceneTrackImplementation : public FMovieSceneEvalTemplateBase
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackImplementation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackImplementation, 0x0000);
		}

		// struct FGameplayTagQuery
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagQuery)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagQuery, 0x0000);
		}

		// struct FGameplayTag
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTag)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTag, 0x0000);
		}

		// struct FGameplayTagCreationWidgetHelper
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagCreationWidgetHelper)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagCreationWidgetHelper, 0x0000);
		}

		// struct FGameplayTagReferenceHelper
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagReferenceHelper)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagReferenceHelper, 0x0000);
		}

		// struct FGameplayTagContainer
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagContainer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagContainer, 0x0000);
		}

		// struct FGameplayTagNode
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagNode, 0x0000);
		}

		// struct FGameplayTagSource
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagSource, 0x0000);
		}

		// struct FGameplayTagTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagTableRow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagTableRow, 0x0000);
		}

		// struct FRestrictedGameplayTagTableRow : public FGameplayTagTableRow
		TEST_METHOD(ScriptStruct__GameplayTags__RestrictedGameplayTagTableRow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRestrictedGameplayTagTableRow, 0x0000);
		}

		// struct FRestrictedConfigInfo
		TEST_METHOD(ScriptStruct__GameplayTags__RestrictedConfigInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRestrictedConfigInfo, 0x0000);
		}

		// struct FGameplayTagCategoryRemap
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagCategoryRemap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagCategoryRemap, 0x0000);
		}

		// struct FGameplayTagRedirect
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagRedirect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagRedirect, 0x0000);
		}

		// struct FPersistentReference
		TEST_METHOD(ScriptStruct__GunfireSaveSystem__PersistentReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPersistentReference, 0x0000);
		}

		// struct FPersistenceKey
		TEST_METHOD(ScriptStruct__GunfireSaveSystem__PersistenceKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPersistenceKey, 0x0000);
		}

		// struct FPersistenceBlob
		TEST_METHOD(ScriptStruct__GunfireSaveSystem__PersistenceBlob)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPersistenceBlob, 0x0000);
		}

		// struct FSaveGameAchievementProgress
		TEST_METHOD(ScriptStruct__GunfireSaveSystem__SaveGameAchievementProgress)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSaveGameAchievementProgress, 0x0000);
		}

		// struct FSaveGameUserSetting
		TEST_METHOD(ScriptStruct__GunfireSaveSystem__SaveGameUserSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSaveGameUserSetting, 0x0000);
		}

		// struct FDatasmithCameraLookatTrackingSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithCameraLookatTrackingSettingsTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithCameraLookatTrackingSettingsTemplate, 0x0000);
		}

		// struct FDatasmithPostProcessSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithPostProcessSettingsTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithPostProcessSettingsTemplate, 0x0000);
		}

		// struct FDatasmithCameraFocusSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithCameraFocusSettingsTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithCameraFocusSettingsTemplate, 0x0000);
		}

		// struct FDatasmithCameraLensSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithCameraLensSettingsTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithCameraLensSettingsTemplate, 0x0000);
		}

		// struct FDatasmithCameraFilmbackSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithCameraFilmbackSettingsTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithCameraFilmbackSettingsTemplate, 0x0000);
		}

		// struct FDatasmithTessellationOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithTessellationOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithTessellationOptions, 0x0000);
		}

		// struct FDatasmithImportBaseOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithImportBaseOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithImportBaseOptions, 0x0000);
		}

		// struct FDatasmithStaticMeshImportOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithStaticMeshImportOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithStaticMeshImportOptions, 0x0000);
		}

		// struct FDatasmithAssetImportOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithAssetImportOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithAssetImportOptions, 0x0000);
		}

		// struct FDatasmithReimportOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithReimportOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithReimportOptions, 0x0000);
		}

		// struct FDatasmithStaticParameterSetTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithStaticParameterSetTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithStaticParameterSetTemplate, 0x0000);
		}

		// struct FDatasmithMeshSectionInfoMapTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithMeshSectionInfoMapTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithMeshSectionInfoMapTemplate, 0x0000);
		}

		// struct FDatasmithMeshSectionInfoTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithMeshSectionInfoTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithMeshSectionInfoTemplate, 0x0000);
		}

		// struct FDatasmithStaticMaterialTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithStaticMaterialTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithStaticMaterialTemplate, 0x0000);
		}

		// struct FDatasmithMeshBuildSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithMeshBuildSettingsTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithMeshBuildSettingsTemplate, 0x0000);
		}

		// struct FActorSequenceObjectReferenceMap
		TEST_METHOD(ScriptStruct__ActorSequence__ActorSequenceObjectReferenceMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorSequenceObjectReferenceMap, 0x0000);
		}

		// struct FActorSequenceObjectReferences
		TEST_METHOD(ScriptStruct__ActorSequence__ActorSequenceObjectReferences)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorSequenceObjectReferences, 0x0000);
		}

		// struct FActorSequenceObjectReference
		TEST_METHOD(ScriptStruct__ActorSequence__ActorSequenceObjectReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorSequenceObjectReference, 0x0000);
		}

		// struct FMediaPlayerOptions
		TEST_METHOD(ScriptStruct__MediaUtils__MediaPlayerOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMediaPlayerOptions, 0x0000);
		}

		// struct FMediaPlayerTrackOptions
		TEST_METHOD(ScriptStruct__MediaUtils__MediaPlayerTrackOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMediaPlayerTrackOptions, 0x0000);
		}

		// struct FTickAnimationSharingFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__AnimationSharing__TickAnimationSharingFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTickAnimationSharingFunction, 0x0000);
		}

		// struct FAnimationSharingScalability
		TEST_METHOD(ScriptStruct__AnimationSharing__AnimationSharingScalability)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationSharingScalability, 0x0000);
		}

		// struct FPerSkeletonAnimationSharingSetup
		TEST_METHOD(ScriptStruct__AnimationSharing__PerSkeletonAnimationSharingSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerSkeletonAnimationSharingSetup, 0x0000);
		}

		// struct FAnimationStateEntry
		TEST_METHOD(ScriptStruct__AnimationSharing__AnimationStateEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationStateEntry, 0x0000);
		}

		// struct FAnimationSetup
		TEST_METHOD(ScriptStruct__AnimationSharing__AnimationSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationSetup, 0x0000);
		}

		// struct FTrackRenderData
		TEST_METHOD(ScriptStruct__GeometryCache__TrackRenderData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTrackRenderData, 0x0000);
		}

		// struct FGeometryCacheMeshData
		TEST_METHOD(ScriptStruct__GeometryCache__GeometryCacheMeshData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometryCacheMeshData, 0x0000);
		}

		// struct FGeometryCacheVertexInfo
		TEST_METHOD(ScriptStruct__GeometryCache__GeometryCacheVertexInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometryCacheVertexInfo, 0x0000);
		}

		// struct FGeometryCacheMeshBatchInfo
		TEST_METHOD(ScriptStruct__GeometryCache__GeometryCacheMeshBatchInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometryCacheMeshBatchInfo, 0x0000);
		}

		// struct FMovieSceneGeometryCacheParams
		TEST_METHOD(ScriptStruct__GeometryCacheTracks__MovieSceneGeometryCacheParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneGeometryCacheParams, 0x0000);
		}

		// struct FMovieSceneGeometryCacheSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__GeometryCacheTracks__MovieSceneGeometryCacheSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneGeometryCacheSectionTemplate, 0x0000);
		}

		// struct FMovieSceneGeometryCacheSectionTemplateParameters : public FMovieSceneGeometryCacheParams
		TEST_METHOD(ScriptStruct__GeometryCacheTracks__MovieSceneGeometryCacheSectionTemplateParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneGeometryCacheSectionTemplateParameters, 0x0000);
		}

		// struct FAnimNode_SkeletalControlBase : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SkeletalControlBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SkeletalControlBase, 0x0000);
		}

		// struct FAnimNode_BlendSpacePlayer : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendSpacePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendSpacePlayer, 0x0000);
		}

		// struct FAnimNode_BlendListBase : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListBase, 0x0000);
		}

		// struct FAnimNode_AimOffsetLookAt : public FAnimNode_BlendSpacePlayer
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_AimOffsetLookAt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_AimOffsetLookAt, 0x0000);
		}

		// struct FAnimNode_AnimDynamics : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_AnimDynamics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_AnimDynamics, 0x0000);
		}

		// struct FAnimPhysPlanarLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimPhysPlanarLimit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimPhysPlanarLimit, 0x0000);
		}

		// struct FAnimPhysSphericalLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimPhysSphericalLimit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimPhysSphericalLimit, 0x0000);
		}

		// struct FAnimPhysConstraintSetup
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimPhysConstraintSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimPhysConstraintSetup, 0x0000);
		}

		// struct FAnimNode_ApplyAdditive : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ApplyAdditive)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ApplyAdditive, 0x0000);
		}

		// struct FAnimNode_ApplyLimits : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ApplyLimits)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ApplyLimits, 0x0000);
		}

		// struct FAngularRangeLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AngularRangeLimit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAngularRangeLimit, 0x0000);
		}

		// struct FAnimNode_BlendBoneByChannel : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendBoneByChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendBoneByChannel, 0x0000);
		}

		// struct FBlendBoneByChannelEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__BlendBoneByChannelEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendBoneByChannelEntry, 0x0000);
		}

		// struct FAnimNode_BlendListByBool : public FAnimNode_BlendListBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListByBool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListByBool, 0x0000);
		}

		// struct FAnimNode_BlendListByEnum : public FAnimNode_BlendListBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListByEnum)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListByEnum, 0x0000);
		}

		// struct FAnimNode_BlendListByInt : public FAnimNode_BlendListBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListByInt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListByInt, 0x0000);
		}

		// struct FAnimNode_BlendSpaceEvaluator : public FAnimNode_BlendSpacePlayer
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendSpaceEvaluator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendSpaceEvaluator, 0x0000);
		}

		// struct FAnimNode_BoneDrivenController : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BoneDrivenController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BoneDrivenController, 0x0000);
		}

		// struct FAnimNode_CCDIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CCDIK)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CCDIK, 0x0000);
		}

		// struct FBoneSocketTarget
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__BoneSocketTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneSocketTarget, 0x0000);
		}

		// struct FSocketReference
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__SocketReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSocketReference, 0x0000);
		}

		// struct FAnimNode_Constraint : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Constraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Constraint, 0x0000);
		}

		// struct FConstraint
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__Constraint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraint, 0x0000);
		}

		// struct FAnimNode_CopyBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CopyBone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CopyBone, 0x0000);
		}

		// struct FAnimNode_CopyBoneDelta : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CopyBoneDelta)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CopyBoneDelta, 0x0000);
		}

		// struct FAnimNode_CopyPoseFromMesh : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CopyPoseFromMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CopyPoseFromMesh, 0x0000);
		}

		// struct FAnimNode_CurveSource : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CurveSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CurveSource, 0x0000);
		}

		// struct FAnimNode_Fabrik : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Fabrik)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Fabrik, 0x0000);
		}

		// struct FAnimNode_HandIKRetargeting : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_HandIKRetargeting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_HandIKRetargeting, 0x0000);
		}

		// struct FAnimNode_LayeredBoneBlend : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_LayeredBoneBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_LayeredBoneBlend, 0x0000);
		}

		// struct FAnimNode_LegIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_LegIK)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_LegIK, 0x0000);
		}

		// struct FAnimLegIKDefinition
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimLegIKDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimLegIKDefinition, 0x0000);
		}

		// struct FAnimLegIKData
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimLegIKData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimLegIKData, 0x0000);
		}

		// struct FIKChain
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__IKChain)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIKChain, 0x0000);
		}

		// struct FIKChainLink
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__IKChainLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIKChainLink, 0x0000);
		}

		// struct FAnimNode_LookAt : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_LookAt)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_LookAt, 0x0000);
		}

		// struct FAnimNode_MakeDynamicAdditive : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_MakeDynamicAdditive)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_MakeDynamicAdditive, 0x0000);
		}

		// struct FAnimNode_ModifyBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ModifyBone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ModifyBone, 0x0000);
		}

		// struct FAnimNode_ModifyCurve : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ModifyCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ModifyCurve, 0x0000);
		}

		// struct FAnimNode_MultiWayBlend : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_MultiWayBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_MultiWayBlend, 0x0000);
		}

		// struct FAnimNode_ObserveBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ObserveBone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ObserveBone, 0x0000);
		}

		// struct FAnimNode_PoseHandler : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseHandler, 0x0000);
		}

		// struct FAnimNode_PoseBlendNode : public FAnimNode_PoseHandler
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseBlendNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseBlendNode, 0x0000);
		}

		// struct FAnimNode_PoseByName : public FAnimNode_PoseHandler
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseByName)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseByName, 0x0000);
		}

		// struct FAnimNode_PoseDriver : public FAnimNode_PoseHandler
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseDriver, 0x0000);
		}

		// struct FRBFParams
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RBFParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRBFParams, 0x0000);
		}

		// struct FPoseDriverTarget
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__PoseDriverTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseDriverTarget, 0x0000);
		}

		// struct FPoseDriverTransform
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__PoseDriverTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseDriverTransform, 0x0000);
		}

		// struct FAnimNode_PoseSnapshot : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseSnapshot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseSnapshot, 0x0000);
		}

		// struct FAnimNode_RandomPlayer : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RandomPlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RandomPlayer, 0x0000);
		}

		// struct FRandomPlayerSequenceEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RandomPlayerSequenceEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRandomPlayerSequenceEntry, 0x0000);
		}

		// struct FAnimNode_MeshSpaceRefPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_MeshSpaceRefPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_MeshSpaceRefPose, 0x0000);
		}

		// struct FAnimNode_RefPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RefPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RefPose, 0x0000);
		}

		// struct FAnimNode_ResetRoot : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ResetRoot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ResetRoot, 0x0000);
		}

		// struct FAnimNode_RigidBody : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RigidBody)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RigidBody, 0x0000);
		}

		// struct FAnimNode_Root : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Root)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Root, 0x0000);
		}

		// struct FAnimNode_RotateRootBone : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RotateRootBone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RotateRootBone, 0x0000);
		}

		// struct FAnimNode_RotationMultiplier : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RotationMultiplier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RotationMultiplier, 0x0000);
		}

		// struct FAnimNode_RotationOffsetBlendSpace : public FAnimNode_BlendSpacePlayer
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RotationOffsetBlendSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RotationOffsetBlendSpace, 0x0000);
		}

		// struct FAnimNode_ScaleChainLength : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ScaleChainLength)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ScaleChainLength, 0x0000);
		}

		// struct FAnimNode_SequenceEvaluator : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SequenceEvaluator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SequenceEvaluator, 0x0000);
		}

		// struct FAnimNode_Slot : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Slot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Slot, 0x0000);
		}

		// struct FAnimNode_SplineIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SplineIK)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SplineIK, 0x0000);
		}

		// struct FSplineIKCachedBoneData
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__SplineIKCachedBoneData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineIKCachedBoneData, 0x0000);
		}

		// struct FAnimNode_SpringBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SpringBone)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SpringBone, 0x0000);
		}

		// struct FAnimNode_StateResult : public FAnimNode_Root
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_StateResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_StateResult, 0x0000);
		}

		// struct FAnimNode_Trail : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Trail)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Trail, 0x0000);
		}

		// struct FRotationLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RotationLimit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRotationLimit, 0x0000);
		}

		// struct FAnimNode_TwistCorrectiveNode : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_TwistCorrectiveNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TwistCorrectiveNode, 0x0000);
		}

		// struct FReferenceBoneFrame
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__ReferenceBoneFrame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceBoneFrame, 0x0000);
		}

		// struct FAnimNode_TwoBoneIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_TwoBoneIK)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TwoBoneIK, 0x0000);
		}

		// struct FAnimNode_TwoWayBlend : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_TwoWayBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TwoWayBlend, 0x0000);
		}

		// struct FAnimSequencerInstanceProxy : public FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimSequencerInstanceProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSequencerInstanceProxy, 0x0000);
		}

		// struct FRBFEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RBFEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRBFEntry, 0x0000);
		}

		// struct FRBFTarget : public FRBFEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RBFTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRBFTarget, 0x0000);
		}

		// struct FStruct_Quotes
		TEST_METHOD(UserDefinedStruct__Struct_Quotes__Struct_Quotes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStruct_Quotes, 0x0000);
		}

		// struct FUdpMockMessage
		TEST_METHOD(ScriptStruct__UdpMessaging__UdpMockMessage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUdpMockMessage, 0x0000);
		}

		// struct FTutorialPage
		TEST_METHOD(UserDefinedStruct__TutorialPage__TutorialPage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTutorialPage, 0x0000);
		}

		// struct FCreditsGeneralSettings
		TEST_METHOD(UserDefinedStruct__CreditsGeneralSettings__CreditsGeneralSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCreditsGeneralSettings, 0x0000);
		}

		// struct FMRMeshConfiguration
		TEST_METHOD(ScriptStruct__MRMesh__MRMeshConfiguration)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMRMeshConfiguration, 0x0000);
		}

		// struct FGameplayResourceSet
		TEST_METHOD(ScriptStruct__GameplayTasks__GameplayResourceSet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayResourceSet, 0x0000);
		}

		// struct FCustomMeshTriangle
		TEST_METHOD(ScriptStruct__CustomMeshComponent__CustomMeshTriangle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomMeshTriangle, 0x0000);
		}

		// struct FStatDef_Scaling
		TEST_METHOD(UserDefinedStruct__StatDef_Scaling__StatDef_Scaling)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDef_Scaling, 0x0000);
		}

		// struct FPlatformRuntimeAudioCompressionOverrides
		TEST_METHOD(ScriptStruct__AudioPlatformConfiguration__PlatformRuntimeAudioCompressionOverrides)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlatformRuntimeAudioCompressionOverrides, 0x0000);
		}

		// struct FS_BranchOptions
		TEST_METHOD(UserDefinedStruct__S_BranchOptions__S_BranchOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FS_BranchOptions, 0x0000);
		}

		// struct FImageProperties
		TEST_METHOD(UserDefinedStruct__ImageProperties__ImageProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImageProperties, 0x0000);
		}

		// struct FHoudiniToolDirectory
		TEST_METHOD(ScriptStruct__HoudiniEngineRuntime__HoudiniToolDirectory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHoudiniToolDirectory, 0x0000);
		}

		// struct FPrefabricatorAssetCollectionItem
		TEST_METHOD(ScriptStruct__PrefabricatorRuntime__PrefabricatorAssetCollectionItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrefabricatorAssetCollectionItem, 0x0000);
		}

		// struct FPrefabricatorActorData
		TEST_METHOD(ScriptStruct__PrefabricatorRuntime__PrefabricatorActorData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrefabricatorActorData, 0x0000);
		}

		// struct FPrefabricatorComponentData
		TEST_METHOD(ScriptStruct__PrefabricatorRuntime__PrefabricatorComponentData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrefabricatorComponentData, 0x0000);
		}

		// struct FGfeSDKCreateResponse
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKCreateResponse)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKCreateResponse, 0x0000);
		}

		// struct FGfeSDKHighlightSummaryParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightSummaryParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightSummaryParams, 0x0000);
		}

		// struct FGfeSDKHighlightGroupView
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightGroupView)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightGroupView, 0x0000);
		}

		// struct FGfeSDKHighlightVideoParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightVideoParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightVideoParams, 0x0000);
		}

		// struct FGfeSDKHighlightScreenshotParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightScreenshotParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightScreenshotParams, 0x0000);
		}

		// struct FGfeSDKHighlightCloseGroupParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightCloseGroupParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightCloseGroupParams, 0x0000);
		}

		// struct FGfeSDKHighlightOpenGroupParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightOpenGroupParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightOpenGroupParams, 0x0000);
		}

		// struct FGfeSDKPermissionsChangedData
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKPermissionsChangedData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKPermissionsChangedData, 0x0000);
		}

		// struct FGfeSDKRequestPermissionsParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKRequestPermissionsParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKRequestPermissionsParams, 0x0000);
		}

		// struct FGfeSDKHighlightConfigParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightConfigParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightConfigParams, 0x0000);
		}

		// struct FGfeSDKHighlightDefinition
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKHighlightDefinition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKHighlightDefinition, 0x0000);
		}

		// struct FGfeSDKCreateInputParams
		TEST_METHOD(ScriptStruct__NVIDIAGfeSDK__GfeSDKCreateInputParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGfeSDKCreateInputParams, 0x0000);
		}

		// struct FChromaSDKColorFrame2D
		TEST_METHOD(ScriptStruct__ChromaSDKPlugin__ChromaSDKColorFrame2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChromaSDKColorFrame2D, 0x0000);
		}

		// struct FChromaSDKColors
		TEST_METHOD(ScriptStruct__ChromaSDKPlugin__ChromaSDKColors)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChromaSDKColors, 0x0000);
		}

		// struct FChromaSDKColorFrame1D
		TEST_METHOD(ScriptStruct__ChromaSDKPlugin__ChromaSDKColorFrame1D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChromaSDKColorFrame1D, 0x0000);
		}

		// struct FChromaSDKEffectResult
		TEST_METHOD(ScriptStruct__ChromaSDKPlugin__ChromaSDKEffectResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChromaSDKEffectResult, 0x0000);
		}

		// struct FChromaSDKGuid
		TEST_METHOD(ScriptStruct__ChromaSDKPlugin__ChromaSDKGuid)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChromaSDKGuid, 0x0000);
		}

		// struct FAppleImageUtilsImageConversionResult
		TEST_METHOD(ScriptStruct__AppleImageUtils__AppleImageUtilsImageConversionResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAppleImageUtilsImageConversionResult, 0x0000);
		}

		// struct FFaceDetectionResult
		TEST_METHOD(ScriptStruct__AppleVision__FaceDetectionResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFaceDetectionResult, 0x0000);
		}

		// struct FDetectedFeature
		TEST_METHOD(ScriptStruct__AppleVision__DetectedFeature)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDetectedFeature, 0x0000);
		}

		// struct FDetectedFeatureRegion : public FDetectedFeature
		TEST_METHOD(ScriptStruct__AppleVision__DetectedFeatureRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDetectedFeatureRegion, 0x0000);
		}

		// struct FDetectedFace : public FDetectedFeatureRegion
		TEST_METHOD(ScriptStruct__AppleVision__DetectedFace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDetectedFace, 0x0000);
		}

		// struct FDetectedFaceFeatureRegion : public FDetectedFeatureRegion
		TEST_METHOD(ScriptStruct__AppleVision__DetectedFaceFeatureRegion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDetectedFaceFeatureRegion, 0x0000);
		}

		// struct FDetectedFeature2D : public FDetectedFeature
		TEST_METHOD(ScriptStruct__AppleVision__DetectedFeature2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDetectedFeature2D, 0x0000);
		}

		// struct FDetectedFaceFeature2D : public FDetectedFeature2D
		TEST_METHOD(ScriptStruct__AppleVision__DetectedFaceFeature2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDetectedFaceFeature2D, 0x0000);
		}

		// struct FAdaptorPolygon2Group
		TEST_METHOD(ScriptStruct__EditableMesh__AdaptorPolygon2Group)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAdaptorPolygon2Group, 0x0000);
		}

		// struct FAdaptorPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__AdaptorPolygon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAdaptorPolygon, 0x0000);
		}

		// struct FAdaptorTriangleID : public FElementID
		TEST_METHOD(ScriptStruct__EditableMesh__AdaptorTriangleID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAdaptorTriangleID, 0x0000);
		}

		// struct FPolygonGroupForPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonGroupForPolygon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonGroupForPolygon, 0x0000);
		}

		// struct FPolygonGroupToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonGroupToCreate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonGroupToCreate, 0x0000);
		}

		// struct FMeshElementAttributeList
		TEST_METHOD(ScriptStruct__EditableMesh__MeshElementAttributeList)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshElementAttributeList, 0x0000);
		}

		// struct FMeshElementAttributeData
		TEST_METHOD(ScriptStruct__EditableMesh__MeshElementAttributeData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshElementAttributeData, 0x0000);
		}

		// struct FMeshElementAttributeValue
		TEST_METHOD(ScriptStruct__EditableMesh__MeshElementAttributeValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshElementAttributeValue, 0x0000);
		}

		// struct FVertexToMove
		TEST_METHOD(ScriptStruct__EditableMesh__VertexToMove)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexToMove, 0x0000);
		}

		// struct FVerticesForEdge
		TEST_METHOD(ScriptStruct__EditableMesh__VerticesForEdge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVerticesForEdge, 0x0000);
		}

		// struct FChangeVertexInstancesForPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__ChangeVertexInstancesForPolygon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChangeVertexInstancesForPolygon, 0x0000);
		}

		// struct FVertexInstancesForPolygonHole
		TEST_METHOD(ScriptStruct__EditableMesh__VertexInstancesForPolygonHole)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexInstancesForPolygonHole, 0x0000);
		}

		// struct FVertexIndexAndInstanceID
		TEST_METHOD(ScriptStruct__EditableMesh__VertexIndexAndInstanceID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexIndexAndInstanceID, 0x0000);
		}

		// struct FVertexAttributesForPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__VertexAttributesForPolygon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexAttributesForPolygon, 0x0000);
		}

		// struct FVertexAttributesForPolygonHole
		TEST_METHOD(ScriptStruct__EditableMesh__VertexAttributesForPolygonHole)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexAttributesForPolygonHole, 0x0000);
		}

		// struct FAttributesForEdge
		TEST_METHOD(ScriptStruct__EditableMesh__AttributesForEdge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttributesForEdge, 0x0000);
		}

		// struct FAttributesForVertexInstance
		TEST_METHOD(ScriptStruct__EditableMesh__AttributesForVertexInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttributesForVertexInstance, 0x0000);
		}

		// struct FAttributesForVertex
		TEST_METHOD(ScriptStruct__EditableMesh__AttributesForVertex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttributesForVertex, 0x0000);
		}

		// struct FPolygonToSplit
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonToSplit)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonToSplit, 0x0000);
		}

		// struct FVertexPair
		TEST_METHOD(ScriptStruct__EditableMesh__VertexPair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexPair, 0x0000);
		}

		// struct FPolygonToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonToCreate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonToCreate, 0x0000);
		}

		// struct FVertexAndAttributes
		TEST_METHOD(ScriptStruct__EditableMesh__VertexAndAttributes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexAndAttributes, 0x0000);
		}

		// struct FEdgeToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__EdgeToCreate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdgeToCreate, 0x0000);
		}

		// struct FVertexInstanceToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__VertexInstanceToCreate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexInstanceToCreate, 0x0000);
		}

		// struct FVertexToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__VertexToCreate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexToCreate, 0x0000);
		}

		// struct FSubdivisionLimitData
		TEST_METHOD(ScriptStruct__EditableMesh__SubdivisionLimitData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdivisionLimitData, 0x0000);
		}

		// struct FSubdividedWireEdge
		TEST_METHOD(ScriptStruct__EditableMesh__SubdividedWireEdge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdividedWireEdge, 0x0000);
		}

		// struct FSubdivisionLimitSection
		TEST_METHOD(ScriptStruct__EditableMesh__SubdivisionLimitSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdivisionLimitSection, 0x0000);
		}

		// struct FSubdividedQuad
		TEST_METHOD(ScriptStruct__EditableMesh__SubdividedQuad)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdividedQuad, 0x0000);
		}

		// struct FSubdividedQuadVertex
		TEST_METHOD(ScriptStruct__EditableMesh__SubdividedQuadVertex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdividedQuadVertex, 0x0000);
		}

		// struct FRenderingPolygonGroup
		TEST_METHOD(ScriptStruct__EditableMesh__RenderingPolygonGroup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRenderingPolygonGroup, 0x0000);
		}

		// struct FRenderingPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__RenderingPolygon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRenderingPolygon, 0x0000);
		}

		// struct FTriangleID : public FElementID
		TEST_METHOD(ScriptStruct__EditableMesh__TriangleID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTriangleID, 0x0000);
		}

		// struct FLocationServicesData
		TEST_METHOD(ScriptStruct__LocationServicesBPLibrary__LocationServicesData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLocationServicesData, 0x0000);
		}

		// struct FChromaAnims_STRUCT
		TEST_METHOD(UserDefinedStruct__ChromaAnims_STRUCT__ChromaAnims_STRUCT)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChromaAnims_STRUCT, 0x0000);
		}

		// struct FMovieScene3DAttachSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DAttachSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DAttachSectionTemplate, 0x0000);
		}

		// struct FMovieScene3DPathSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DPathSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DPathSectionTemplate, 0x0000);
		}

		// struct FMovieSceneTransformMask
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneTransformMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTransformMask, 0x0000);
		}

		// struct FMovieScene3DTransformKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DTransformKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DTransformKeyStruct, 0x0000);
		}

		// struct FMovieScene3DScaleKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DScaleKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DScaleKeyStruct, 0x0000);
		}

		// struct FMovieScene3DRotationKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DRotationKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DRotationKeyStruct, 0x0000);
		}

		// struct FMovieScene3DLocationKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DLocationKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DLocationKeyStruct, 0x0000);
		}

		// struct FMovieSceneComponentTransformSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneComponentTransformSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneComponentTransformSectionTemplate, 0x0000);
		}

		// struct FMovieScene3DTransformTemplateData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DTransformTemplateData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DTransformTemplateData, 0x0000);
		}

		// struct FMovieSceneActorReferenceData : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneActorReferenceData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneActorReferenceData, 0x0000);
		}

		// struct FMovieSceneActorReferenceKey
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneActorReferenceKey)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneActorReferenceKey, 0x0000);
		}

		// struct FMovieSceneActorReferenceSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneActorReferenceSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneActorReferenceSectionTemplate, 0x0000);
		}

		// struct FMovieSceneAudioSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneAudioSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAudioSectionTemplate, 0x0000);
		}

		// struct FMovieSceneAudioSectionTemplateData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneAudioSectionTemplateData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAudioSectionTemplateData, 0x0000);
		}

		// struct FMovieSceneCameraAnimSectionData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraAnimSectionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraAnimSectionData, 0x0000);
		}

		// struct FMovieSceneAdditiveCameraAnimationTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneAdditiveCameraAnimationTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAdditiveCameraAnimationTemplate, 0x0000);
		}

		// struct FMovieSceneCameraShakeSectionTemplate : public FMovieSceneAdditiveCameraAnimationTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraShakeSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraShakeSectionTemplate, 0x0000);
		}

		// struct FMovieSceneCameraShakeSectionData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraShakeSectionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraShakeSectionData, 0x0000);
		}

		// struct FMovieSceneCameraAnimSectionTemplate : public FMovieSceneAdditiveCameraAnimationTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraAnimSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraAnimSectionTemplate, 0x0000);
		}

		// struct FMovieSceneCameraCutSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraCutSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraCutSectionTemplate, 0x0000);
		}

		// struct FMovieSceneColorKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneColorKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneColorKeyStruct, 0x0000);
		}

		// struct FMovieSceneColorSectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneColorSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneColorSectionTemplate, 0x0000);
		}

		// struct FMovieSceneEvent
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvent, 0x0000);
		}

		// struct FMovieSceneEventChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventChannel, 0x0000);
		}

		// struct FMovieSceneEventSectionData : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventSectionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventSectionData, 0x0000);
		}

		// struct FEventPayload
		TEST_METHOD(ScriptStruct__MovieSceneTracks__EventPayload)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventPayload, 0x0000);
		}

		// struct FMovieSceneEventParameters
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventParameters, 0x0000);
		}

		// struct FMovieSceneEventTemplateBase : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventTemplateBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventTemplateBase, 0x0000);
		}

		// struct FMovieSceneEventRepeaterTemplate : public FMovieSceneEventTemplateBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventRepeaterTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventRepeaterTemplate, 0x0000);
		}

		// struct FMovieSceneEventTriggerTemplate : public FMovieSceneEventTemplateBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventTriggerTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventTriggerTemplate, 0x0000);
		}

		// struct FMovieSceneEventSectionTemplate : public FMovieSceneEventTemplateBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventSectionTemplate, 0x0000);
		}

		// struct FMovieSceneFadeSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneFadeSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFadeSectionTemplate, 0x0000);
		}

		// struct FMovieSceneLevelVisibilitySectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneLevelVisibilitySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneLevelVisibilitySectionTemplate, 0x0000);
		}

		// struct FMovieSceneParameterSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParameterSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParameterSectionTemplate, 0x0000);
		}

		// struct FColorParameterNameAndCurves
		TEST_METHOD(ScriptStruct__MovieSceneTracks__ColorParameterNameAndCurves)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorParameterNameAndCurves, 0x0000);
		}

		// struct FVectorParameterNameAndCurves
		TEST_METHOD(ScriptStruct__MovieSceneTracks__VectorParameterNameAndCurves)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorParameterNameAndCurves, 0x0000);
		}

		// struct FScalarParameterNameAndCurve
		TEST_METHOD(ScriptStruct__MovieSceneTracks__ScalarParameterNameAndCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarParameterNameAndCurve, 0x0000);
		}

		// struct FMovieSceneMaterialParameterCollectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneMaterialParameterCollectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMaterialParameterCollectionTemplate, 0x0000);
		}

		// struct FMovieSceneObjectPropertyTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneObjectPropertyTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneObjectPropertyTemplate, 0x0000);
		}

		// struct FMovieSceneComponentMaterialSectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneComponentMaterialSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneComponentMaterialSectionTemplate, 0x0000);
		}

		// struct FMovieSceneParticleParameterSectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParticleParameterSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParticleParameterSectionTemplate, 0x0000);
		}

		// struct FMovieSceneParticleChannel : public FMovieSceneByteChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParticleChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParticleChannel, 0x0000);
		}

		// struct FMovieSceneParticleSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParticleSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParticleSectionTemplate, 0x0000);
		}

		// struct FMovieScenePrimitiveMaterialTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScenePrimitiveMaterialTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScenePrimitiveMaterialTemplate, 0x0000);
		}

		// struct FMovieSceneEulerTransformPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEulerTransformPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEulerTransformPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneTransformPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneTransformPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTransformPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneVectorPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVectorPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVectorPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneStringPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneStringPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneStringPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneStringChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneStringChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneStringChannel, 0x0000);
		}

		// struct FMovieSceneIntegerPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneIntegerPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneIntegerPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneEnumPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEnumPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEnumPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneBytePropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneBytePropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBytePropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneFloatPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneFloatPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFloatPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneBoolPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneBoolPropertySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBoolPropertySectionTemplate, 0x0000);
		}

		// struct FMovieSceneSkeletalAnimationParams
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSkeletalAnimationParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSkeletalAnimationParams, 0x0000);
		}

		// struct FMovieSceneSkeletalAnimationSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSkeletalAnimationSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSkeletalAnimationSectionTemplate, 0x0000);
		}

		// struct FMovieSceneSkeletalAnimationSectionTemplateParameters : public FMovieSceneSkeletalAnimationParams
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSkeletalAnimationSectionTemplateParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSkeletalAnimationSectionTemplateParameters, 0x0000);
		}

		// struct FMovieSceneSlomoSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSlomoSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSlomoSectionTemplate, 0x0000);
		}

		// struct FMovieSceneSpawnSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSpawnSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSpawnSectionTemplate, 0x0000);
		}

		// struct FMovieSceneVectorKeyStructBase : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVectorKeyStructBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVectorKeyStructBase, 0x0000);
		}

		// struct FMovieSceneVector4KeyStruct : public FMovieSceneVectorKeyStructBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVector4KeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVector4KeyStruct, 0x0000);
		}

		// struct FMovieSceneVectorKeyStruct : public FMovieSceneVectorKeyStructBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVectorKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVectorKeyStruct, 0x0000);
		}

		// struct FMovieSceneVector2DKeyStruct : public FMovieSceneVectorKeyStructBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVector2DKeyStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVector2DKeyStruct, 0x0000);
		}

		// struct FMovieSceneVisibilitySectionTemplate : public FMovieSceneBoolPropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVisibilitySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVisibilitySectionTemplate, 0x0000);
		}

		// struct FCameraLookatTrackingSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraLookatTrackingSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraLookatTrackingSettings, 0x0000);
		}

		// struct FCameraFocusSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraFocusSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraFocusSettings, 0x0000);
		}

		// struct FCameraTrackingFocusSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraTrackingFocusSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraTrackingFocusSettings, 0x0000);
		}

		// struct FNamedLensPreset
		TEST_METHOD(ScriptStruct__CinematicCamera__NamedLensPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedLensPreset, 0x0000);
		}

		// struct FCameraLensSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraLensSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraLensSettings, 0x0000);
		}

		// struct FNamedFilmbackPreset
		TEST_METHOD(ScriptStruct__CinematicCamera__NamedFilmbackPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedFilmbackPreset, 0x0000);
		}

		// struct FCameraFilmbackSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraFilmbackSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraFilmbackSettings, 0x0000);
		}

		// struct FARFilter
		TEST_METHOD(ScriptStruct__AssetRegistry__ARFilter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FARFilter, 0x0000);
		}

		// struct FAssetBundleData
		TEST_METHOD(ScriptStruct__AssetRegistry__AssetBundleData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetBundleData, 0x0000);
		}

		// struct FAssetBundleEntry
		TEST_METHOD(ScriptStruct__AssetRegistry__AssetBundleEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetBundleEntry, 0x0000);
		}

		// struct FAssetData
		TEST_METHOD(ScriptStruct__AssetRegistry__AssetData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetData, 0x0000);
		}

		// struct FTagAndValue
		TEST_METHOD(ScriptStruct__AssetRegistry__TagAndValue)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTagAndValue, 0x0000);
		}

		// struct FRecordedTransformTrack
		TEST_METHOD(ScriptStruct__GeometryCollectionCore__RecordedTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRecordedTransformTrack, 0x0000);
		}

		// struct FRecordedFrame
		TEST_METHOD(ScriptStruct__GeometryCollectionCore__RecordedFrame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRecordedFrame, 0x0000);
		}

		// struct FSolverTrailingData
		TEST_METHOD(ScriptStruct__GeometryCollectionCore__SolverTrailingData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSolverTrailingData, 0x0000);
		}

		// struct FSolverCollisionData
		TEST_METHOD(ScriptStruct__GeometryCollectionCore__SolverCollisionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSolverCollisionData, 0x0000);
		}

		// struct FLightPropagationVolumeSettings
		TEST_METHOD(ScriptStruct__Renderer__LightPropagationVolumeSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightPropagationVolumeSettings, 0x0000);
		}

		// struct FEngineServiceNotification
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceNotification)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceNotification, 0x0000);
		}

		// struct FEngineServiceTerminate
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceTerminate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceTerminate, 0x0000);
		}

		// struct FEngineServiceExecuteCommand
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceExecuteCommand)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceExecuteCommand, 0x0000);
		}

		// struct FEngineServiceAuthGrant
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceAuthGrant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceAuthGrant, 0x0000);
		}

		// struct FEngineServiceAuthDeny
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceAuthDeny)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceAuthDeny, 0x0000);
		}

		// struct FEngineServicePong
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServicePong)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServicePong, 0x0000);
		}

		// struct FEngineServicePing
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServicePing)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServicePing, 0x0000);
		}

		// struct FStatDef_MeleeWeapon
		TEST_METHOD(UserDefinedStruct__StatDef_MeleeWeapon__StatDef_MeleeWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDef_MeleeWeapon, 0x0000);
		}

		// struct FAchievement_Armor_Set
		TEST_METHOD(UserDefinedStruct__Achievement_Armor_Set__Achievement_Armor_Set)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAchievement_Armor_Set, 0x0000);
		}

		// struct FVirtualKeyboardOptions
		TEST_METHOD(ScriptStruct__Slate__VirtualKeyboardOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVirtualKeyboardOptions, 0x0000);
		}

		// struct FInputChord
		TEST_METHOD(ScriptStruct__Slate__InputChord)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputChord, 0x0000);
		}

		// struct FAnchors
		TEST_METHOD(ScriptStruct__Slate__Anchors)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnchors, 0x0000);
		}

		// struct FMediaCaptureDevice
		TEST_METHOD(ScriptStruct__MediaAssets__MediaCaptureDevice)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMediaCaptureDevice, 0x0000);
		}

		// struct FMediaSoundComponentSpectralData
		TEST_METHOD(ScriptStruct__MediaAssets__MediaSoundComponentSpectralData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMediaSoundComponentSpectralData, 0x0000);
		}

		// struct FWeightedTargetEntry
		TEST_METHOD(UserDefinedStruct__WeightedTargetEntry__WeightedTargetEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeightedTargetEntry, 0x0000);
		}

		// struct FMod_MultiTarget_PendingTarget
		TEST_METHOD(UserDefinedStruct__Mod_MultiTarget_PendingTarget__Mod_MultiTarget_PendingTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMod_MultiTarget_PendingTarget, 0x0000);
		}

		// struct FClothConfig
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothConfig, 0x0000);
		}

		// struct FClothConstraintSetup
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothConstraintSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothConstraintSetup, 0x0000);
		}

		// struct FClothLODData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothLODData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothLODData, 0x0000);
		}

		// struct FClothPhysicalMeshData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothPhysicalMeshData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothPhysicalMeshData, 0x0000);
		}

		// struct FClothVertBoneData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothVertBoneData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothVertBoneData, 0x0000);
		}

		// struct FClothParameterMask_PhysMesh
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothParameterMask_PhysMesh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothParameterMask_PhysMesh, 0x0000);
		}

		// struct FStatDef_RangedWeapon
		TEST_METHOD(UserDefinedStruct__StatDef_RangedWeapon__StatDef_RangedWeapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDef_RangedWeapon, 0x0000);
		}

		// struct FClothCollisionData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionData, 0x0000);
		}

		// struct FClothCollisionPrim_Convex
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionPrim_Convex)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionPrim_Convex, 0x0000);
		}

		// struct FClothCollisionPrim_SphereConnection
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionPrim_SphereConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionPrim_SphereConnection, 0x0000);
		}

		// struct FClothCollisionPrim_Sphere
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionPrim_Sphere)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionPrim_Sphere, 0x0000);
		}

		// struct FItemNotificationEntry
		TEST_METHOD(UserDefinedStruct__ItemNotificationEntry__ItemNotificationEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FItemNotificationEntry, 0x0000);
		}

		// struct FImageWriteOptions
		TEST_METHOD(ScriptStruct__ImageWriteQueue__ImageWriteOptions)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImageWriteOptions, 0x0000);
		}

		// struct FFileManifestData
		TEST_METHOD(ScriptStruct__BuildPatchServices__FileManifestData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFileManifestData, 0x0000);
		}

		// struct FChunkPartData
		TEST_METHOD(ScriptStruct__BuildPatchServices__ChunkPartData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChunkPartData, 0x0000);
		}

		// struct FSHAHashData
		TEST_METHOD(ScriptStruct__BuildPatchServices__SHAHashData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSHAHashData, 0x0000);
		}

		// struct FChunkInfoData
		TEST_METHOD(ScriptStruct__BuildPatchServices__ChunkInfoData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChunkInfoData, 0x0000);
		}

		// struct FCustomFieldData
		TEST_METHOD(ScriptStruct__BuildPatchServices__CustomFieldData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomFieldData, 0x0000);
		}

		// struct FStructDef_Projectile
		TEST_METHOD(UserDefinedStruct__StructDef_Projectile__StructDef_Projectile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructDef_Projectile, 0x0000);
		}

		// struct FCreditsMusic
		TEST_METHOD(UserDefinedStruct__CreditsMusic__CreditsMusic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCreditsMusic, 0x0000);
		}

		// struct FCreditsSectionDefaults
		TEST_METHOD(UserDefinedStruct__CreditsSectionDefaults__CreditsSectionDefaults)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCreditsSectionDefaults, 0x0000);
		}

		// struct FEyeTrackerStereoGazeData
		TEST_METHOD(ScriptStruct__EyeTracker__EyeTrackerStereoGazeData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEyeTrackerStereoGazeData, 0x0000);
		}

		// struct FEyeTrackerGazeData
		TEST_METHOD(ScriptStruct__EyeTracker__EyeTrackerGazeData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEyeTrackerGazeData, 0x0000);
		}

		// struct FStatDef_Item
		TEST_METHOD(UserDefinedStruct__StatDef_Item__StatDef_Item)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDef_Item, 0x0000);
		}

		// struct FNotificationEntry
		TEST_METHOD(UserDefinedStruct__NotificationEntry__NotificationEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNotificationEntry, 0x0000);
		}

		// struct FJoinabilitySettings
		TEST_METHOD(ScriptStruct__CoreUObject__JoinabilitySettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FJoinabilitySettings, 0x0000);
		}

		// struct FUniqueNetIdWrapper
		TEST_METHOD(ScriptStruct__CoreUObject__UniqueNetIdWrapper)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUniqueNetIdWrapper, 0x0000);
		}

		// struct FGuid
		TEST_METHOD(ScriptStruct__CoreUObject__Guid)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGuid, 0x0000);
		}

		// struct FVector
		TEST_METHOD(ScriptStruct__CoreUObject__Vector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector, 0x0000);
		}

		// struct FVector4
		TEST_METHOD(ScriptStruct__CoreUObject__Vector4)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector4, 0x0000);
		}

		// struct FVector2D
		TEST_METHOD(ScriptStruct__CoreUObject__Vector2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector2D, 0x0000);
		}

		// struct FTwoVectors
		TEST_METHOD(ScriptStruct__CoreUObject__TwoVectors)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTwoVectors, 0x0000);
		}

		// struct FPlane : public FVector
		TEST_METHOD(ScriptStruct__CoreUObject__Plane)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlane, 0x0000);
		}

		// struct FRotator
		TEST_METHOD(ScriptStruct__CoreUObject__Rotator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRotator, 0x0000);
		}

		// struct FQuat
		TEST_METHOD(ScriptStruct__CoreUObject__Quat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQuat, 0x0000);
		}

		// struct FPackedNormal
		TEST_METHOD(ScriptStruct__CoreUObject__PackedNormal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPackedNormal, 0x0000);
		}

		// struct FPackedRGB10A2N
		TEST_METHOD(ScriptStruct__CoreUObject__PackedRGB10A2N)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPackedRGB10A2N, 0x0000);
		}

		// struct FPackedRGBA16N
		TEST_METHOD(ScriptStruct__CoreUObject__PackedRGBA16N)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPackedRGBA16N, 0x0000);
		}

		// struct FIntPoint
		TEST_METHOD(ScriptStruct__CoreUObject__IntPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntPoint, 0x0000);
		}

		// struct FIntVector
		TEST_METHOD(ScriptStruct__CoreUObject__IntVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntVector, 0x0000);
		}

		// struct FColor
		TEST_METHOD(ScriptStruct__CoreUObject__Color)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColor, 0x0000);
		}

		// struct FLinearColor
		TEST_METHOD(ScriptStruct__CoreUObject__LinearColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLinearColor, 0x0000);
		}

		// struct FBox
		TEST_METHOD(ScriptStruct__CoreUObject__Box)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBox, 0x0000);
		}

		// struct FBox2D
		TEST_METHOD(ScriptStruct__CoreUObject__Box2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBox2D, 0x0000);
		}

		// struct FBoxSphereBounds
		TEST_METHOD(ScriptStruct__CoreUObject__BoxSphereBounds)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoxSphereBounds, 0x0000);
		}

		// struct FOrientedBox
		TEST_METHOD(ScriptStruct__CoreUObject__OrientedBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOrientedBox, 0x0000);
		}

		// struct FMatrix
		TEST_METHOD(ScriptStruct__CoreUObject__Matrix)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMatrix, 0x0000);
		}

		// struct FInterpCurvePointFloat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointFloat, 0x0000);
		}

		// struct FInterpCurveFloat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveFloat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveFloat, 0x0000);
		}

		// struct FInterpCurvePointVector2D
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointVector2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointVector2D, 0x0000);
		}

		// struct FInterpCurveVector2D
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveVector2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveVector2D, 0x0000);
		}

		// struct FInterpCurvePointVector
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointVector, 0x0000);
		}

		// struct FInterpCurveVector
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveVector, 0x0000);
		}

		// struct FInterpCurvePointQuat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointQuat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointQuat, 0x0000);
		}

		// struct FInterpCurveQuat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveQuat)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveQuat, 0x0000);
		}

		// struct FInterpCurvePointTwoVectors
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointTwoVectors)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointTwoVectors, 0x0000);
		}

		// struct FInterpCurveTwoVectors
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveTwoVectors)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveTwoVectors, 0x0000);
		}

		// struct FInterpCurvePointLinearColor
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointLinearColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointLinearColor, 0x0000);
		}

		// struct FInterpCurveLinearColor
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveLinearColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveLinearColor, 0x0000);
		}

		// struct FTransform
		TEST_METHOD(ScriptStruct__CoreUObject__Transform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransform, 0x0000);
		}

		// struct FRandomStream
		TEST_METHOD(ScriptStruct__CoreUObject__RandomStream)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRandomStream, 0x0000);
		}

		// struct FDateTime
		TEST_METHOD(ScriptStruct__CoreUObject__DateTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDateTime, 0x0000);
		}

		// struct FFrameNumber
		TEST_METHOD(ScriptStruct__CoreUObject__FrameNumber)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameNumber, 0x0000);
		}

		// struct FFrameRate
		TEST_METHOD(ScriptStruct__CoreUObject__FrameRate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameRate, 0x0000);
		}

		// struct FFrameTime
		TEST_METHOD(ScriptStruct__CoreUObject__FrameTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameTime, 0x0000);
		}

		// struct FQualifiedFrameTime
		TEST_METHOD(ScriptStruct__CoreUObject__QualifiedFrameTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQualifiedFrameTime, 0x0000);
		}

		// struct FTimecode
		TEST_METHOD(ScriptStruct__CoreUObject__Timecode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimecode, 0x0000);
		}

		// struct FTimespan
		TEST_METHOD(ScriptStruct__CoreUObject__Timespan)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimespan, 0x0000);
		}

		// struct FSoftObjectPath
		TEST_METHOD(ScriptStruct__CoreUObject__SoftObjectPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoftObjectPath, 0x0000);
		}

		// struct FSoftClassPath : public FSoftObjectPath
		TEST_METHOD(ScriptStruct__CoreUObject__SoftClassPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoftClassPath, 0x0000);
		}

		// struct FPrimaryAssetType
		TEST_METHOD(ScriptStruct__CoreUObject__PrimaryAssetType)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetType, 0x0000);
		}

		// struct FPrimaryAssetId
		TEST_METHOD(ScriptStruct__CoreUObject__PrimaryAssetId)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetId, 0x0000);
		}

		// struct FFallbackStruct
		TEST_METHOD(ScriptStruct__CoreUObject__FallbackStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFallbackStruct, 0x0000);
		}

		// struct FFloatRangeBound
		TEST_METHOD(ScriptStruct__CoreUObject__FloatRangeBound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatRangeBound, 0x0000);
		}

		// struct FFloatRange
		TEST_METHOD(ScriptStruct__CoreUObject__FloatRange)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatRange, 0x0000);
		}

		// struct FInt32RangeBound
		TEST_METHOD(ScriptStruct__CoreUObject__Int32RangeBound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInt32RangeBound, 0x0000);
		}

		// struct FInt32Range
		TEST_METHOD(ScriptStruct__CoreUObject__Int32Range)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInt32Range, 0x0000);
		}

		// struct FFloatInterval
		TEST_METHOD(ScriptStruct__CoreUObject__FloatInterval)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatInterval, 0x0000);
		}

		// struct FInt32Interval
		TEST_METHOD(ScriptStruct__CoreUObject__Int32Interval)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInt32Interval, 0x0000);
		}

		// struct FPolyglotTextData
		TEST_METHOD(ScriptStruct__CoreUObject__PolyglotTextData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolyglotTextData, 0x0000);
		}

		// struct FAutomationEvent
		TEST_METHOD(ScriptStruct__CoreUObject__AutomationEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutomationEvent, 0x0000);
		}

		// struct FAutomationExecutionEntry
		TEST_METHOD(ScriptStruct__CoreUObject__AutomationExecutionEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutomationExecutionEntry, 0x0000);
		}

		// struct FDropTimecode
		TEST_METHOD(ScriptStruct__LinearTimecode__DropTimecode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDropTimecode, 0x0000);
		}

		// struct FAnimNode_WheelHandler : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__PhysXVehicles__AnimNode_WheelHandler)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_WheelHandler, 0x0000);
		}

		// struct FTireConfigMaterialFriction
		TEST_METHOD(ScriptStruct__PhysXVehicles__TireConfigMaterialFriction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTireConfigMaterialFriction, 0x0000);
		}

		// struct FVehicleAnimInstanceProxy : public FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleAnimInstanceProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleAnimInstanceProxy, 0x0000);
		}

		// struct FVehicleInputRate
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleInputRate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleInputRate, 0x0000);
		}

		// struct FReplicatedVehicleState
		TEST_METHOD(ScriptStruct__PhysXVehicles__ReplicatedVehicleState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedVehicleState, 0x0000);
		}

		// struct FWheelSetup
		TEST_METHOD(ScriptStruct__PhysXVehicles__WheelSetup)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWheelSetup, 0x0000);
		}

		// struct FVehicleTransmissionData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleTransmissionData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleTransmissionData, 0x0000);
		}

		// struct FVehicleGearData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleGearData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleGearData, 0x0000);
		}

		// struct FVehicleEngineData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleEngineData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleEngineData, 0x0000);
		}

		// struct FVehicleDifferential4WData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleDifferential4WData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleDifferential4WData, 0x0000);
		}

		// struct FEventRegionCharacter
		TEST_METHOD(ScriptStruct__Remnant__EventRegionCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventRegionCharacter, 0x0000);
		}

		// struct FZoneTravelState
		TEST_METHOD(ScriptStruct__Remnant__ZoneTravelState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FZoneTravelState, 0x0000);
		}

		// struct FActionPing
		TEST_METHOD(ScriptStruct__Remnant__ActionPing)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActionPing, 0x0000);
		}

		// struct FRemnantQuestReward
		TEST_METHOD(ScriptStruct__Remnant__RemnantQuestReward)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRemnantQuestReward, 0x0000);
		}

		// struct FRemnantQuestRewardItem
		TEST_METHOD(ScriptStruct__Remnant__RemnantQuestRewardItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRemnantQuestRewardItem, 0x0000);
		}

		// struct FPersistentBuff
		TEST_METHOD(ScriptStruct__Remnant__PersistentBuff)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPersistentBuff, 0x0000);
		}

		// struct FEmoteIconState
		TEST_METHOD(ScriptStruct__Remnant__EmoteIconState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEmoteIconState, 0x0000);
		}

		// struct FSpawnedGrenadeRepData
		TEST_METHOD(ScriptStruct__Remnant__SpawnedGrenadeRepData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnedGrenadeRepData, 0x0000);
		}

		// struct FGunObstructionParameters
		TEST_METHOD(ScriptStruct__Remnant__GunObstructionParameters)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGunObstructionParameters, 0x0000);
		}

		// struct FLootContainerItem
		TEST_METHOD(ScriptStruct__Remnant__LootContainerItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLootContainerItem, 0x0000);
		}

		// struct FLorePage
		TEST_METHOD(ScriptStruct__Remnant__LorePage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLorePage, 0x0000);
		}

		// struct FSessionFriendDetails
		TEST_METHOD(ScriptStruct__Remnant__SessionFriendDetails)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionFriendDetails, 0x0000);
		}

		// struct FSessionDetails
		TEST_METHOD(ScriptStruct__Remnant__SessionDetails)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionDetails, 0x0000);
		}

		// struct FRadialShortcut
		TEST_METHOD(ScriptStruct__Remnant__RadialShortcut)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRadialShortcut, 0x0000);
		}

		// struct FZoneConnection
		TEST_METHOD(ScriptStruct__Remnant__ZoneConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FZoneConnection, 0x0000);
		}

		// struct FArchetypeStartingTrait
		TEST_METHOD(ScriptStruct__Remnant__ArchetypeStartingTrait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FArchetypeStartingTrait, 0x0000);
		}

		// struct FAccountCurrencyInstance
		TEST_METHOD(ScriptStruct__Remnant__AccountCurrencyInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAccountCurrencyInstance, 0x0000);
		}

		// struct FAccountAwardInstance
		TEST_METHOD(ScriptStruct__Remnant__AccountAwardInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAccountAwardInstance, 0x0000);
		}

		// struct FSavedEquipmentVisual
		TEST_METHOD(ScriptStruct__Remnant__SavedEquipmentVisual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSavedEquipmentVisual, 0x0000);
		}

		// struct FPrimaryPingInfo
		TEST_METHOD(ScriptStruct__Remnant__PrimaryPingInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryPingInfo, 0x0000);
		}

		// struct FRemnantClientInventoryChangeInfo
		TEST_METHOD(ScriptStruct__Remnant__RemnantClientInventoryChangeInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRemnantClientInventoryChangeInfo, 0x0000);
		}

		// struct FBookPage
		TEST_METHOD(ScriptStruct__Remnant__BookPage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBookPage, 0x0000);
		}

		// struct FClientValidatedItemInfo
		TEST_METHOD(ScriptStruct__Remnant__ClientValidatedItemInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClientValidatedItemInfo, 0x0000);
		}

		// struct FAddedItemTypeTimeStamp
		TEST_METHOD(ScriptStruct__Remnant__AddedItemTypeTimeStamp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAddedItemTypeTimeStamp, 0x0000);
		}

		// struct FValidationTrackedItemParams
		TEST_METHOD(ScriptStruct__Remnant__ValidationTrackedItemParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FValidationTrackedItemParams, 0x0000);
		}

		// struct FCheatProtectedItemParams
		TEST_METHOD(ScriptStruct__Remnant__CheatProtectedItemParams)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCheatProtectedItemParams, 0x0000);
		}

		// struct FAutoUpgradeableItem
		TEST_METHOD(ScriptStruct__Remnant__AutoUpgradeableItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutoUpgradeableItem, 0x0000);
		}

		// struct FProgressionValidationInfo
		TEST_METHOD(ScriptStruct__Remnant__ProgressionValidationInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProgressionValidationInfo, 0x0000);
		}

		// struct FRemnantQuestEntityInfo
		TEST_METHOD(ScriptStruct__Remnant__RemnantQuestEntityInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRemnantQuestEntityInfo, 0x0000);
		}

		// struct FRemnantQuestEntry
		TEST_METHOD(ScriptStruct__Remnant__RemnantQuestEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRemnantQuestEntry, 0x0000);
		}

		// struct FQuestTileDependency
		TEST_METHOD(ScriptStruct__Remnant__QuestTileDependency)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQuestTileDependency, 0x0000);
		}

		// struct FEncounterWave
		TEST_METHOD(ScriptStruct__Remnant__EncounterWave)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEncounterWave, 0x0000);
		}

		// struct FSkyboxModifierVolumeInfo
		TEST_METHOD(ScriptStruct__Remnant__SkyboxModifierVolumeInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkyboxModifierVolumeInfo, 0x0000);
		}

		// struct FRemnantCharacterStatData : public FStatData
		TEST_METHOD(ScriptStruct__Remnant__RemnantCharacterStatData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRemnantCharacterStatData, 0x0000);
		}

		// struct FSpentTraitPointValidationInfo
		TEST_METHOD(ScriptStruct__Remnant__SpentTraitPointValidationInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpentTraitPointValidationInfo, 0x0000);
		}

		// struct FTraitValidationInfo
		TEST_METHOD(ScriptStruct__Remnant__TraitValidationInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTraitValidationInfo, 0x0000);
		}

		// struct FTraitPointValidationInfo
		TEST_METHOD(ScriptStruct__Remnant__TraitPointValidationInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTraitPointValidationInfo, 0x0000);
		}

		// struct FLoadableModAsset
		TEST_METHOD(ScriptStruct__Remnant__LoadableModAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadableModAsset, 0x0000);
		}

		// struct FSmartAmmo
		TEST_METHOD(ScriptStruct__Remnant__SmartAmmo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSmartAmmo, 0x0000);
		}

		// struct FZoneTileDef
		TEST_METHOD(ScriptStruct__Remnant__ZoneTileDef)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FZoneTileDef, 0x0000);
		}

		// struct FZoneState
		TEST_METHOD(ScriptStruct__Remnant__ZoneState)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FZoneState, 0x0000);
		}

		// struct FZoneLinkInfo
		TEST_METHOD(ScriptStruct__Remnant__ZoneLinkInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FZoneLinkInfo, 0x0000);
		}

		// struct FFoliageVertexColorChannelMask
		TEST_METHOD(ScriptStruct__Foliage__FoliageVertexColorChannelMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFoliageVertexColorChannelMask, 0x0000);
		}

		// struct FFoliageTypeObject
		TEST_METHOD(ScriptStruct__Foliage__FoliageTypeObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFoliageTypeObject, 0x0000);
		}

		// struct FProceduralFoliageInstance
		TEST_METHOD(ScriptStruct__Foliage__ProceduralFoliageInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProceduralFoliageInstance, 0x0000);
		}

		// struct FAchievement_Armor_Skin_Set
		TEST_METHOD(UserDefinedStruct__Achievement_Armor_Skin_Set__Achievement_Armor_Skin_Set)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAchievement_Armor_Skin_Set, 0x0000);
		}

		// struct FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__InputEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputEvent, 0x0000);
		}

		// struct FPointerEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__PointerEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPointerEvent, 0x0000);
		}

		// struct FGeometry
		TEST_METHOD(ScriptStruct__SlateCore__Geometry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometry, 0x0000);
		}

		// struct FSlateBrush
		TEST_METHOD(ScriptStruct__SlateCore__SlateBrush)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateBrush, 0x0000);
		}

		// struct FSlateColor
		TEST_METHOD(ScriptStruct__SlateCore__SlateColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateColor, 0x0000);
		}

		// struct FMargin
		TEST_METHOD(ScriptStruct__SlateCore__Margin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMargin, 0x0000);
		}

		// struct FCharacterEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__CharacterEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCharacterEvent, 0x0000);
		}

		// struct FKeyEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__KeyEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyEvent, 0x0000);
		}

		// struct FNavigationEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__NavigationEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationEvent, 0x0000);
		}

		// struct FAnalogInputEvent : public FKeyEvent
		TEST_METHOD(ScriptStruct__SlateCore__AnalogInputEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnalogInputEvent, 0x0000);
		}

		// struct FSlateFontInfo
		TEST_METHOD(ScriptStruct__SlateCore__SlateFontInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateFontInfo, 0x0000);
		}

		// struct FFontOutlineSettings
		TEST_METHOD(ScriptStruct__SlateCore__FontOutlineSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontOutlineSettings, 0x0000);
		}

		// struct FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SlateWidgetStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateWidgetStyle, 0x0000);
		}

		// struct FTableRowStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__TableRowStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTableRowStyle, 0x0000);
		}

		// struct FComboBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ComboBoxStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComboBoxStyle, 0x0000);
		}

		// struct FSlateSound
		TEST_METHOD(ScriptStruct__SlateCore__SlateSound)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateSound, 0x0000);
		}

		// struct FComboButtonStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ComboButtonStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComboButtonStyle, 0x0000);
		}

		// struct FButtonStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ButtonStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FButtonStyle, 0x0000);
		}

		// struct FEditableTextStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__EditableTextStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditableTextStyle, 0x0000);
		}

		// struct FEditableTextBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__EditableTextBoxStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditableTextBoxStyle, 0x0000);
		}

		// struct FScrollBarStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ScrollBarStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScrollBarStyle, 0x0000);
		}

		// struct FTextBlockStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__TextBlockStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextBlockStyle, 0x0000);
		}

		// struct FSpinBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SpinBoxStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpinBoxStyle, 0x0000);
		}

		// struct FCompositeFont
		TEST_METHOD(ScriptStruct__SlateCore__CompositeFont)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeFont, 0x0000);
		}

		// struct FCompositeFallbackFont
		TEST_METHOD(ScriptStruct__SlateCore__CompositeFallbackFont)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeFallbackFont, 0x0000);
		}

		// struct FTypeface
		TEST_METHOD(ScriptStruct__SlateCore__Typeface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTypeface, 0x0000);
		}

		// struct FTypefaceEntry
		TEST_METHOD(ScriptStruct__SlateCore__TypefaceEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTypefaceEntry, 0x0000);
		}

		// struct FFontData
		TEST_METHOD(ScriptStruct__SlateCore__FontData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontData, 0x0000);
		}

		// struct FCompositeSubFont : public FCompositeFallbackFont
		TEST_METHOD(ScriptStruct__SlateCore__CompositeSubFont)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeSubFont, 0x0000);
		}

		// struct FMotionEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__MotionEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMotionEvent, 0x0000);
		}

		// struct FCaptureLostEvent
		TEST_METHOD(ScriptStruct__SlateCore__CaptureLostEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCaptureLostEvent, 0x0000);
		}

		// struct FFocusEvent
		TEST_METHOD(ScriptStruct__SlateCore__FocusEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFocusEvent, 0x0000);
		}

		// struct FWindowStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__WindowStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWindowStyle, 0x0000);
		}

		// struct FScrollBorderStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ScrollBorderStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScrollBorderStyle, 0x0000);
		}

		// struct FScrollBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ScrollBoxStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScrollBoxStyle, 0x0000);
		}

		// struct FDockTabStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__DockTabStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDockTabStyle, 0x0000);
		}

		// struct FHeaderRowStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__HeaderRowStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHeaderRowStyle, 0x0000);
		}

		// struct FSplitterStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SplitterStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplitterStyle, 0x0000);
		}

		// struct FTableColumnHeaderStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__TableColumnHeaderStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTableColumnHeaderStyle, 0x0000);
		}

		// struct FInlineTextImageStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__InlineTextImageStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInlineTextImageStyle, 0x0000);
		}

		// struct FVolumeControlStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__VolumeControlStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVolumeControlStyle, 0x0000);
		}

		// struct FSliderStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SliderStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSliderStyle, 0x0000);
		}

		// struct FSearchBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SearchBoxStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSearchBoxStyle, 0x0000);
		}

		// struct FExpandableAreaStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ExpandableAreaStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExpandableAreaStyle, 0x0000);
		}

		// struct FProgressBarStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ProgressBarStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProgressBarStyle, 0x0000);
		}

		// struct FInlineEditableTextBlockStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__InlineEditableTextBlockStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInlineEditableTextBlockStyle, 0x0000);
		}

		// struct FHyperlinkStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__HyperlinkStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHyperlinkStyle, 0x0000);
		}

		// struct FCheckBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__CheckBoxStyle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCheckBoxStyle, 0x0000);
		}

		// struct FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__ElementID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FElementID, 0x0000);
		}

		// struct FPolygonGroupID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__PolygonGroupID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonGroupID, 0x0000);
		}

		// struct FPolygonID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__PolygonID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonID, 0x0000);
		}

		// struct FVertexID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__VertexID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexID, 0x0000);
		}

		// struct FEdgeID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__EdgeID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdgeID, 0x0000);
		}

		// struct FVertexInstanceID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__VertexInstanceID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexInstanceID, 0x0000);
		}

		// struct FMeshTriangle
		TEST_METHOD(ScriptStruct__MeshDescription__MeshTriangle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshTriangle, 0x0000);
		}

		// struct FCompositionGraphCapturePasses
		TEST_METHOD(ScriptStruct__MovieSceneCapture__CompositionGraphCapturePasses)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositionGraphCapturePasses, 0x0000);
		}

		// struct FFrameMetrics
		TEST_METHOD(ScriptStruct__MovieSceneCapture__FrameMetrics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameMetrics, 0x0000);
		}

		// struct FMovieSceneCaptureSettings
		TEST_METHOD(ScriptStruct__MovieSceneCapture__MovieSceneCaptureSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCaptureSettings, 0x0000);
		}

		// struct FCaptureResolution
		TEST_METHOD(ScriptStruct__MovieSceneCapture__CaptureResolution)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCaptureResolution, 0x0000);
		}

		// struct FCapturedPixels
		TEST_METHOD(ScriptStruct__MovieSceneCapture__CapturedPixels)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCapturedPixels, 0x0000);
		}

		// struct FCapturedPixelsID
		TEST_METHOD(ScriptStruct__MovieSceneCapture__CapturedPixelsID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCapturedPixelsID, 0x0000);
		}

		// struct FMaterialQualityOverrides
		TEST_METHOD(ScriptStruct__MaterialShaderQualitySettings__MaterialQualityOverrides)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialQualityOverrides, 0x0000);
		}

		// struct FAutoCompleteCommand
		TEST_METHOD(ScriptStruct__EngineSettings__AutoCompleteCommand)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutoCompleteCommand, 0x0000);
		}

		// struct FGameModeName
		TEST_METHOD(ScriptStruct__EngineSettings__GameModeName)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameModeName, 0x0000);
		}

		// struct FBoundActorProxy
		TEST_METHOD(ScriptStruct__LevelSequence__BoundActorProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoundActorProxy, 0x0000);
		}

		// struct FLevelSequenceBindingReferences
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceBindingReferences)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceBindingReferences, 0x0000);
		}

		// struct FLevelSequenceBindingReferenceArray
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceBindingReferenceArray)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceBindingReferenceArray, 0x0000);
		}

		// struct FLevelSequenceBindingReference
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceBindingReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceBindingReference, 0x0000);
		}

		// struct FLevelSequenceObjectReferenceMap
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceObjectReferenceMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceObjectReferenceMap, 0x0000);
		}

		// struct FLevelSequenceLegacyObjectReference
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceLegacyObjectReference)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceLegacyObjectReference, 0x0000);
		}

		// struct FLevelSequenceObject
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceObject, 0x0000);
		}

		// struct FLevelSequencePlayerSnapshot
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequencePlayerSnapshot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequencePlayerSnapshot, 0x0000);
		}

		// struct FLevelSequenceSnapshotSettings
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceSnapshotSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceSnapshotSettings, 0x0000);
		}

		// struct FStructSerializerTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerTestStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerTestStruct, 0x0000);
		}

		// struct FStructSerializerMapTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerMapTestStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerMapTestStruct, 0x0000);
		}

		// struct FStructSerializerArrayTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerArrayTestStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerArrayTestStruct, 0x0000);
		}

		// struct FStructSerializerBuiltinTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerBuiltinTestStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerBuiltinTestStruct, 0x0000);
		}

		// struct FStructSerializerObjectTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerObjectTestStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerObjectTestStruct, 0x0000);
		}

		// struct FStructSerializerBooleanTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerBooleanTestStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerBooleanTestStruct, 0x0000);
		}

		// struct FStructSerializerNumericTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerNumericTestStruct)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerNumericTestStruct, 0x0000);
		}

		// struct FSessionServiceLogUnsubscribe
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServiceLogUnsubscribe)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServiceLogUnsubscribe, 0x0000);
		}

		// struct FSessionServiceLogSubscribe
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServiceLogSubscribe)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServiceLogSubscribe, 0x0000);
		}

		// struct FSessionServiceLog
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServiceLog)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServiceLog, 0x0000);
		}

		// struct FSessionServicePong
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServicePong)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServicePong, 0x0000);
		}

		// struct FSessionServicePing
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServicePing)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServicePing, 0x0000);
		}

		// struct FStatDef_Armor
		TEST_METHOD(UserDefinedStruct__StatDef_Armor__StatDef_Armor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDef_Armor, 0x0000);
		}

		// struct FXRDeviceId
		TEST_METHOD(ScriptStruct__HeadMountedDisplay__XRDeviceId)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FXRDeviceId, 0x0000);
		}

		// struct FNetAnalyticsDataConfig
		TEST_METHOD(ScriptStruct__PacketHandler__NetAnalyticsDataConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNetAnalyticsDataConfig, 0x0000);
		}

		// struct FStruct_SkyboxSettings
		TEST_METHOD(UserDefinedStruct__Struct_SkyboxSettings__Struct_SkyboxSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStruct_SkyboxSettings, 0x0000);
		}

		// struct FTextProperties
		TEST_METHOD(UserDefinedStruct__TextProperties__TextProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextProperties, 0x0000);
		}

		// struct FName_TextObject
		TEST_METHOD(UserDefinedStruct__Name_TextObject__Name_TextObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FName_TextObject, 0x0000);
		}

		// struct FS_Root_Twist_Data
		TEST_METHOD(UserDefinedStruct__S_Root_Twist_Data__S_Root_Twist_Data)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FS_Root_Twist_Data, 0x0000);
		}

		// struct FS_FloatPair
		TEST_METHOD(UserDefinedStruct__S_FloatPair__S_FloatPair)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FS_FloatPair, 0x0000);
		}

		// struct FStatDef_EnemyCharacter
		TEST_METHOD(UserDefinedStruct__StatDef_EnemyCharacter__StatDef_EnemyCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatDef_EnemyCharacter, 0x0000);
		}

		// struct FCreditsSection
		TEST_METHOD(UserDefinedStruct__CreditsSection__CreditsSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCreditsSection, 0x0000);
		}

		// struct FOverrides
		TEST_METHOD(UserDefinedStruct__Overrides__Overrides)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOverrides, 0x0000);
		}

		// struct FCreditsSectionSimple
		TEST_METHOD(UserDefinedStruct__CreditsSectionSimple__CreditsSectionSimple)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCreditsSectionSimple, 0x0000);
		}

		// struct FRoleOverride
		TEST_METHOD(UserDefinedStruct__RoleOverride__RoleOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRoleOverride, 0x0000);
		}

		// struct FSectionOverride
		TEST_METHOD(UserDefinedStruct__SectionOverride__SectionOverride)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSectionOverride, 0x0000);
		}

		// struct FCachedPropertyPath
		TEST_METHOD(ScriptStruct__PropertyPath__CachedPropertyPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedPropertyPath, 0x0000);
		}

		// struct FPropertyPathSegment
		TEST_METHOD(ScriptStruct__PropertyPath__PropertyPathSegment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPropertyPathSegment, 0x0000);
		}
	};
}
